{"version":3,"sources":["../../src/middleware.js"],"names":["XVIZMiddlewareStack","middlewares","middlewareDispatch","msg","name","arrayLength","length","i","middleware","handler","args","apply"],"mappings":";;;;;;;;;;;;;IAkBaA,mB;AACX,+BAAYC,WAAZ,EAAyB;AAAA;AACvB,SAAKA,WAAL,GAAmBA,WAAnB;AACD;;;;gCAEW;AACV,WAAKC,kBAAL,CAAwB,WAAxB;AACD;;;4BAEOC,G,EAAK;AACX,WAAKD,kBAAL,CAAwB,SAAxB,EAAmCC,GAAnC;AACD;;;4BAEOA,G,EAAK;AACX,WAAKD,kBAAL,CAAwB,SAAxB,EAAmCC,GAAnC;AACD;;;+BAEUA,G,EAAK;AACd,WAAKD,kBAAL,CAAwB,YAAxB,EAAsCC,GAAtC;AACD;;;mCAEcA,G,EAAK;AAClB,WAAKD,kBAAL,CAAwB,gBAAxB,EAA0CC,GAA1C;AACD;;;kCAEaA,G,EAAK;AACjB,WAAKD,kBAAL,CAAwB,eAAxB,EAAyCC,GAAzC;AACD;;;uCAEkBA,G,EAAK;AACtB,WAAKD,kBAAL,CAAwB,oBAAxB,EAA8CC,GAA9C;AACD;;;8BAES;AACR,WAAKD,kBAAL,CAAwB,SAAxB;AACD;;;uCAEkBE,I,EAAMD,G,EAAK;AAC5B,UAAME,WAAW,GAAG,KAAKJ,WAAL,CAAiBK,MAArC;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAApB,EAAiCE,CAAC,EAAlC,EAAsC;AACpC,YAAMC,UAAU,GAAG,KAAKP,WAAL,CAAiBM,CAAjB,CAAnB;AAEA,YAAME,OAAO,GAAGD,UAAU,CAACJ,IAAD,CAA1B;;AAEA,YAAIK,OAAJ,EAAa;AACX,cAAIC,IAAI,GAAG,EAAX;;AAEA,cAAIP,GAAJ,EAAS;AACPO,YAAAA,IAAI,GAAG,CAACP,GAAD,CAAP;AACD;;AAEDM,UAAAA,OAAO,CAACE,KAAR,CAAcH,UAAd,EAA0BE,IAA1B;AACD;AACF;AACF","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * This takes a set of XVIZ middleware's and calls all there handlers\n * in order.\n */\nexport class XVIZMiddlewareStack {\n  constructor(middlewares) {\n    this.middlewares = middlewares;\n  }\n\n  onConnect() {\n    this.middlewareDispatch('onConnect');\n  }\n\n  onStart(msg) {\n    this.middlewareDispatch('onStart', msg);\n  }\n\n  onError(msg) {\n    this.middlewareDispatch('onError', msg);\n  }\n\n  onMetadata(msg) {\n    this.middlewareDispatch('onMetadata', msg);\n  }\n\n  onTransformLog(msg) {\n    this.middlewareDispatch('onTransformLog', msg);\n  }\n\n  onStateUpdate(msg) {\n    this.middlewareDispatch('onStateUpdate', msg);\n  }\n\n  onTransformLogDone(msg) {\n    this.middlewareDispatch('onTransformLogDone', msg);\n  }\n\n  onClose() {\n    this.middlewareDispatch('onClose');\n  }\n\n  middlewareDispatch(name, msg) {\n    const arrayLength = this.middlewares.length;\n    for (let i = 0; i < arrayLength; i++) {\n      const middleware = this.middlewares[i];\n\n      const handler = middleware[name];\n\n      if (handler) {\n        let args = [];\n\n        if (msg) {\n          args = [msg];\n        }\n\n        handler.apply(middleware, args);\n      }\n    }\n  }\n}\n"],"file":"middleware.js"}