{"version":3,"sources":["../../../src/builders/xviz-primitive-builder.js"],"names":["XVIZBaseBuilder","CATEGORY","PRIMITIVE_TYPES","XVIZPrimitiveBuilder","constructor","props","category","PRIMITIVE","reset","_primitives","image","data","_type","_flush","Uint8Array","validateError","validatePropSetOnce","_image","dimensions","widthPixel","heightPixel","width_px","height_px","polygon","vertices","_vertices","polyline","points","point","circle","position","radius","_radius","stadium","start","end","length","text","message","_text","colors","colorArray","_colors","style","_validatePrerequisite","_style","_validateStyle","id","identifier","_id","classes","classList","_classes","_validate","isImage","validateWarn","_streamId","_flushPrimitives","getData","Object","keys","stream","primitive","_formatPrimitive","arrayFieldName","array","undefined","push","obj","center","assign","haveBase","base","object_id","_validator","validateStyle"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/* eslint-disable camelcase */\nimport XVIZBaseBuilder from './xviz-base-builder';\nimport {CATEGORY, PRIMITIVE_TYPES} from './constant';\n\nexport default class XVIZPrimitiveBuilder extends XVIZBaseBuilder {\n  constructor(props) {\n    super({\n      category: CATEGORY.PRIMITIVE,\n      ...props\n    });\n\n    this.reset();\n    // primitives: {[streamId]: []}\n    this._primitives = {};\n  }\n\n  image(data) {\n    if (this._type) {\n      this._flush();\n    }\n\n    if (!(data instanceof Uint8Array || typeof data === 'string')) {\n      this.validateError('An image data must be a string or Uint8Array.');\n    }\n\n    this.validatePropSetOnce('_image');\n    this._type = PRIMITIVE_TYPES.image;\n\n    this._image = {\n      data\n    };\n\n    return this;\n  }\n\n  dimensions(widthPixel = null, heightPixel = null) {\n    if (!this._image) {\n      this.validateError('An image needs to be set first.');\n    }\n\n    this._image.width_px = widthPixel;\n    this._image.height_px = heightPixel;\n\n    return this;\n  }\n\n  polygon(vertices) {\n    if (this._type) {\n      this._flush();\n    }\n\n    this.validatePropSetOnce('_vertices');\n\n    this._vertices = vertices;\n    this._type = PRIMITIVE_TYPES.polygon;\n\n    return this;\n  }\n\n  polyline(vertices) {\n    if (this._type) {\n      this._flush();\n    }\n\n    this.validatePropSetOnce('_vertices');\n\n    this._vertices = vertices;\n    this._type = PRIMITIVE_TYPES.polyline;\n\n    return this;\n  }\n\n  points(vertices) {\n    if (this._type) {\n      this._flush();\n    }\n\n    this.validatePropSetOnce('_vertices');\n\n    this._vertices = vertices;\n    this._type = PRIMITIVE_TYPES.point;\n\n    return this;\n  }\n\n  circle(position, radius) {\n    if (this._type) {\n      this._flush();\n    }\n\n    this.validatePropSetOnce('_radius');\n\n    this.position(position);\n\n    this._radius = radius;\n    this._type = PRIMITIVE_TYPES.circle;\n\n    return this;\n  }\n\n  stadium(start, end, radius) {\n    if (this._type) {\n      this._flush();\n    }\n\n    this.validatePropSetOnce('_radius');\n\n    if (start.length !== 3) {\n      this.validateError(\n        `The start position must be of the form [x, y, z] where ${start} was provided`\n      );\n    }\n\n    if (end.length !== 3) {\n      this.validateError(\n        `The end position must be of the form [x, y, z] where ${end} was provided`\n      );\n    }\n\n    this._vertices = [start, end];\n    this._radius = radius;\n    this._type = PRIMITIVE_TYPES.stadium;\n\n    return this;\n  }\n\n  // TODO/Xintong validate `text` primitive\n  text(message) {\n    if (this._type) {\n      this._flush();\n    }\n\n    this._text = message;\n    this._type = 'text';\n    return this;\n  }\n\n  position(point) {\n    this.validatePropSetOnce('_vertices');\n\n    if (point.length !== 3) {\n      this.validateError(`A position must be of the form [x, y, z] where ${point} was provided`);\n    }\n\n    this._vertices = [point];\n    return this;\n  }\n\n  colors(colorArray) {\n    this.validatePropSetOnce('_colors');\n\n    this._colors = colorArray;\n    return this;\n  }\n\n  style(style) {\n    this._validatePrerequisite();\n    this.validatePropSetOnce('_style');\n\n    this._style = style;\n\n    this._validateStyle();\n\n    return this;\n  }\n\n  id(identifier) {\n    this._validatePrerequisite();\n    this.validatePropSetOnce('_id');\n\n    this._id = identifier;\n    return this;\n  }\n\n  classes(classList) {\n    this._validatePrerequisite();\n    this.validatePropSetOnce('_classes');\n\n    this._classes = classList;\n    return this;\n  }\n\n  _validate() {\n    super._validate();\n\n    const isImage = this._type === PRIMITIVE_TYPES.image;\n    if (isImage && (!this._image || !this._image.data)) {\n      this.validateWarn(`Stream ${this._streamId} image data are not provided.`);\n    }\n    if (!isImage && !this._vertices) {\n      this.validateWarn(`Stream ${this._streamId} primitives vertices are not provided.`);\n    }\n  }\n\n  _flush() {\n    this._validate();\n    this._flushPrimitives();\n  }\n\n  getData() {\n    if (this._type) {\n      this._flush();\n    }\n\n    if (Object.keys(this._primitives).length === 0) {\n      return null;\n    }\n\n    return this._primitives;\n  }\n\n  _validatePrerequisite() {\n    if (!this._type) {\n      this.validateError('Start from a primitive first, e.g polygon(), image(), etc.');\n    }\n  }\n\n  _flushPrimitives() {\n    let stream = this._primitives[this._streamId];\n    if (!stream) {\n      stream = {};\n      this._primitives[this._streamId] = stream;\n    }\n\n    const primitive = this._formatPrimitive();\n\n    // Each type like \"image\" has an \"images\" array, this hack saves a\n    // big switch statement.\n    const arrayFieldName = `${this._type}s`;\n    let array = stream[arrayFieldName];\n\n    // Make sure array exists\n    if (array === undefined) {\n      array = [];\n      stream[arrayFieldName] = array;\n    }\n\n    // Now add the primitive to it\n    array.push(primitive);\n\n    this.reset();\n  }\n\n  /* eslint-disable complexity */\n  _formatPrimitive() {\n    const obj = {};\n\n    switch (this._type) {\n      case 'polygon':\n      case 'polyline':\n        obj.vertices = this._vertices;\n        break;\n      case 'point':\n        if (this._colors) {\n          obj.colors = this._colors;\n        }\n        obj.points = this._vertices;\n        break;\n      case 'text':\n        obj.position = this._vertices[0];\n        obj.text = this._text;\n        break;\n      case 'circle':\n        obj.center = this._vertices[0];\n        obj.radius = this._radius;\n        break;\n      case 'stadium':\n        obj.start = this._vertices[0];\n        obj.end = this._vertices[1];\n        obj.radius = this._radius;\n        break;\n      case 'image':\n        if (this._vertices) {\n          this._image.position = this._vertices[0];\n        }\n        Object.assign(obj, this._image);\n        break;\n      default:\n    }\n\n    let haveBase = false;\n    const base = {};\n\n    if (this._id) {\n      haveBase = true;\n      base.object_id = this._id;\n    }\n\n    if (this._style) {\n      haveBase = true;\n      base.style = this._style;\n    }\n\n    if (this._classes) {\n      haveBase = true;\n      base.classes = this._classes;\n    }\n\n    if (haveBase) {\n      obj.base = base;\n    }\n\n    return obj;\n  }\n  /* eslint-enable complexity */\n\n  _validateStyle() {\n    this._validator.validateStyle(this);\n  }\n\n  reset() {\n    this._type = null;\n\n    this._image = null;\n    this._vertices = null;\n    this._radius = null;\n    this._text = null;\n    this._colors = null;\n\n    this._id = null;\n    this._style = null;\n    this._classes = null;\n  }\n}\n"],"file":"xviz-primitive-builder.js"}