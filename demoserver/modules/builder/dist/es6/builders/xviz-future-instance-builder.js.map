{"version":3,"sources":["../../../src/builders/xviz-future-instance-builder.js"],"names":["XVIZPrimitiveBuilder","insertTimestamp","CATEGORY","XVIZFutureInstanceBuilder","constructor","props","category","FUTURE_INSTANCE","reset","_futures","_timestamp","timestamp","_ts","_flush","future","_streamId","timestamps","primitives","primitive","_formatPrimitive","update","_type","getData","Object","keys","length"],"mappings":";;;;;;AAeA,OAAOA,oBAAP,MAAiC,0BAAjC;AACA,SAAQC,eAAR,QAA8B,UAA9B;AACA,SAAQC,QAAR,QAAuB,YAAvB;AAEA,eAAe,MAAMC,yBAAN,SAAwCH,oBAAxC,CAA6D;AAC1EI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,0CACKA,KADL;AAEEC,MAAAA,QAAQ,EAAEJ,QAAQ,CAACK;AAFrB;AAKA,SAAKC,KAAL;AAEA,SAAKC,QAAL,GAAgB,EAAhB;AACD;;AAEDC,EAAAA,UAAU,CAACC,SAAD,EAAY;AACpB,SAAKC,GAAL,GAAWD,SAAX;AACA,WAAO,IAAP;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAIC,MAAM,GAAG,KAAKL,QAAL,CAAc,KAAKM,SAAnB,CAAb;;AACA,QAAI,CAACD,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG;AACPE,QAAAA,UAAU,EAAE,EADL;AAEPC,QAAAA,UAAU,EAAE;AAFL,OAAT;AAIA,WAAKR,QAAL,CAAc,KAAKM,SAAnB,IAAgCD,MAAhC;AACD;;AAED,UAAMI,SAAS,GAAG,KAAKC,gBAAL,EAAlB;;AAEA,UAAM;AAACH,MAAAA,UAAD;AAAaC,MAAAA;AAAb,QAA2BH,MAAjC;AAIA,UAAMM,MAAM,GAAG,EAAf;AACAA,IAAAA,MAAM,WAAI,KAAKC,KAAT,OAAN,GAA2B,CAACH,SAAD,CAA3B;AAGAjB,IAAAA,eAAe,CAACe,UAAD,EAAaC,UAAb,EAAyB,KAAKL,GAA9B,YAAsC,KAAKS,KAA3C,QAAqDH,SAArD,CAAf;AAEA,SAAKV,KAAL;AACD;;AAEDc,EAAAA,OAAO,GAAG;AACR,QAAI,KAAKD,KAAT,EAAgB;AACd,WAAKR,MAAL;AACD;;AAED,QAAIU,MAAM,CAACC,IAAP,CAAY,KAAKf,QAAjB,EAA2BgB,MAA3B,KAAsC,CAA1C,EAA6C;AAC3C,aAAO,IAAP;AACD;;AAED,WAAO,KAAKhB,QAAZ;AACD;;AAEDD,EAAAA,KAAK,GAAG;AACN,UAAMA,KAAN;AACD;;AAxDyE","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/* eslint-disable camelcase */\nimport XVIZPrimitiveBuilder from './xviz-primitive-builder';\nimport {insertTimestamp} from '../utils';\nimport {CATEGORY} from './constant';\n\nexport default class XVIZFutureInstanceBuilder extends XVIZPrimitiveBuilder {\n  constructor(props) {\n    super({\n      ...props,\n      category: CATEGORY.FUTURE_INSTANCE\n    });\n\n    this.reset();\n    // futures: {[streamId]: {...,timestamps: [], primitives: []}}\n    this._futures = {};\n  }\n\n  _timestamp(timestamp) {\n    this._ts = timestamp;\n    return this;\n  }\n\n  _flush() {\n    let future = this._futures[this._streamId];\n    if (!future) {\n      future = {\n        timestamps: [],\n        primitives: []\n      };\n      this._futures[this._streamId] = future;\n    }\n\n    const primitive = this._formatPrimitive();\n\n    const {timestamps, primitives} = future;\n\n    // Each type like \"image\" has an \"images\" array, this hack saves a\n    // big switch statement.\n    const update = {};\n    update[`${this._type}s`] = [primitive];\n\n    // insert ts and primitive to the position based on timestamp order\n    insertTimestamp(timestamps, primitives, this._ts, `${this._type}s`, primitive);\n\n    this.reset();\n  }\n\n  getData() {\n    if (this._type) {\n      this._flush();\n    }\n\n    if (Object.keys(this._futures).length === 0) {\n      return null;\n    }\n\n    return this._futures;\n  }\n\n  reset() {\n    super.reset();\n  }\n}\n"],"file":"xviz-future-instance-builder.js"}