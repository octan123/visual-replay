{"version":3,"sources":["../../../src/utils/load-uri.js"],"names":["loadUri","uri","rootFolder","path","module","require","fs","startsWith","Promise","reject","Error","resolve","parseDataUri","filePath","join","readFileAsync","then","buffer","dataIndex","indexOf","mimeType","slice","Buffer","trim","decodeURIComponent"],"mappings":";;;;;;;;AAkBO,SAASA,OAAT,CAAiBC,GAAjB,EAAwC;AAAA,MAAlBC,UAAkB,uEAAL,GAAK;;AAC7C,MAAMC,IAAI,GAAGC,MAAM,CAACC,OAAP,CAAe,MAAf,CAAb;;AACA,MAAMC,EAAE,GAAGF,MAAM,CAACC,OAAP,CAAe,IAAf,CAAX;;AAEA,MAAIJ,GAAG,CAACM,UAAJ,CAAe,OAAf,KAA2BN,GAAG,CAACM,UAAJ,CAAe,QAAf,CAA/B,EAAyD;AACvD,WAAOC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,+CAAV,CAAf,CAAP;AACD;;AAED,MAAIT,GAAG,CAACM,UAAJ,CAAe,OAAf,CAAJ,EAA6B;AAC3B,WAAOC,OAAO,CAACG,OAAR,CAAgBC,YAAY,CAACX,GAAD,CAA5B,CAAP;AACD;;AAED,MAAMY,QAAQ,GAAGV,IAAI,CAACW,IAAL,CAAWZ,UAAU,GAAG,GAAxB,EAA8BD,GAA9B,CAAjB;AACA,SAAOK,EAAE,CAACS,aAAH,CAAiBF,QAAjB,EAA2BG,IAA3B,CAAgC,UAAAC,MAAM;AAAA,WAAK;AAACA,MAAAA,MAAM,EAANA;AAAD,KAAL;AAAA,GAAtC,CAAP;AACD;;AAQM,SAASL,YAAT,CAAsBX,GAAtB,EAA2B;AAChC,MAAMiB,SAAS,GAAGjB,GAAG,CAACkB,OAAJ,CAAY,GAAZ,CAAlB;AAEA,MAAIF,MAAJ;AACA,MAAIG,QAAJ;;AACA,MAAInB,GAAG,CAACoB,KAAJ,CAAUH,SAAS,GAAG,CAAtB,EAAyBA,SAAzB,MAAwC,SAA5C,EAAuD;AACrDD,IAAAA,MAAM,GAAG,IAAIK,MAAJ,CAAWrB,GAAG,CAACoB,KAAJ,CAAUH,SAAS,GAAG,CAAtB,CAAX,EAAqC,QAArC,CAAT;AACAE,IAAAA,QAAQ,GAAGnB,GAAG,CAACoB,KAAJ,CAAU,CAAV,EAAaH,SAAS,GAAG,CAAzB,EAA4BK,IAA5B,EAAX;AACD,GAHD,MAGO;AACLN,IAAAA,MAAM,GAAG,IAAIK,MAAJ,CAAWE,kBAAkB,CAACvB,GAAG,CAACoB,KAAJ,CAAUH,SAAS,GAAG,CAAtB,CAAD,CAA7B,CAAT;AACAE,IAAAA,QAAQ,GAAGnB,GAAG,CAACoB,KAAJ,CAAU,CAAV,EAAaH,SAAb,EAAwBK,IAAxB,EAAX;AACD;;AAED,MAAI,CAACH,QAAL,EAAe;AACbA,IAAAA,QAAQ,GAAG,6BAAX;AACD,GAFD,MAEO,IAAIA,QAAQ,CAAC,CAAD,CAAR,KAAgB,GAApB,EAAyB;AAC9BA,IAAAA,QAAQ,uBAAgBA,QAAhB,CAAR;AACD;;AAED,SAAO;AAACH,IAAAA,MAAM,EAANA,MAAD;AAASG,IAAAA,QAAQ,EAARA;AAAT,GAAP;AACD","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Based on binary-gltf-utils under MIT license: Copyright (c) 2016-17 Karl Cheng\n\n/* global Buffer */\n\nexport function loadUri(uri, rootFolder = '.') {\n  const path = module.require('path');\n  const fs = module.require('fs');\n\n  if (uri.startsWith('http:') || uri.startsWith('https:')) {\n    return Promise.reject(new Error('request based loading of URIs not implemented'));\n  }\n\n  if (uri.startsWith('data:')) {\n    return Promise.resolve(parseDataUri(uri));\n  }\n\n  const filePath = path.join((rootFolder = '.'), uri);\n  return fs.readFileAsync(filePath).then(buffer => ({buffer}));\n}\n\n/**\n * Parses a data URI into a buffer, as well as retrieving its declared MIME type.\n *\n * @param {string} uri - a data URI (assumed to be valid)\n * @returns {Object} { buffer, mimeType }\n */\nexport function parseDataUri(uri) {\n  const dataIndex = uri.indexOf(',');\n\n  let buffer;\n  let mimeType;\n  if (uri.slice(dataIndex - 7, dataIndex) === ';base64') {\n    buffer = new Buffer(uri.slice(dataIndex + 1), 'base64');\n    mimeType = uri.slice(5, dataIndex - 7).trim();\n  } else {\n    buffer = new Buffer(decodeURIComponent(uri.slice(dataIndex + 1)));\n    mimeType = uri.slice(5, dataIndex).trim();\n  }\n\n  if (!mimeType) {\n    mimeType = 'text/plain;charset=US-ASCII';\n  } else if (mimeType[0] === ';') {\n    mimeType = `text/plain${mimeType}`;\n  }\n\n  return {buffer, mimeType};\n}\n"],"file":"load-uri.js"}