{"version":3,"sources":["../../../../src/builders/declarative-ui/xviz-ui-builder.js"],"names":["XVIZPanelBuilder","XVIZContainerBuilder","XVIZMetricBuilder","XVIZPlotBuilder","XVIZSelectBuilder","XVIZTableBuilder","XVIZTreeTableBuilder","XVIZVideoBuilder","snakeToCamel","defaultValidateWarn","console","warn","defaultValidateError","error","UI_BUILDER_MAP","panel","container","metric","plot","select","table","treetable","video","XVIZUIBuilder","options","_validateWarn","validateWarn","_validateError","validateError","_children","Object","keys","map","type","camelType","props","_createUIBuilder","reduce","ui","child","childConfig","getUI","name","push","root"],"mappings":";;;;;;;;AAgBA,OAAOA,gBAAP,MAA6B,sBAA7B;AAEA,OAAOC,oBAAP,MAAiC,0BAAjC;AAEA,OAAOC,iBAAP,MAA8B,uBAA9B;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,OAAOC,iBAAP,MAA8B,uBAA9B;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,oBAAP,MAAiC,2BAAjC;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AAEA,SAAQC,YAAR,QAA2B,SAA3B;AAEA,IAAMC,mBAAmB,GAAGC,OAAO,CAACC,IAApC;AACA,IAAMC,oBAAoB,GAAGF,OAAO,CAACG,KAArC;AAGA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAEf,gBADc;AAGrBgB,EAAAA,SAAS,EAAEf,oBAHU;AAKrBgB,EAAAA,MAAM,EAAEf,iBALa;AAMrBgB,EAAAA,IAAI,EAAEf,eANe;AAOrBgB,EAAAA,MAAM,EAAEf,iBAPa;AAQrBgB,EAAAA,KAAK,EAAEf,gBARc;AASrBgB,EAAAA,SAAS,EAAEf,oBATU;AAUrBgB,EAAAA,KAAK,EAAEf;AAVc,CAAvB;;IAaqBgB,a;AACnB,2BAA0B;AAAA;;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AACxB,SAAKC,aAAL,GAAqBD,OAAO,CAACE,YAAR,IAAwBjB,mBAA7C;AACA,SAAKkB,cAAL,GAAsBH,OAAO,CAACI,aAAR,IAAyBhB,oBAA/C;AAEA,SAAKiB,SAAL,GAAiB,EAAjB;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAYjB,cAAZ,EAA4BkB,GAA5B,CAAgC,UAAAC,IAAI,EAAI;AAItC,UAAMC,SAAS,GAAG1B,YAAY,CAACyB,IAAD,CAA9B;;AACA,MAAA,KAAI,CAACC,SAAD,CAAJ,GAAkB,UAAAC,KAAK,EAAI;AACzB,eAAO,KAAI,CAACC,gBAAL,CAAsBH,IAAtB,EAA4BE,KAA5B,CAAP;AACD,OAFD;AAGD,KARD;AASD;;;;4BAEO;AACN,aAAO,KAAKN,SAAL,CAAeQ,MAAf,CAAsB,UAACC,EAAD,EAAKC,KAAL,EAAe;AAC1C,YAAMC,WAAW,GAAGD,KAAK,CAACE,KAAN,EAApB;AACAH,QAAAA,EAAE,CAACE,WAAW,CAACE,IAAb,CAAF,GAAuBF,WAAvB;AACA,eAAOF,EAAP;AACD,OAJM,EAIJ,EAJI,CAAP;AAKD;;;0BAEKC,M,EAAO;AACX,UAAI,EAAEA,MAAK,YAAYvC,gBAAnB,CAAJ,EAA0C;AACxC,aAAK2B,cAAL,CAAoB,wCAApB;AACD;;AACD,WAAKE,SAAL,CAAec,IAAf,CAAoBJ,MAApB;;AACA,aAAOA,MAAP;AACD;;;qCAEgBN,I,EAAME,K,EAAO;AAC5B,aAAO,IAAIrB,cAAc,CAACmB,IAAD,CAAlB,iCACFE,KADE;AAELT,QAAAA,YAAY,EAAE,KAAKD,aAFd;AAGLG,QAAAA,aAAa,EAAE,KAAKD,cAHf;AAILiB,QAAAA,IAAI,EAAE;AAJD,SAAP;AAMD;;;;;;SAzCkBrB,a","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/* global console */\n/* eslint-disable no-console */\nimport XVIZPanelBuilder from './xviz-panel-builder';\n\nimport XVIZContainerBuilder from './xviz-container-builder';\n\nimport XVIZMetricBuilder from './xviz-metric-builder';\nimport XVIZPlotBuilder from './xviz-plot-builder';\nimport XVIZSelectBuilder from './xviz-select-builder';\nimport XVIZTableBuilder from './xviz-table-builder';\nimport XVIZTreeTableBuilder from './xviz-tree-table-builder';\nimport XVIZVideoBuilder from './xviz-video-builder';\n\nimport {snakeToCamel} from './utils';\n\nconst defaultValidateWarn = console.warn;\nconst defaultValidateError = console.error;\n\n// Should be kept in sync with UI_TYPES in constants.js\nconst UI_BUILDER_MAP = {\n  panel: XVIZPanelBuilder,\n\n  container: XVIZContainerBuilder,\n\n  metric: XVIZMetricBuilder,\n  plot: XVIZPlotBuilder,\n  select: XVIZSelectBuilder,\n  table: XVIZTableBuilder,\n  treetable: XVIZTreeTableBuilder,\n  video: XVIZVideoBuilder\n};\n\nexport default class XVIZUIBuilder {\n  constructor(options = {}) {\n    this._validateWarn = options.validateWarn || defaultValidateWarn;\n    this._validateError = options.validateError || defaultValidateError;\n\n    this._children = [];\n\n    Object.keys(UI_BUILDER_MAP).map(type => {\n      // add UI builders, e.g.\n      // type `panel`\n      //  - this.panel = (props) => this._setChild('panel', props);\n      const camelType = snakeToCamel(type);\n      this[camelType] = props => {\n        return this._createUIBuilder(type, props);\n      };\n    });\n  }\n\n  getUI() {\n    return this._children.reduce((ui, child) => {\n      const childConfig = child.getUI();\n      ui[childConfig.name] = childConfig;\n      return ui;\n    }, {});\n  }\n\n  child(child) {\n    if (!(child instanceof XVIZPanelBuilder)) {\n      this._validateError('Top level UI element should be `Panel`');\n    }\n    this._children.push(child);\n    return child;\n  }\n\n  _createUIBuilder(type, props) {\n    return new UI_BUILDER_MAP[type]({\n      ...props,\n      validateWarn: this._validateWarn,\n      validateError: this._validateError,\n      root: this\n    });\n  }\n}\n"],"file":"xviz-ui-builder.js"}