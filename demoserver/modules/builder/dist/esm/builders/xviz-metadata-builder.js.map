{"version":3,"sources":["../../../src/builders/xviz-metadata-builder.js"],"names":["_Pose","Pose","Matrix4","CATEGORY","defaultValidateWarn","console","warn","defaultValidateError","error","XVIZMetadataBuilder","validateWarn","validateError","_validateWarn","_validateError","data","streams","streamId","tmp_ui_builder","tmp_stream","tmp_matrix_transform","tmp_pose_transform","tmp_log_info","tmp_type","_flush","metadata","version","Object","keys","length","log_info","panels","getUI","ui_config","panelKey","name","config","time","start_time","end_time","xvizUIBuilder","category","toUpperCase","t","source","u","units","coordinate","matrix","Array","position","orientation","x","y","z","roll","pitch","yaw","pose","getTransformationMatrix","style","stream_style","streamRule","style_classes","push","streamData","transform","PRIMITIVE","FUTURE_INSTANCE","primitive_type","VARIABLE","TIME_SERIES","scalar_type","_reset"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Note: XVIZ data structures use snake_case\n/* eslint-disable camelcase */\nimport {_Pose as Pose, Matrix4} from 'math.gl';\nimport {CATEGORY} from './constant';\n\n/* global console */\n/* eslint-disable no-console */\nconst defaultValidateWarn = console.warn;\nconst defaultValidateError = console.error;\n/* eslint-enable no-console */\n\nexport default class XVIZMetadataBuilder {\n  constructor({validateWarn = defaultValidateWarn, validateError = defaultValidateError} = {}) {\n    this._validateWarn = validateWarn;\n    this._validateError = validateError;\n\n    this.data = {\n      streams: {}\n    };\n\n    this.streamId = null;\n    this.tmp_ui_builder = null;\n    this.tmp_stream = {};\n    this.tmp_matrix_transform = null;\n    this.tmp_pose_transform = null;\n    this.tmp_log_info = {};\n    this.tmp_type = null;\n    // TODO:\n    // cameras\n    // stream_aliases\n    // ui_config\n    // map_info\n    // vehicle_info\n  }\n\n  getMetadata() {\n    this._flush();\n\n    const metadata = {\n      version: '2.0.0',\n      ...this.data\n    };\n\n    if (Object.keys(this.tmp_log_info).length > 0) {\n      metadata.log_info = this.tmp_log_info;\n    }\n    if (this.tmp_ui_builder) {\n      const panels = this.tmp_ui_builder.getUI();\n      metadata.ui_config = {};\n\n      // Wrap the individual panels in the ui_panel_info structure\n      for (const panelKey of Object.keys(panels)) {\n        metadata.ui_config[panelKey] = {\n          name: panels[panelKey].name,\n          config: panels[panelKey]\n        };\n      }\n    }\n\n    return metadata;\n  }\n\n  startTime(time) {\n    this.tmp_log_info.start_time = time;\n    return this;\n  }\n\n  endTime(time) {\n    this.tmp_log_info.end_time = time;\n    return this;\n  }\n\n  ui(xvizUIBuilder) {\n    this.tmp_ui_builder = xvizUIBuilder;\n    return this;\n  }\n\n  stream(streamId) {\n    if (this.streamId) {\n      this._flush();\n    }\n\n    this.streamId = streamId;\n    return this;\n  }\n\n  // Used for validation in XVIZBuilder\n  category(category) {\n    this.tmp_stream.category = category.toUpperCase();\n    return this;\n  }\n\n  // Used for validation in XVIZBuilder\n  type(t) {\n    this.tmp_type = t.toUpperCase();\n    return this;\n  }\n\n  source(source) {\n    this.tmp_stream.source = source;\n    return this;\n  }\n\n  unit(u) {\n    this.tmp_stream.units = u;\n    return this;\n  }\n\n  coordinate(coordinate) {\n    this.tmp_stream.coordinate = coordinate;\n    return this;\n  }\n\n  transformMatrix(matrix) {\n    if (matrix instanceof Array) {\n      matrix = new Matrix4(matrix);\n    }\n\n    this.tmp_matrix_transform = matrix;\n    return this;\n  }\n\n  pose(position = {}, orientation = {}) {\n    const {x = 0, y = 0, z = 0} = position;\n    const {roll = 0, pitch = 0, yaw = 0} = orientation;\n    const pose = new Pose({x, y, z, roll, pitch, yaw});\n    this.tmp_pose_transform = pose.getTransformationMatrix();\n    return this;\n  }\n\n  streamStyle(style) {\n    this.tmp_stream.stream_style = style;\n    return this;\n  }\n\n  styleClass(name, style) {\n    if (!this.streamId) {\n      this._validateError('A stream must set before adding a style rule.');\n      return this;\n    }\n\n    const streamRule = {\n      name,\n      style\n    };\n\n    if (!this.tmp_stream.style_classes) {\n      this.tmp_stream.style_classes = [streamRule];\n    } else {\n      this.tmp_stream.style_classes.push(streamRule);\n    }\n    return this;\n  }\n\n  logInfo(data) {\n    this.tmp_log_info = {...data, ...this.tmp_log_info};\n    return this;\n  }\n\n  _flush() {\n    if (this.streamId) {\n      const streamData = this.tmp_stream;\n\n      let transform = null;\n      if (this.tmp_pose_transform && this.tmp_matrix_transform) {\n        this._validateError('`pose` and `transformMatrix` cannot be applied at the same time.');\n      } else {\n        transform = this.tmp_matrix_transform || this.tmp_pose_transform;\n      }\n\n      if (transform) {\n        streamData.transform = transform;\n      }\n\n      if (\n        streamData.category === CATEGORY.PRIMITIVE ||\n        streamData.category === CATEGORY.FUTURE_INSTANCE\n      ) {\n        streamData.primitive_type = this.tmp_type;\n      } else if (\n        streamData.category === CATEGORY.VARIABLE ||\n        streamData.category === CATEGORY.TIME_SERIES\n      ) {\n        streamData.scalar_type = this.tmp_type;\n      }\n\n      this.data.streams[this.streamId] = streamData;\n    }\n\n    this._reset();\n  }\n\n  _reset() {\n    this.streamId = null;\n    this.tmp_stream = {};\n    this.tmp_matrix_transform = null;\n    this.tmp_pose_transform = null;\n    this.tmp_type = null;\n  }\n}\n"],"file":"xviz-metadata-builder.js"}