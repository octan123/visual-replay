{"version":3,"sources":["../../../src/messages/nav-path-converter.js"],"names":["Converter","NavPath","constructor","config","name","messageType","convertMessage","frame","xvizBuilder","data","topic","d","polyline","message","poses","map","p","position","pose","x","y","primitive","xvizStream","getMetadata","xvizMetaBuilder","stream","coordinate","category","type","streamStyle","stroke_color","stroke_width","stroke_width_min_pixels"],"mappings":"AAcA,OAAOA,SAAP,MAAsB,aAAtB;AAEA,OAAO,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AACrCE,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,UAAMA,MAAN;AACD;;AAED,aAAWC,IAAX,GAAkB;AAChB,WAAO,SAAP;AACD;;AAED,aAAWC,WAAX,GAAyB;AACvB,WAAO,eAAP;AACD;;AAED,QAAMC,cAAN,CAAqBC,KAArB,EAA4BC,WAA5B,EAAyC;AACvC,UAAMC,IAAI,GAAGF,KAAK,CAAC,KAAKG,KAAN,CAAlB;;AACA,QAAI,CAACD,IAAL,EAAW;AACT;AACD;;AAED,SAAK,MAAME,CAAX,IAAgBF,IAAhB,EAAsB;AACpB,YAAMG,QAAQ,GAAGD,CAAC,CAACE,OAAF,CAAUC,KAAV,CAAgBC,GAAhB,CAAoBC,CAAC,IAAI;AACxC,cAAM;AAACC,UAAAA;AAAD,YAAaD,CAAC,CAACE,IAArB;AACA,eAAO,CAACD,QAAQ,CAACE,CAAV,EAAaF,QAAQ,CAACG,CAAtB,EAAyB,CAAzB,CAAP;AACD,OAHgB,CAAjB;AAKAZ,MAAAA,WAAW,CAACa,SAAZ,CAAsB,KAAKC,UAA3B,EAAuCV,QAAvC,CAAgDA,QAAhD;AACD;AACF;;AAEDW,EAAAA,WAAW,CAACC,eAAD,EAAkB;AAI3BA,IAAAA,eAAe,CACZC,MADH,CACU,KAAKH,UADf,EAEGI,UAFH,CAEc,UAFd,EAGGC,QAHH,CAGY,WAHZ,EAIGC,IAJH,CAIQ,UAJR,EAQGC,WARH,CAQe;AACXC,MAAAA,YAAY,EAAE,WADH;AAEXC,MAAAA,YAAY,EAAE,GAFH;AAGXC,MAAAA,uBAAuB,EAAE;AAHd,KARf;AAaD;;AA9CoC","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable camelcase */\nimport Converter from './converter';\n\nexport class NavPath extends Converter {\n  constructor(config) {\n    super(config);\n  }\n\n  static get name() {\n    return 'NavPath';\n  }\n\n  static get messageType() {\n    return 'nav_msgs/Path';\n  }\n\n  async convertMessage(frame, xvizBuilder) {\n    const data = frame[this.topic];\n    if (!data) {\n      return;\n    }\n\n    for (const d of data) {\n      const polyline = d.message.poses.map(p => {\n        const {position} = p.pose;\n        return [position.x, position.y, 0];\n      });\n\n      xvizBuilder.primitive(this.xvizStream).polyline(polyline);\n    }\n  }\n\n  getMetadata(xvizMetaBuilder) {\n    // You can see the type of metadata we allow to define.\n    // This helps validate data consistency and has automatic\n    // behavior tied to the viewer.\n    xvizMetaBuilder\n      .stream(this.xvizStream)\n      .coordinate('IDENTITY')\n      .category('primitive')\n      .type('polyline')\n\n      // This styling information is applied to *all* objects for this stream.\n      // It is possible to apply inline styling on individual objects.\n      .streamStyle({\n        stroke_color: '#57AD57AA',\n        stroke_width: 1.4,\n        stroke_width_min_pixels: 1\n      });\n  }\n}\n"],"file":"nav-path-converter.js"}