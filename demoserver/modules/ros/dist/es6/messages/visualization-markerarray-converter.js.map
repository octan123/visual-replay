{"version":3,"sources":["../../../src/messages/visualization-markerarray-converter.js"],"names":["Converter","_","Vector3","ACTION_ADD","ACTION_DELETE","ACTION_DELETE_ALL","NAMESPACE_SEPARATOR","VisualizationMarkerArray","constructor","config","acceptMarker","markersMap","ARROW_STREAM","xvizStream","join","SPHERE_STREAM","LINESTRIP_STREAM","LINELIST_STREAM","TEXT_STREAM","name","messageType","convertMessage","frame","xvizBuilder","messages","topic","message","markers","forEach","marker","_processMarker","writeMarkers","getMetadata","xvizMetaBuilder","stream","coordinate","category","type","streamStyle","stroke_width","stroke_width_min_pixels","size","fill_color","WRITERS","_writeArrow","bind","_writeSphere","_writeLineStrip","_writeLineList","_writeText","forOwn","writer","points","_makeArrow","pose","primitive","polyline","style","stroke_color","_toColor","id","_getMarkerId","RADIUS","scale","x","_mapPoints","y","z","circle","lines","chunk","line","index","position","text","color","colors","r","g","b","a","map","v","Math","round","origin","p","clone","add","toArray","_makeVector","_makePoint","base","vector","vecA","pCrossVec","pCross","vecB","leftPt","rotateZ","radians","PI","rightPt","push","markerId","action","ns","pickBy","value","key","startsWith"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable camelcase, no-invalid-this */\nimport Converter from './converter';\nimport _ from 'lodash';\nimport {Vector3} from 'math.gl';\n\nconst ACTION_ADD = 0;\nconst ACTION_DELETE = 2;\nconst ACTION_DELETE_ALL = 3;\n\nconst NAMESPACE_SEPARATOR = '/';\n\n/**\n * Handles converting MarkerArray messages\n */\nexport class VisualizationMarkerArray extends Converter {\n  constructor(config) {\n    // acceptMarker /* Function to filter the markers to use (if not defined, uses all markers) */\n    super(config);\n    this.acceptMarker = this.config.acceptMarker || (() => true);\n\n    this.markersMap = {};\n\n    this.ARROW_STREAM = [this.xvizStream, 'arrow'].join(NAMESPACE_SEPARATOR);\n    this.SPHERE_STREAM = [this.xvizStream, 'sphere'].join(NAMESPACE_SEPARATOR);\n    this.LINESTRIP_STREAM = [this.xvizStream, 'linestrip'].join(NAMESPACE_SEPARATOR);\n    this.LINELIST_STREAM = [this.xvizStream, 'linelist'].join(NAMESPACE_SEPARATOR);\n    this.TEXT_STREAM = [this.xvizStream, 'text'].join(NAMESPACE_SEPARATOR);\n  }\n\n  static get name() {\n    return 'VisualizationMarkerArray';\n  }\n\n  static get messageType() {\n    return 'visualization_msgs/MarkerArray';\n  }\n\n  convertMessage(frame, xvizBuilder) {\n    const messages = frame[this.topic];\n    if (messages) {\n      for (const {message} of messages) {\n        message.markers.forEach(marker => this._processMarker(marker));\n      }\n    }\n\n    this.writeMarkers(xvizBuilder);\n  }\n\n  getMetadata(xvizMetaBuilder) {\n    xvizMetaBuilder\n      .stream(this.ARROW_STREAM)\n      .coordinate('IDENTITY')\n      .category('primitive')\n      .type('polyline')\n\n      .stream(this.LINESTRIP_STREAM)\n      .coordinate('IDENTITY')\n      .category('primitive')\n      .type('polyline')\n      .streamStyle({\n        stroke_width: 0.2,\n        stroke_width_min_pixels: 1\n      })\n\n      .stream(this.LINELIST_STREAM)\n      .coordinate('IDENTITY')\n      .category('primitive')\n      .type('polyline')\n      .streamStyle({\n        stroke_width: 0.2,\n        stroke_width_min_pixels: 1\n      })\n\n      .stream(this.SPHERE_STREAM)\n      .coordinate('IDENTITY')\n      .category('primitive')\n      .type('circle')\n      .streamStyle({\n        stroke_width: 0.2\n      })\n\n      .stream(this.TEXT_STREAM)\n      .category('primitive')\n      .type('text')\n      .streamStyle({\n        size: 18,\n        fill_color: '#0000FF'\n      });\n  }\n\n  writeMarkers(xvizBuilder) {\n    /* Unimplemented markers\n    uint8 CUBE=1\n    uint8 CYLINDER=3\n    uint8 CUBE_LIST=6\n    uint8 SPHERE_LIST=7\n    uint8 POINTS=8\n    uint8 MESH_RESOURCE=10\n    uint8 TRIANGLE_LIST=11\n    */\n\n    const WRITERS = {\n      '0': this._writeArrow.bind(this),\n      '2': this._writeSphere.bind(this),\n      '4': this._writeLineStrip.bind(this),\n      '5': this._writeLineList.bind(this),\n      '9': this._writeText.bind(this)\n    };\n\n    /*\n    const writerName = {\n      '0': 'Arrow',\n      '2': 'Sphere',\n      '4': 'LineStrip',\n      '5': 'LineList',\n      '9': 'Text'\n    };\n    */\n\n    _.forOwn(this.markersMap, marker => {\n      const writer = WRITERS[marker.type];\n      if (writer) {\n        writer(marker, xvizBuilder);\n      }\n    });\n  }\n\n  _writeArrow(marker, xvizBuilder) {\n    const points = this._makeArrow(marker.points, marker.pose);\n    xvizBuilder\n      .primitive(this.ARROW_STREAM)\n      .polyline(points)\n      .style({stroke_color: this._toColor(marker)})\n      .id(this._getMarkerId(marker));\n  }\n\n  _writeSphere(marker, xvizBuilder) {\n    const RADIUS = marker.scale.x / 2;\n    const points = this._mapPoints([{x: 0, y: 0, z: 0}], marker.pose);\n\n    xvizBuilder\n      .primitive(this.SPHERE_STREAM)\n      .circle(points[0], RADIUS)\n      .style({fill_color: this._toColor(marker)})\n      .id(this._getMarkerId(marker));\n  }\n\n  _writeLineStrip(marker, xvizBuilder) {\n    xvizBuilder\n      .primitive(this.LINESTRIP_STREAM)\n      .polyline(this._mapPoints(marker.points, marker.pose))\n      .style({stroke_color: this._toColor(marker)})\n      .id(this._getMarkerId(marker));\n  }\n\n  _writeLineList(marker, xvizBuilder) {\n    const lines = _.chunk(marker.points, 2);\n    lines.forEach((line, index) => {\n      xvizBuilder\n        .primitive(this.LINELIST_STREAM)\n        .polyline(this._mapPoints(line, marker.pose))\n        .style({stroke_color: this._toColor(marker)})\n        .id([this._getMarkerId(marker), index].join(NAMESPACE_SEPARATOR));\n    });\n  }\n\n  _writeText(marker, xvizBuilder) {\n    const points = this._mapPoints(\n      [\n        {x: 0, y: 0, z: 2} // z=2 to float above\n      ],\n      marker.pose\n    );\n\n    xvizBuilder\n      .primitive(this.TEXT_STREAM)\n      .position(points[0])\n      .text(marker.text);\n  }\n\n  _toColor(marker) {\n    const color = marker.color || (marker.colors || [])[0];\n    if (color) {\n      return [color.r, color.g, color.b, color.a].map(v => Math.round(v * 255));\n    }\n\n    return [128, 128, 128, 255]; // default color\n  }\n\n  _mapPoints(points, pose) {\n    const origin = new Vector3([pose.position.x, pose.position.y, 0]);\n\n    return points.map(p => {\n      p = [p.x, p.y, 0];\n      return origin\n        .clone()\n        .add(p)\n        .toArray();\n    });\n  }\n\n  _makeVector(p) {\n    const v = [p[1][0] - p[0][0], p[1][1] - p[0][1], p[1][2] - p[0][2]];\n    return v;\n  }\n\n  _makePoint(base, vector) {\n    const v = [base[0] + vector[0], base[1] + vector[1], base[2] + vector[2]];\n    return v;\n  }\n\n  _makeArrow(points, pose) {\n    const p = this._mapPoints(points, pose);\n\n    // vector pointing to starting point\n    const vecA = new Vector3(this._makeVector([p[1], p[0]]));\n\n    const pCrossVec = vecA.clone().scale(0.3);\n    const pCross = this._makePoint(p[1], pCrossVec.toArray());\n\n    vecA.scale(0.5);\n    const vecB = vecA.clone();\n\n    const leftPt = this._makePoint(p[1], vecB.rotateZ({radians: -Math.PI / 4}).toArray());\n    const rightPt = this._makePoint(p[1], vecA.rotateZ({radians: Math.PI / 4}).toArray());\n\n    p.push(p[1]);\n\n    return [p[0], pCross, leftPt, p[1], rightPt, pCross];\n  }\n\n  _processMarker(marker) {\n    const markerId = this._getMarkerId(marker);\n\n    if (marker.action === ACTION_ADD) {\n      // We only run the acceptMarker filter for ADD because we want to avoid accidentally filtering\n      // out DELETE messages. It's safe to process all DELETE messages because worse case they're just a noop\n      // if they don't apply\n      if (this.acceptMarker(marker)) {\n        this.markersMap[markerId] = marker;\n      }\n    } else if (marker.action === ACTION_DELETE) {\n      if (!marker.ns) {\n        this.markersMap = {};\n      } else {\n        this.markersMap = _.pickBy(this.markersMap, (value, key) => {\n          // Using `startsWith` to support removing entire namespaces when an id isn't specified\n          return !key.startsWith(markerId);\n        });\n      }\n    } else if (marker.action === ACTION_DELETE_ALL) {\n      this.markersMap = {};\n    }\n  }\n\n  _getMarkerId(marker) {\n    return [marker.ns, marker.id].join(NAMESPACE_SEPARATOR);\n  }\n}\n"],"file":"visualization-markerarray-converter.js"}