{"version":3,"sources":["../../../src/messages/sensor-compressedimage-converter.js"],"names":["Converter","SensorCompressedImage","constructor","config","name","messageType","convertMessage","frame","xvizBuilder","msgs","topic","length","message","format","data","primitive","xvizStream","image","nodeBufferToTypedArray","getMetadata","xvizMetaBuilder","xb","stream","category","type","buffer","typedArray","Uint8Array"],"mappings":"AAaA,OAAOA,SAAP,MAAsB,aAAtB;AAEA,OAAO,MAAMC,qBAAN,SAAoCD,SAApC,CAA8C;AACnDE,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,UAAMA,MAAN;AACD;;AAED,aAAWC,IAAX,GAAkB;AAChB,WAAO,uBAAP;AACD;;AAED,aAAWC,WAAX,GAAyB;AACvB,WAAO,6BAAP;AACD;;AAED,QAAMC,cAAN,CAAqBC,KAArB,EAA4BC,WAA5B,EAAyC;AACvC,UAAMC,IAAI,GAAGF,KAAK,CAAC,KAAKG,KAAN,CAAlB;;AACA,QAAI,CAACD,IAAL,EAAW;AACT;AACD;;AAED,QAAIA,IAAI,CAACE,MAAT,EAAiB;AACf,YAAM;AAACC,QAAAA;AAAD,UAAYH,IAAI,CAACA,IAAI,CAACE,MAAL,GAAc,CAAf,CAAtB;AACA,YAAM;AAACE,QAAAA,MAAD;AAASC,QAAAA;AAAT,UAAiBF,OAAvB;AAEAJ,MAAAA,WAAW,CAACO,SAAZ,CAAsB,KAAKC,UAA3B,EAAuCC,KAAvC,CAA6CC,sBAAsB,CAACJ,IAAD,CAAnE,EAA2ED,MAA3E;AACD;AACF;;AAEDM,EAAAA,WAAW,CAACC,eAAD,EAAkB;AAC3B,UAAMC,EAAE,GAAGD,eAAX;AACAC,IAAAA,EAAE,CAACC,MAAH,CAAU,KAAKN,UAAf,EACGO,QADH,CACY,WADZ,EAEGC,IAFH,CAEQ,OAFR;AAGD;;AAhCkD;;AAmCrD,SAASN,sBAAT,CAAgCO,MAAhC,EAAwC;AAEtC,QAAMC,UAAU,GAAG,IAAIC,UAAJ,CAAeF,MAAf,CAAnB;AACA,SAAOC,UAAP;AACD","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport Converter from './converter';\n\nexport class SensorCompressedImage extends Converter {\n  constructor(config) {\n    super(config);\n  }\n\n  static get name() {\n    return 'SensorCompressedImage';\n  }\n\n  static get messageType() {\n    return 'sensor_msgs/CompressedImage';\n  }\n\n  async convertMessage(frame, xvizBuilder) {\n    const msgs = frame[this.topic];\n    if (!msgs) {\n      return;\n    }\n\n    if (msgs.length) {\n      const {message} = msgs[msgs.length - 1];\n      const {format, data} = message;\n\n      xvizBuilder.primitive(this.xvizStream).image(nodeBufferToTypedArray(data), format);\n    }\n  }\n\n  getMetadata(xvizMetaBuilder) {\n    const xb = xvizMetaBuilder;\n    xb.stream(this.xvizStream)\n      .category('primitive')\n      .type('image');\n  }\n}\n\nfunction nodeBufferToTypedArray(buffer) {\n  // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n  const typedArray = new Uint8Array(buffer);\n  return typedArray;\n}\n"],"file":"sensor-compressedimage-converter.js"}