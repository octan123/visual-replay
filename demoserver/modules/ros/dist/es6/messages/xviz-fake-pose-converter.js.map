{"version":3,"sources":["../../../src/messages/xviz-fake-pose-converter.js"],"names":["Converter","TimeUtil","XVIZFakePose","constructor","config","name","messageType","convertMessage","frame","xvizBuilder","position","msg","topic","timestamp","length","pose","xvizStream","toDate","getTime","getMetadata","xvizMetaBuilder","stream","category"],"mappings":"AAaA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,QAAvB;AAKA,OAAO,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAC1CG,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,UAAMA,MAAN;AACD;;AAED,aAAWC,IAAX,GAAkB;AAChB,WAAO,cAAP;AACD;;AAGD,aAAWC,WAAX,GAAyB;AACvB,WAAO,oBAAP;AACD;;AAED,QAAMC,cAAN,CAAqBC,KAArB,EAA4BC,WAA5B,EAAyC;AACvC,UAAMC,QAAQ,GAAG,KAAKN,MAAL,CAAYM,QAAZ,IAAwB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAzC;AAEA,UAAMC,GAAG,GAAGH,KAAK,CAAC,KAAKI,KAAN,CAAjB;;AACA,QAAI,CAACD,GAAL,EAAU;AACR;AACD;;AAED,UAAM;AAACE,MAAAA;AAAD,QAAcF,GAAG,CAACA,GAAG,CAACG,MAAJ,GAAa,CAAd,CAAvB;AAEAL,IAAAA,WAAW,CACRM,IADH,CACQ,KAAKC,UADb,EAEGN,QAFH,CAEY,GAAGA,QAFf,EAGGG,SAHH,CAGaZ,QAAQ,CAACgB,MAAT,CAAgBJ,SAAhB,EAA2BK,OAA3B,KAAuC,GAHpD;AAID;;AAEDC,EAAAA,WAAW,CAACC,eAAD,EAAkB;AAC3BA,IAAAA,eAAe,CAACC,MAAhB,CAAuB,KAAKL,UAA5B,EAAwCM,QAAxC,CAAiD,MAAjD;AACD;;AAhCyC","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport Converter from './converter';\nimport {TimeUtil} from 'rosbag';\n\n// Currently every message *MUST* have a pose. However, if we don't have one\n// we can create a fake pose at (0, 0, 0) which time is set by the topic message\n// timestamp.\nexport class XVIZFakePose extends Converter {\n  constructor(config) {\n    super(config);\n  }\n\n  static get name() {\n    return 'XVIZFakePose';\n  }\n\n  // Should never match anything, but an empty string seems too fragile\n  static get messageType() {\n    return 'xviz_msgs/FakePose';\n  }\n\n  async convertMessage(frame, xvizBuilder) {\n    const position = this.config.position || [0, 0, 0];\n\n    const msg = frame[this.topic];\n    if (!msg) {\n      return;\n    }\n\n    const {timestamp} = msg[msg.length - 1];\n\n    xvizBuilder\n      .pose(this.xvizStream)\n      .position(...position)\n      .timestamp(TimeUtil.toDate(timestamp).getTime() / 1e3);\n  }\n\n  getMetadata(xvizMetaBuilder) {\n    xvizMetaBuilder.stream(this.xvizStream).category('pose');\n  }\n}\n"],"file":"xviz-fake-pose-converter.js"}