{"version":3,"sources":["../../../src/messages/geometry-posestamped-converter.js"],"names":["Converter","quaternionToEuler","TimeUtil","GeometryPoseStamped","constructor","config","name","messageType","convertMessage","frame","xvizBuilder","msg","topic","timestamp","message","length","rotation","pose","orientation","position","poseBuilder","xvizStream","x","y","roll","pitch","yaw","toDate","getTime","origin","mapOrigin","longitude","latitude","altitude","getMetadata","xvizMetaBuilder","stream","category"],"mappings":"AAaA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,sBAAhC;AACA,SAAQC,QAAR,QAAuB,QAAvB;AAEA,OAAO,MAAMC,mBAAN,SAAkCH,SAAlC,CAA4C;AACjDI,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,UAAMA,MAAN;AACD;;AAED,aAAWC,IAAX,GAAkB;AAChB,WAAO,qBAAP;AACD;;AAED,aAAWC,WAAX,GAAyB;AACvB,WAAO,2BAAP;AACD;;AAED,QAAMC,cAAN,CAAqBC,KAArB,EAA4BC,WAA5B,EAAyC;AACvC,UAAMC,GAAG,GAAGF,KAAK,CAAC,KAAKG,KAAN,CAAjB;;AACA,QAAI,CAACD,GAAL,EAAU;AACR;AACD;;AAED,UAAM;AAACE,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,QAAuBH,GAAG,CAACA,GAAG,CAACI,MAAJ,GAAa,CAAd,CAAhC;AAMA,UAAMC,QAAQ,GAAGf,iBAAiB,CAACa,OAAO,CAACG,IAAR,CAAaC,WAAd,CAAlC;AACA,UAAM;AAACC,MAAAA;AAAD,QAAaL,OAAO,CAACG,IAA3B;AACA,UAAMG,WAAW,GAAGV,WAAW,CAC5BO,IADiB,CACZ,KAAKI,UADO,EAEjBF,QAFiB,CAERA,QAAQ,CAACG,CAFD,EAEIH,QAAQ,CAACI,CAFb,EAEgB,CAFhB,EAGjBL,WAHiB,CAGLF,QAAQ,CAACQ,IAHJ,EAGUR,QAAQ,CAACS,KAHnB,EAG0BT,QAAQ,CAACU,GAHnC,EAIjBb,SAJiB,CAIPX,QAAQ,CAACyB,MAAT,CAAgBd,SAAhB,EAA2Be,OAA3B,KAAuC,GAJhC,CAApB;;AAMA,QAAI,KAAKvB,MAAL,CAAYwB,MAAhB,EAAwB;AACtB,YAAM;AAACA,QAAAA;AAAD,UAAW,KAAKxB,MAAtB;AACAe,MAAAA,WAAW,CAACU,SAAZ,CAAsBD,MAAM,CAACE,SAA7B,EAAwCF,MAAM,CAACG,QAA/C,EAAyDH,MAAM,CAACI,QAAhE;AACD;AACF;;AAEDC,EAAAA,WAAW,CAACC,eAAD,EAAkB;AAC3BA,IAAAA,eAAe,CAACC,MAAhB,CAAuB,KAAKf,UAA5B,EAAwCgB,QAAxC,CAAiD,MAAjD;AACD;;AAzCgD","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport Converter from './converter';\nimport {quaternionToEuler} from '../common/quaternion';\nimport {TimeUtil} from 'rosbag';\n\nexport class GeometryPoseStamped extends Converter {\n  constructor(config) {\n    super(config);\n  }\n\n  static get name() {\n    return 'GeometryPoseStamped';\n  }\n\n  static get messageType() {\n    return 'geometry_msgs/PoseStamped';\n  }\n\n  async convertMessage(frame, xvizBuilder) {\n    const msg = frame[this.topic];\n    if (!msg) {\n      return;\n    }\n\n    const {timestamp, message} = msg[msg.length - 1];\n\n    // Every frame *MUST* have a pose. The pose can be considered\n    // the core reference point for other data and usually drives the timing\n    // of the system.\n    // Position, decimal degrees\n    const rotation = quaternionToEuler(message.pose.orientation);\n    const {position} = message.pose;\n    const poseBuilder = xvizBuilder\n      .pose(this.xvizStream)\n      .position(position.x, position.y, 0)\n      .orientation(rotation.roll, rotation.pitch, rotation.yaw)\n      .timestamp(TimeUtil.toDate(timestamp).getTime() / 1e3);\n\n    if (this.config.origin) {\n      const {origin} = this.config;\n      poseBuilder.mapOrigin(origin.longitude, origin.latitude, origin.altitude);\n    }\n  }\n\n  getMetadata(xvizMetaBuilder) {\n    xvizMetaBuilder.stream(this.xvizStream).category('pose');\n  }\n}\n"],"file":"geometry-posestamped-converter.js"}