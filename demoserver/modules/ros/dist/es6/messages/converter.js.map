{"version":3,"sources":["../../../src/messages/converter.js"],"names":["Converter","constructor","config","_setup","topic","Error","xvizStream","convertMessage","frame","xvizBuilder","getMetadata","xvizMetaBuilder","aux"],"mappings":"AAgBA,eAAe,MAAMA,SAAN,CAAgB;AAC7BC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,SAAKA,MAAL,GAAcA,MAAd;;AAEA,SAAKC,MAAL;AACD;;AAEDA,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKD,MAAL,CAAYE,KAAjB,EAAwB;AACtB,YAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,QAAI,CAAC,KAAKH,MAAL,CAAYI,UAAjB,EAA6B;AAC3B,WAAKJ,MAAL,CAAYI,UAAZ,GAAyB,KAAKJ,MAAL,CAAYE,KAArC;AACD;AACF;;AAED,MAAIA,KAAJ,GAAY;AACV,WAAO,KAAKF,MAAL,CAAYE,KAAnB;AACD;;AAED,MAAIE,UAAJ,GAAiB;AACf,WAAO,KAAKJ,MAAL,CAAYI,UAAnB;AACD;;AAED,QAAMC,cAAN,CAAqBC,KAArB,EAA4BC,WAA5B,EAAyC;AACvC,UAAM,IAAIJ,KAAJ,CAAU,cAAV,CAAN;AACD;;AAEDK,EAAAA,WAAW,CAACC,eAAD,EAAkBC,GAAlB,EAAuB;AAChC,UAAM,IAAIP,KAAJ,CAAU,cAAV,CAAN;AACD;;AA/B4B","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Abstract Converter class that all converters must implement\n */\nexport default class Converter {\n  constructor(config) {\n    this.config = config;\n\n    this._setup();\n  }\n\n  _setup() {\n    if (!this.config.topic) {\n      throw new Error('ROS Message converter must have a topic to convert');\n    }\n\n    if (!this.config.xvizStream) {\n      this.config.xvizStream = this.config.topic;\n    }\n  }\n\n  get topic() {\n    return this.config.topic;\n  }\n\n  get xvizStream() {\n    return this.config.xvizStream;\n  }\n\n  async convertMessage(frame, xvizBuilder) {\n    throw new Error('Implement me');\n  }\n\n  getMetadata(xvizMetaBuilder, aux) {\n    throw new Error('Implement me');\n  }\n}\n"],"file":"converter.js"}