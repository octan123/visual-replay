{"version":3,"sources":["../../../src/cmds/bagdump.js"],"names":["open","TimeUtil","StartEndOptions","bagdumpArgs","inArgs","cmd","command","topic","alias","description","dumpTime","type","dumpTopics","dumpMessages","dumpDefs","bagdumpCmd","args","bag","source","mainTopic","console","log","toDate","startTime","getTime","endTime","seen","conn","connections","messageDefinition","readMessages","message","JSON","stringify"],"mappings":";;;;;;AAeA,SAAQA,IAAR,EAAcC,QAAd,QAA6B,QAA7B;AACA,SAAQC,eAAR,QAA8B,UAA9B;AAEA,OAAO,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAClC,QAAMC,GAAG,GAAG,eAAZ;AAEA,SAAOD,MAAM,CAACE,OAAP,CACLD,GADK,EAEL,qCAFK,kCAIAH,eAJA;AAKHK,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,GADF;AAELC,MAAAA,WAAW,EAAE;AAFR,KALJ;AASHC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAE,SADE;AAERF,MAAAA,WAAW,EAAE;AAFL,KATP;AAaHG,IAAAA,UAAU,EAAE;AACVD,MAAAA,IAAI,EAAE,SADI;AAEVF,MAAAA,WAAW,EAAE;AAFH,KAbT;AAiBHI,IAAAA,YAAY,EAAE;AACZF,MAAAA,IAAI,EAAE,SADM;AAEZF,MAAAA,WAAW,EAAE;AAFD,KAjBX;AAqBHK,IAAAA,QAAQ,EAAE;AACRH,MAAAA,IAAI,EAAE,SADE;AAERF,MAAAA,WAAW,EAAE;AAFL;AArBP,MA0BLM,UA1BK,CAAP;AA4BD;AAED,OAAO,eAAeA,UAAf,CAA0BC,IAA1B,EAAgC;AACrC,QAAM;AAACC,IAAAA,GAAG,EAAEC,MAAN;AAAcX,IAAAA,KAAK,EAAEY;AAArB,MAAkCH,IAAxC;AAEA,QAAMC,GAAG,GAAG,MAAMjB,IAAI,CAACkB,MAAD,CAAtB;;AAEA,MAAIF,IAAI,CAACN,QAAT,EAAmB;AACjBU,IAAAA,OAAO,CAACC,GAAR,uBAA2BpB,QAAQ,CAACqB,MAAT,CAAgBL,GAAG,CAACM,SAApB,EAA+BC,OAA/B,KAA2C,GAAtE;AACAJ,IAAAA,OAAO,CAACC,GAAR,qBAAyBpB,QAAQ,CAACqB,MAAT,CAAgBL,GAAG,CAACQ,OAApB,EAA6BD,OAA7B,KAAyC,GAAlE;AACD;;AAED,MAAIR,IAAI,CAACJ,UAAT,EAAqB;AACnB,UAAMc,IAAI,GAAG,EAAb;;AACA,SAAK,MAAMC,IAAX,IAAmBV,GAAG,CAACW,WAAvB,EAAoC;AAClC,YAAM;AAACC,QAAAA,iBAAD;AAAoBtB,QAAAA,KAApB;AAA2BI,QAAAA;AAA3B,UAAmCM,GAAG,CAACW,WAAJ,CAAgBD,IAAhB,CAAzC;;AAEA,UAAI,CAACD,IAAI,CAACnB,KAAD,CAAT,EAAkB;AAChBmB,QAAAA,IAAI,CAACnB,KAAD,CAAJ,GAAc,IAAd;AAEAa,QAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ,EAAmBI,IAAnB;;AACA,YAAIK,IAAI,CAACF,QAAT,EAAmB;AACjBM,UAAAA,OAAO,CAACC,GAAR,CAAYQ,iBAAZ;AACD;AACF;AACF;AACF;;AAED,MAAIb,IAAI,CAACH,YAAT,EAAuB;AACrB,UAAMI,GAAG,CAACa,YAAJ,CAAiB,EAAjB,EAAqB,CAAC;AAACvB,MAAAA,KAAD;AAAQwB,MAAAA;AAAR,KAAD,KAAsB;AAC/C,UAAI,CAACZ,SAAD,IAAcZ,KAAK,KAAKY,SAA5B,EAAuC;AACrCC,QAAAA,OAAO,CAACC,GAAR,CAAYW,IAAI,CAACC,SAAL,CAAeF,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CAAZ;AACD;AACF,KAJK,CAAN;AAKD;AACF","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* global console */\n/* eslint-disable no-console, max-depth */\nimport {open, TimeUtil} from 'rosbag';\nimport {StartEndOptions} from './common';\n\nexport function bagdumpArgs(inArgs) {\n  const cmd = 'bagdump <bag>';\n\n  return inArgs.command(\n    cmd,\n    'Display information about a ROS bag',\n    {\n      ...StartEndOptions,\n      topic: {\n        alias: 't',\n        description: 'The topic to inspect'\n      },\n      dumpTime: {\n        type: 'boolean',\n        description: 'Show start and end time of the bag'\n      },\n      dumpTopics: {\n        type: 'boolean',\n        description: 'Show start and end time of the bag'\n      },\n      dumpMessages: {\n        type: 'boolean',\n        description: 'Will dump messages, if a topic is provided only those will be dumped'\n      },\n      dumpDefs: {\n        type: 'boolean',\n        description: 'Will dump message definitions'\n      }\n    },\n    bagdumpCmd\n  );\n}\n\nexport async function bagdumpCmd(args) {\n  const {bag: source, topic: mainTopic} = args;\n\n  const bag = await open(source);\n\n  if (args.dumpTime) {\n    console.log(`start_time: ${TimeUtil.toDate(bag.startTime).getTime() / 1e3}`);\n    console.log(`end_time: ${TimeUtil.toDate(bag.endTime).getTime() / 1e3}`);\n  }\n\n  if (args.dumpTopics) {\n    const seen = [];\n    for (const conn in bag.connections) {\n      const {messageDefinition, topic, type} = bag.connections[conn];\n\n      if (!seen[topic]) {\n        seen[topic] = true;\n\n        console.log(topic, type);\n        if (args.dumpDefs) {\n          console.log(messageDefinition);\n        }\n      }\n    }\n  }\n\n  if (args.dumpMessages) {\n    await bag.readMessages({}, ({topic, message}) => {\n      if (!mainTopic || topic === mainTopic) {\n        console.log(JSON.stringify(message, null, 2));\n      }\n    });\n  }\n}\n"],"file":"bagdump.js"}