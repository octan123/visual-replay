{"version":3,"sources":["../../../src/cmds/convert.js"],"names":["XVIZFormatWriter","FileSource","FileSink","XVIZProviderFactory","StartEndOptions","process","fs","path","convertArgs","inArgs","cmd","command","directory","alias","describe","type","required","rosConfig","format","default","choices","nargs","convertCmd","args","bag","start","end","deleteDirRecursive","err","createDir","source","provider","open","options","root","Error","sink","iterator","getMessageIterator","startTime","endTime","valid","writer","md","xvizMetadata","setMetadataTimes","message","data","writeMetadata","signalWriteIndexOnInterrupt","frameSequence","xvizMessage","stdout","write","writeMessage","console","log","close","metadata","logInfo","log_info","start_time","end_time","on","exit","dirPath","existsSync","parent","dirname","mkdirSync","parentDir","files","readdirSync","forEach","file","currPath","join","lstatSync","isDirectory","unlinkSync","rmdirSync"],"mappings":";;;;;;AAeA,SAAQA,gBAAR,QAA+B,UAA/B;AACA,SAAQC,UAAR,EAAoBC,QAApB,QAAmC,eAAnC;AACA,SAAQC,mBAAR,QAAkC,UAAlC;AAEA,SAAQC,eAAR,QAA8B,UAA9B;AAEA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAO,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAClC,QAAMC,GAAG,GAAG,2BAAZ;AAEA,SAAOD,MAAM,CAACE,OAAP,CACLD,GADK,EAEL,0BAFK,kCAIAN,eAJA;AAKHQ,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,GADE;AAETC,MAAAA,QAAQ,EAAE,6BAFD;AAGTC,MAAAA,IAAI,EAAE,QAHG;AAITC,MAAAA,QAAQ,EAAE;AAJD,KALR;AAWHC,IAAAA,SAAS,EAAE;AACTH,MAAAA,QAAQ,EAAE,oCADD;AAETC,MAAAA,IAAI,EAAE,QAFG;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAXR;AAgBHE,IAAAA,MAAM,EAAE;AACNJ,MAAAA,QAAQ,EAAE,oBADJ;AAENK,MAAAA,OAAO,EAAE,YAFH;AAGNC,MAAAA,OAAO,EAAE,CAAC,aAAD,EAAgB,YAAhB,CAHH;AAINC,MAAAA,KAAK,EAAE;AAJD;AAhBL,MAuBLC,UAvBK,CAAP;AAyBD;AAED,OAAO,eAAeA,UAAf,CAA0BC,IAA1B,EAAgC;AACrC,QAAM;AAACC,IAAAA,GAAD;AAAMZ,IAAAA,SAAN;AAAiBa,IAAAA,KAAjB;AAAwBC,IAAAA,GAAxB;AAA6BR,IAAAA;AAA7B,MAAuCK,IAA7C;;AAGA,MAAI;AACFI,IAAAA,kBAAkB,CAACf,SAAD,CAAlB;AACD,GAFD,CAEE,OAAOgB,GAAP,EAAY,CAEb;;AACDC,EAAAA,SAAS,CAACjB,SAAD,CAAT;AAEA,QAAMkB,MAAM,GAAG,IAAI7B,UAAJ,CAAeuB,GAAf,CAAf;AACA,QAAMO,QAAQ,GAAG,MAAM5B,mBAAmB,CAAC6B,IAApB,CAAyB;AAC9CC,IAAAA,OAAO,oBAAMV,IAAN,CADuC;AAE9CO,IAAAA,MAF8C;AAG9CI,IAAAA,IAAI,EAAEV;AAHwC,GAAzB,CAAvB;;AAMA,MAAI,CAACO,QAAL,EAAe;AACb,UAAM,IAAII,KAAJ,CAAU,iCAAV,CAAN;AACD;;AAGD,QAAMC,IAAI,GAAG,IAAIlC,QAAJ,CAAaU,SAAb,CAAb;AAEA,QAAMyB,QAAQ,GAAGN,QAAQ,CAACO,kBAAT,CAA4B;AAACC,IAAAA,SAAS,EAAEd,KAAZ;AAAmBe,IAAAA,OAAO,EAAEd;AAA5B,GAA5B,CAAjB;;AACA,MAAI,CAACW,QAAQ,CAACI,KAAT,EAAL,EAAuB;AACrB,UAAM,IAAIN,KAAJ,CAAU,6BAAV,CAAN;AACD;;AAED,QAAMO,MAAM,GAAG,IAAI1C,gBAAJ,CAAqBoC,IAArB,EAA2B;AAAClB,IAAAA;AAAD,GAA3B,CAAf;AAEA,QAAMyB,EAAE,GAAGZ,QAAQ,CAACa,YAAT,EAAX;AAIAC,EAAAA,gBAAgB,CAACF,EAAE,CAACG,OAAH,GAAaC,IAAd,EAAoBtB,KAApB,EAA2BC,GAA3B,CAAhB;AACAgB,EAAAA,MAAM,CAACM,aAAP,CAAqBL,EAArB;AAGAM,EAAAA,2BAA2B,CAACP,MAAD,CAA3B;AAGA,MAAIQ,aAAa,GAAG,CAApB;;AACA,SAAOb,QAAQ,CAACI,KAAT,EAAP,EAAyB;AACvB,UAAMM,IAAI,GAAG,MAAMhB,QAAQ,CAACoB,WAAT,CAAqBd,QAArB,CAAnB;;AACA,QAAIU,IAAJ,EAAU;AACR1C,MAAAA,OAAO,CAAC+C,MAAR,CAAeC,KAAf,yBAAsCH,aAAtC;AACAR,MAAAA,MAAM,CAACY,YAAP,CAAoBJ,aAApB,EAAmCH,IAAnC;AACAG,MAAAA,aAAa,IAAI,CAAjB;AACD,KAJD,MAIO;AACLK,MAAAA,OAAO,CAACC,GAAR,6BAAiCN,aAAjC;AACD;AACF;;AAEDR,EAAAA,MAAM,CAACe,KAAP;AACD;;AAGD,SAASZ,gBAAT,CAA0Ba,QAA1B,EAAoCjC,KAApC,EAA2CC,GAA3C,EAAgD;AAC9C,MAAID,KAAK,IAAIC,GAAb,EAAkB;AAChB,QAAID,KAAJ,EAAW;AACT,YAAMkC,OAAO,GAAGD,QAAQ,CAACE,QAAT,IAAqB,EAArC;AACAD,MAAAA,OAAO,CAACE,UAAR,GAAqBpC,KAArB;AACD;;AAED,QAAIC,GAAJ,EAAS;AACP,YAAMiC,OAAO,GAAGD,QAAQ,CAACE,QAAT,IAAqB,EAArC;AACAD,MAAAA,OAAO,CAACG,QAAR,GAAmBpC,GAAnB;AACD;AACF;AACF;;AAGD,SAASuB,2BAAT,CAAqCP,MAArC,EAA6C;AAC3CrC,EAAAA,OAAO,CAAC0D,EAAR,CAAW,QAAX,EAAqB,MAAM;AACzBR,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAd,IAAAA,MAAM,CAACe,KAAP;AACApD,IAAAA,OAAO,CAAC2D,IAAR,CAAa,CAAb;AACD,GAJD;AAKD;;AAED,SAASnC,SAAT,CAAmBoC,OAAnB,EAA4B;AAC1B,MAAI,CAAC3D,EAAE,CAAC4D,UAAH,CAAcD,OAAd,CAAL,EAA6B;AAE3B,UAAME,MAAM,GAAG5D,IAAI,CAAC6D,OAAL,CAAaH,OAAb,CAAf;AACApC,IAAAA,SAAS,CAACsC,MAAD,CAAT;AAEA7D,IAAAA,EAAE,CAAC+D,SAAH,CAAaJ,OAAb;AACD;AACF;;AAED,SAAStC,kBAAT,CAA4B2C,SAA5B,EAAuC;AACrC,QAAMC,KAAK,GAAGjE,EAAE,CAACkE,WAAH,CAAeF,SAAf,CAAd;AACAC,EAAAA,KAAK,CAACE,OAAN,CAAcC,IAAI,IAAI;AACpB,UAAMC,QAAQ,GAAGpE,IAAI,CAACqE,IAAL,CAAUN,SAAV,EAAqBI,IAArB,CAAjB;;AACA,QAAIpE,EAAE,CAACuE,SAAH,CAAaF,QAAb,EAAuBG,WAAvB,EAAJ,EAA0C;AAExCnD,MAAAA,kBAAkB,CAACgD,QAAD,CAAlB;AACD,KAHD,MAGO;AAELrE,MAAAA,EAAE,CAACyE,UAAH,CAAcJ,QAAd;AACD;AACF,GATD;AAWArE,EAAAA,EAAE,CAAC0E,SAAH,CAAaV,SAAb;AACD","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* global console */\n/* eslint-disable no-console, complexity, max-statements */\nimport {XVIZFormatWriter} from '@xviz/io';\nimport {FileSource, FileSink} from '@xviz/io/node';\nimport {XVIZProviderFactory} from '@xviz/io';\n\nimport {StartEndOptions} from './common';\n\nimport process from 'process';\nimport fs from 'fs';\nimport path from 'path';\n\nexport function convertArgs(inArgs) {\n  const cmd = 'convert [-d output] <bag>';\n\n  return inArgs.command(\n    cmd,\n    'Convert a rosbag to xviz',\n    {\n      ...StartEndOptions,\n      directory: {\n        alias: 'd',\n        describe: 'Directory to save XVIZ data',\n        type: 'string',\n        required: true\n      },\n      rosConfig: {\n        describe: 'Path to ROS Bag JSON configuration',\n        type: 'string',\n        required: true\n      },\n      format: {\n        describe: 'Output data format',\n        default: 'BINARY_GLB',\n        choices: ['JSON_STRING', 'BINARY_GLB'],\n        nargs: 1\n      }\n    },\n    convertCmd\n  );\n}\n\nexport async function convertCmd(args) {\n  const {bag, directory, start, end, format} = args;\n\n  // Setup output directory\n  try {\n    deleteDirRecursive(directory);\n  } catch (err) {\n    // ignore\n  }\n  createDir(directory);\n\n  const source = new FileSource(bag);\n  const provider = await XVIZProviderFactory.open({\n    options: {...args},\n    source,\n    root: bag\n  });\n\n  if (!provider) {\n    throw new Error('Failed to create ROSBagProvider');\n  }\n\n  // This abstracts the details of the filenames expected by our server\n  const sink = new FileSink(directory);\n\n  const iterator = provider.getMessageIterator({startTime: start, endTime: end});\n  if (!iterator.valid()) {\n    throw new Error('Error creating and iterator');\n  }\n\n  const writer = new XVIZFormatWriter(sink, {format});\n\n  const md = provider.xvizMetadata();\n\n  // Augment metadata with timing information\n  // if provided\n  setMetadataTimes(md.message().data, start, end);\n  writer.writeMetadata(md);\n\n  // If we get interrupted make sure the index is written out\n  signalWriteIndexOnInterrupt(writer);\n\n  // Process data\n  let frameSequence = 0;\n  while (iterator.valid()) {\n    const data = await provider.xvizMessage(iterator);\n    if (data) {\n      process.stdout.write(`Writing frame ${frameSequence}\\r`);\n      writer.writeMessage(frameSequence, data);\n      frameSequence += 1;\n    } else {\n      console.log(`No data for frame ${frameSequence}`);\n    }\n  }\n\n  writer.close();\n}\n\n/* eslint-disable camelcase */\nfunction setMetadataTimes(metadata, start, end) {\n  if (start || end) {\n    if (start) {\n      const logInfo = metadata.log_info || {};\n      logInfo.start_time = start;\n    }\n\n    if (end) {\n      const logInfo = metadata.log_info || {};\n      logInfo.end_time = end;\n    }\n  }\n}\n/* eslint-enable camelcase */\n\nfunction signalWriteIndexOnInterrupt(writer) {\n  process.on('SIGINT', () => {\n    console.log('Aborting, writing index file.');\n    writer.close();\n    process.exit(0); // eslint-disable-line no-process-exit\n  });\n}\n\nfunction createDir(dirPath) {\n  if (!fs.existsSync(dirPath)) {\n    // make sure parent exists\n    const parent = path.dirname(dirPath);\n    createDir(parent);\n\n    fs.mkdirSync(dirPath);\n  }\n}\n\nfunction deleteDirRecursive(parentDir) {\n  const files = fs.readdirSync(parentDir);\n  files.forEach(file => {\n    const currPath = path.join(parentDir, file);\n    if (fs.lstatSync(currPath).isDirectory()) {\n      // recurse\n      deleteDirRecursive(currPath);\n    } else {\n      // delete file\n      fs.unlinkSync(currPath);\n    }\n  });\n\n  fs.rmdirSync(parentDir);\n}\n"],"file":"convert.js"}