{"version":3,"sources":["../../../src/core/ros-config.js"],"names":["ROSConfig","constructor","rosConfig","_topics","_needsTopicTypes","_gatherTopics","topicConfig","Set","topic","type","converter","typeSet","undefined","converterSet","add","topics","Array","from","values","entryCount","length","needsTopicTypes"],"mappings":"AAgBA,OAAO,MAAMA,SAAN,CAAgB;AAErBC,EAAAA,WAAW,CAACC,SAAS,GAAG,EAAb,EAAiB;AAC1B,SAAKA,SAAL,GAAiBA,SAAjB;AAEA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,gBAAL,GAAwB,KAAxB;;AAEA,SAAKC,aAAL;AACD;;AAGDA,EAAAA,aAAa,GAAG;AACd,UAAM;AAACH,MAAAA;AAAD,QAAc,IAApB;;AACA,QAAIA,SAAS,IAAIA,SAAS,CAACI,WAA3B,EAAwC;AACtC,WAAKH,OAAL,GAAe,IAAII,GAAJ,EAAf;;AAEA,WAAK,MAAM;AAACC,QAAAA,KAAD;AAAQC,QAAAA,IAAR;AAAcC,QAAAA;AAAd,OAAX,IAAuCR,SAAS,CAACI,WAAjD,EAA8D;AAC5D,cAAMK,OAAO,GAAGF,IAAI,KAAK,EAAT,IAAeA,IAAI,KAAKG,SAAxB,IAAqCH,IAAI,KAAK,IAA9D;AACA,cAAMI,YAAY,GAAGH,SAAS,KAAK,EAAd,IAAoBA,SAAS,KAAKE,SAAlC,IAA+CF,SAAS,KAAK,IAAlF;;AAGA,YAAI,CAACC,OAAD,IAAY,CAACE,YAAjB,EAA+B;AAC7B,eAAKT,gBAAL,GAAwB,IAAxB;AACD;;AAGD,aAAKD,OAAL,CAAaW,GAAb,CAAiBN,KAAjB;AACD;AACF,KAfD,MAeO;AAEL,WAAKJ,gBAAL,GAAwB,IAAxB;AACD;AACF;;AAED,MAAIW,MAAJ,GAAa;AACX,QAAI,KAAKZ,OAAT,EAAkB;AAChB,aAAOa,KAAK,CAACC,IAAN,CAAW,KAAKd,OAAL,CAAae,MAAb,EAAX,CAAP;AACD;;AAED,WAAO,IAAP;AACD;;AAED,MAAIZ,WAAJ,GAAkB;AAChB,WAAO,KAAKJ,SAAL,CAAeI,WAAtB;AACD;;AAED,MAAIa,UAAJ,GAAiB;AACf,QAAI,KAAKjB,SAAL,CAAeI,WAAnB,EAAgC;AAC9B,aAAO,KAAKJ,SAAL,CAAeI,WAAf,CAA2Bc,MAAlC;AACD;;AAED,WAAO,CAAP;AACD;;AAEDC,EAAAA,eAAe,GAAG;AAChB,WAAO,KAAKjB,gBAAZ;AACD;;AAzDoB","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/* eslint-disable camelcase */\n\nexport class ROSConfig {\n  // topicConfig should be provided else simply map all topics to a matching converter\n  constructor(rosConfig = {}) {\n    this.rosConfig = rosConfig;\n\n    this._topics = null;\n    this._needsTopicTypes = false;\n\n    this._gatherTopics();\n  }\n\n  // Collect a list of all the topics, used by rosbag.js\n  _gatherTopics() {\n    const {rosConfig} = this;\n    if (rosConfig && rosConfig.topicConfig) {\n      this._topics = new Set();\n\n      for (const {topic, type, converter} of rosConfig.topicConfig) {\n        const typeSet = type !== '' && type !== undefined && type !== null;\n        const converterSet = converter !== '' && converter !== undefined && converter !== null;\n\n        // If we do not see a 'type' or 'converter' property, we need to gather the type's manually\n        if (!typeSet && !converterSet) {\n          this._needsTopicTypes = true;\n        }\n\n        // Used for the rosbag.js\n        this._topics.add(topic);\n      }\n    } else {\n      // Without a config we need types\n      this._needsTopicTypes = true;\n    }\n  }\n\n  get topics() {\n    if (this._topics) {\n      return Array.from(this._topics.values());\n    }\n\n    return null;\n  }\n\n  get topicConfig() {\n    return this.rosConfig.topicConfig;\n  }\n\n  get entryCount() {\n    if (this.rosConfig.topicConfig) {\n      return this.rosConfig.topicConfig.length;\n    }\n\n    return 0;\n  }\n\n  needsTopicTypes() {\n    return this._needsTopicTypes;\n  }\n}\n"],"file":"ros-config.js"}