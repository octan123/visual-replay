{"version":3,"sources":["../../../src/messages/xviz-fake-pose-converter.js"],"names":["Converter","TimeUtil","XVIZFakePose","config","frame","xvizBuilder","position","msg","topic","timestamp","length","pose","xvizStream","toDate","getTime","xvizMetaBuilder","stream","category"],"mappings":";;;;;;;;;;;;;AAaA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,QAAvB;AAKA,WAAaC,YAAb;AAAA;;AAAA;;AACE,wBAAYC,MAAZ,EAAoB;AAAA;;AAAA,6BACZA,MADY;AAEnB;;AAHH;AAAA;AAAA;AAAA,wFAcuBC,KAdvB,EAc8BC,WAd9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAeUC,gBAAAA,QAfV,GAeqB,KAAKH,MAAL,CAAYG,QAAZ,IAAwB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAf7C;AAiBUC,gBAAAA,GAjBV,GAiBgBH,KAAK,CAAC,KAAKI,KAAN,CAjBrB;;AAAA,oBAkBSD,GAlBT;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAsBWE,gBAAAA,SAtBX,GAsBwBF,GAAG,CAACA,GAAG,CAACG,MAAJ,GAAa,CAAd,CAtB3B,CAsBWD,SAtBX;;AAwBI,qCAAAJ,WAAW,CACRM,IADH,CACQ,KAAKC,UADb,GAEGN,QAFH,6CAEeA,QAFf,GAGGG,SAHH,CAGaR,QAAQ,CAACY,MAAT,CAAgBJ,SAAhB,EAA2BK,OAA3B,KAAuC,GAHpD;;AAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gCA8BcC,eA9Bd,EA8B+B;AAC3BA,MAAAA,eAAe,CAACC,MAAhB,CAAuB,KAAKJ,UAA5B,EAAwCK,QAAxC,CAAiD,MAAjD;AACD;AAhCH;AAAA;AAAA,wBAKoB;AAChB,aAAO,cAAP;AACD;AAPH;AAAA;AAAA,wBAU2B;AACvB,aAAO,oBAAP;AACD;AAZH;;AAAA;AAAA,EAAkCjB,SAAlC","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport Converter from './converter';\nimport {TimeUtil} from 'rosbag';\n\n// Currently every message *MUST* have a pose. However, if we don't have one\n// we can create a fake pose at (0, 0, 0) which time is set by the topic message\n// timestamp.\nexport class XVIZFakePose extends Converter {\n  constructor(config) {\n    super(config);\n  }\n\n  static get name() {\n    return 'XVIZFakePose';\n  }\n\n  // Should never match anything, but an empty string seems too fragile\n  static get messageType() {\n    return 'xviz_msgs/FakePose';\n  }\n\n  async convertMessage(frame, xvizBuilder) {\n    const position = this.config.position || [0, 0, 0];\n\n    const msg = frame[this.topic];\n    if (!msg) {\n      return;\n    }\n\n    const {timestamp} = msg[msg.length - 1];\n\n    xvizBuilder\n      .pose(this.xvizStream)\n      .position(...position)\n      .timestamp(TimeUtil.toDate(timestamp).getTime() / 1e3);\n  }\n\n  getMetadata(xvizMetaBuilder) {\n    xvizMetaBuilder.stream(this.xvizStream).category('pose');\n  }\n}\n"],"file":"xviz-fake-pose-converter.js"}