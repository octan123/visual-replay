{"version":3,"sources":["../../../src/messages/geometry-posestamped-converter.js"],"names":["Converter","quaternionToEuler","TimeUtil","GeometryPoseStamped","config","frame","xvizBuilder","msg","topic","length","timestamp","message","rotation","pose","orientation","position","poseBuilder","xvizStream","x","y","roll","pitch","yaw","toDate","getTime","origin","mapOrigin","longitude","latitude","altitude","xvizMetaBuilder","stream","category"],"mappings":";;;;;;;;;;;;AAaA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,sBAAhC;AACA,SAAQC,QAAR,QAAuB,QAAvB;AAEA,WAAaC,mBAAb;AAAA;;AAAA;;AACE,+BAAYC,MAAZ,EAAoB;AAAA;;AAAA,6BACZA,MADY;AAEnB;;AAHH;AAAA;AAAA;AAAA,wFAauBC,KAbvB,EAa8BC,WAb9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAcUC,gBAAAA,GAdV,GAcgBF,KAAK,CAAC,KAAKG,KAAN,CAdrB;;AAAA,oBAeSD,GAfT;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,uBAmBiCA,GAAG,CAACA,GAAG,CAACE,MAAJ,GAAa,CAAd,CAnBpC,EAmBWC,SAnBX,QAmBWA,SAnBX,EAmBsBC,OAnBtB,QAmBsBA,OAnBtB;AAyBUC,gBAAAA,QAzBV,GAyBqBX,iBAAiB,CAACU,OAAO,CAACE,IAAR,CAAaC,WAAd,CAzBtC;AA0BWC,gBAAAA,QA1BX,GA0BuBJ,OAAO,CAACE,IA1B/B,CA0BWE,QA1BX;AA2BUC,gBAAAA,WA3BV,GA2BwBV,WAAW,CAC5BO,IADiB,CACZ,KAAKI,UADO,EAEjBF,QAFiB,CAERA,QAAQ,CAACG,CAFD,EAEIH,QAAQ,CAACI,CAFb,EAEgB,CAFhB,EAGjBL,WAHiB,CAGLF,QAAQ,CAACQ,IAHJ,EAGUR,QAAQ,CAACS,KAHnB,EAG0BT,QAAQ,CAACU,GAHnC,EAIjBZ,SAJiB,CAIPR,QAAQ,CAACqB,MAAT,CAAgBb,SAAhB,EAA2Bc,OAA3B,KAAuC,GAJhC,CA3BxB;;AAiCI,oBAAI,KAAKpB,MAAL,CAAYqB,MAAhB,EAAwB;AACfA,kBAAAA,MADe,GACL,KAAKrB,MADA,CACfqB,MADe;AAEtBT,kBAAAA,WAAW,CAACU,SAAZ,CAAsBD,MAAM,CAACE,SAA7B,EAAwCF,MAAM,CAACG,QAA/C,EAAyDH,MAAM,CAACI,QAAhE;AACD;;AApCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gCAuCcC,eAvCd,EAuC+B;AAC3BA,MAAAA,eAAe,CAACC,MAAhB,CAAuB,KAAKd,UAA5B,EAAwCe,QAAxC,CAAiD,MAAjD;AACD;AAzCH;AAAA;AAAA,wBAKoB;AAChB,aAAO,qBAAP;AACD;AAPH;AAAA;AAAA,wBAS2B;AACvB,aAAO,2BAAP;AACD;AAXH;;AAAA;AAAA,EAAyChC,SAAzC","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport Converter from './converter';\nimport {quaternionToEuler} from '../common/quaternion';\nimport {TimeUtil} from 'rosbag';\n\nexport class GeometryPoseStamped extends Converter {\n  constructor(config) {\n    super(config);\n  }\n\n  static get name() {\n    return 'GeometryPoseStamped';\n  }\n\n  static get messageType() {\n    return 'geometry_msgs/PoseStamped';\n  }\n\n  async convertMessage(frame, xvizBuilder) {\n    const msg = frame[this.topic];\n    if (!msg) {\n      return;\n    }\n\n    const {timestamp, message} = msg[msg.length - 1];\n\n    // Every frame *MUST* have a pose. The pose can be considered\n    // the core reference point for other data and usually drives the timing\n    // of the system.\n    // Position, decimal degrees\n    const rotation = quaternionToEuler(message.pose.orientation);\n    const {position} = message.pose;\n    const poseBuilder = xvizBuilder\n      .pose(this.xvizStream)\n      .position(position.x, position.y, 0)\n      .orientation(rotation.roll, rotation.pitch, rotation.yaw)\n      .timestamp(TimeUtil.toDate(timestamp).getTime() / 1e3);\n\n    if (this.config.origin) {\n      const {origin} = this.config;\n      poseBuilder.mapOrigin(origin.longitude, origin.latitude, origin.altitude);\n    }\n  }\n\n  getMetadata(xvizMetaBuilder) {\n    xvizMetaBuilder.stream(this.xvizStream).category('pose');\n  }\n}\n"],"file":"geometry-posestamped-converter.js"}