{"version":3,"sources":["../../../src/providers/rosbag-provider.js"],"names":["MessageIterator","start","end","increment","current","valid","val","data","ROSBagProvider","root","options","bagPath","endsWith","BagClass","ROSBag","ros2xvizFactory","rosConfig","ROSConfig","metadata","ros2xviz","isValid","Error","msg","logger","info","create","bag","init","_getMetadata","console","log","xvizMetadataBuilder","XVIZMetadataBuilder","getMetadata","rawMetadata","XVIZEnvelope","Metadata","XVIZData","startTime","endTime","log_info","start_time","end_time","iterator","next","readMessages","dataset","buildMessage","StateUpdate"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* global console */\n/* eslint-disable no-console */\nimport {XVIZData, XVIZEnvelope} from '@xviz/io';\nimport {XVIZMetadataBuilder} from '@xviz/builder';\nimport {ROSBag} from '../core/ros-bag';\nimport {ROSConfig} from '../core/ros-config';\n\n// Generic iterator that stores context for an iterator\nclass MessageIterator {\n  constructor(start, end, increment = 1) {\n    this.start = start;\n    this.end = end;\n    this.increment = increment;\n    this.current = start;\n  }\n\n  valid() {\n    return this.current <= this.end;\n  }\n\n  value() {\n    return this.current;\n  }\n\n  next() {\n    const valid = this.valid();\n    if (!valid) {\n      return {valid};\n    }\n\n    const val = this.current;\n    this.current += this.increment;\n\n    return {\n      valid,\n      data: {\n        start: val,\n        end: this.current\n      }\n    };\n  }\n}\n\nexport class ROSBagProvider {\n  constructor({root, options}) {\n    this.bagPath = root.endsWith('.bag') ? root : `${root}.bag`;\n    this.BagClass = (options && options.BagClass) || ROSBag;\n\n    // These likely come from ROSBagProvider arguments passed\n    // when added to the XVIZProviderFactory\n    this.ros2xvizFactory = options && options.ros2xvizFactory;\n    this.rosConfig = options && options.rosConfig && new ROSConfig(options.rosConfig);\n\n    this.options = options || {};\n    this.metadata = null;\n    this.ros2xviz = null;\n    this.isValid = false;\n\n    if (!this.ros2xvizFactory) {\n      throw new Error('The ROSBagProvider requires a ROS2XVIZFactory instance');\n    }\n  }\n\n  log(msg) {\n    const {logger} = this.options;\n    if (logger && logger.info) {\n      logger.info(msg);\n    }\n  }\n\n  async init() {\n    try {\n      // options: {logger}\n      this.ros2xviz = this.ros2xvizFactory.create(this.rosConfig, this.options);\n      this.bag = new this.BagClass(this.bagPath, this.rosConfig, this.options);\n\n      if (this.bag) {\n        this.isValid = await this.bag.init(this.ros2xviz);\n        if (this.isValid) {\n          this._getMetadata();\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  valid() {\n    return this.isValid;\n  }\n\n  _getMetadata() {\n    if (this.valid) {\n      const xvizMetadataBuilder = new XVIZMetadataBuilder();\n      this.bag.getMetadata(xvizMetadataBuilder, this.ros2xviz);\n\n      const rawMetadata = xvizMetadataBuilder.getMetadata();\n      this.metadata = XVIZEnvelope.Metadata(rawMetadata);\n    }\n  }\n\n  xvizMetadata() {\n    if (!this.metadata) {\n      this._getMetadata();\n    }\n\n    if (this.metadata) {\n      return new XVIZData(this.metadata);\n    }\n\n    return null;\n  }\n\n  getMessageIterator({startTime, endTime} = {}) {\n    // metadata\n    let {start_time: start, end_time: end} = this.metadata.data.log_info;\n\n    // bounds check params\n    if (startTime) {\n      if (startTime >= start && startTime <= end) {\n        start = startTime;\n      }\n    }\n\n    if (endTime) {\n      if (endTime >= start && endTime <= end) {\n        end = endTime;\n      } else {\n        // TODO: allow default duration to be an option\n        end = start + 30;\n      }\n    }\n\n    return new MessageIterator(start, end, 0.1);\n  }\n\n  async xvizMessage(iterator) {\n    const {\n      valid,\n      data: {start, end}\n    } = iterator.next();\n\n    if (!valid) {\n      return null;\n    }\n\n    const dataset = await this.bag.readMessages(start, end);\n    const msg = await this.ros2xviz.buildMessage(dataset);\n\n    if (msg) {\n      return new XVIZData(XVIZEnvelope.StateUpdate(msg));\n    }\n\n    return null;\n  }\n}\n"],"file":"rosbag-provider.js"}