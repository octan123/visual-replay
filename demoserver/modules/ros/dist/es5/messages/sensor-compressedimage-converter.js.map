{"version":3,"sources":["../../../src/messages/sensor-compressedimage-converter.js"],"names":["SensorCompressedImage","config","frame","xvizBuilder","msgs","topic","length","message","format","data","primitive","xvizStream","image","nodeBufferToTypedArray","xvizMetaBuilder","xb","stream","category","type","Converter","buffer","typedArray","Uint8Array"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAaA;;;;;;IAEaA,qB;;;;;AACX,iCAAYC,MAAZ,EAAoB;AAAA;AAAA,6BACZA,MADY;AAEnB;;;;;6GAUoBC,K,EAAOC,W;;;;;;AACpBC,gBAAAA,I,GAAOF,KAAK,CAAC,KAAKG,KAAN,C;;oBACbD,I;;;;;;;;AAIL,oBAAIA,IAAI,CAACE,MAAT,EAAiB;AACRC,kBAAAA,OADQ,GACGH,IAAI,CAACA,IAAI,CAACE,MAAL,GAAc,CAAf,CADP,CACRC,OADQ;AAERC,kBAAAA,MAFQ,GAEQD,OAFR,CAERC,MAFQ,EAEAC,IAFA,GAEQF,OAFR,CAEAE,IAFA;AAIfN,kBAAAA,WAAW,CAACO,SAAZ,CAAsB,KAAKC,UAA3B,EAAuCC,KAAvC,CAA6CC,sBAAsB,CAACJ,IAAD,CAAnE,EAA2ED,MAA3E;AACD;;;;;;;;;;;;;;;;;;gCAGSM,e,EAAiB;AAC3B,UAAMC,EAAE,GAAGD,eAAX;AACAC,MAAAA,EAAE,CAACC,MAAH,CAAU,KAAKL,UAAf,EACGM,QADH,CACY,WADZ,EAEGC,IAFH,CAEQ,OAFR;AAGD;;;wBA3BiB;AAChB,aAAO,uBAAP;AACD;;;wBAEwB;AACvB,aAAO,6BAAP;AACD;;;EAXwCC,qB;;;;AAmC3C,SAASN,sBAAT,CAAgCO,MAAhC,EAAwC;AAEtC,MAAMC,UAAU,GAAG,IAAIC,UAAJ,CAAeF,MAAf,CAAnB;AACA,SAAOC,UAAP;AACD","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport Converter from './converter';\n\nexport class SensorCompressedImage extends Converter {\n  constructor(config) {\n    super(config);\n  }\n\n  static get name() {\n    return 'SensorCompressedImage';\n  }\n\n  static get messageType() {\n    return 'sensor_msgs/CompressedImage';\n  }\n\n  async convertMessage(frame, xvizBuilder) {\n    const msgs = frame[this.topic];\n    if (!msgs) {\n      return;\n    }\n\n    if (msgs.length) {\n      const {message} = msgs[msgs.length - 1];\n      const {format, data} = message;\n\n      xvizBuilder.primitive(this.xvizStream).image(nodeBufferToTypedArray(data), format);\n    }\n  }\n\n  getMetadata(xvizMetaBuilder) {\n    const xb = xvizMetaBuilder;\n    xb.stream(this.xvizStream)\n      .category('primitive')\n      .type('image');\n  }\n}\n\nfunction nodeBufferToTypedArray(buffer) {\n  // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n  const typedArray = new Uint8Array(buffer);\n  return typedArray;\n}\n"],"file":"sensor-compressedimage-converter.js"}