{"version":3,"sources":["../../src/proto-validation.js"],"names":["EXTENSION_PROPERTY","loadProtos","Root","fromJSON","PROTO_DATA","getXVIZProtoTypes","protoRoot","protoTypes","traverseTypes","type","options","undefined","push","current","fn","Type","nestedArray","forEach","eachType","nested"],"mappings":";;;;;;;;;AAiBA;;AACA;;AAEO,IAAMA,kBAAkB,GAAG,oBAA3B;;;AAEA,SAASC,UAAT,GAAsB;AAC3B,SAAOC,iBAAKC,QAAL,CAAcC,gBAAd,CAAP;AACD;;AAEM,SAASC,iBAAT,CAA2BC,SAA3B,EAAsC;AAC3C,MAAMC,UAAU,GAAG,EAAnB;AAEAC,EAAAA,aAAa,CAACF,SAAD,EAAY,UAAAG,IAAI,EAAI;AAC/B,QAAIA,IAAI,CAACC,OAAL,KAAiBC,SAArB,EAAgC;AAC9B,UAAIF,IAAI,CAACC,OAAL,CAAaV,kBAAb,MAAqCW,SAAzC,EAAoD;AAClDJ,QAAAA,UAAU,CAACK,IAAX,CAAgBH,IAAhB;AACD;AACF;AACF,GANY,CAAb;AAQA,SAAOF,UAAP;AACD;;AAED,SAASC,aAAT,CAAuBK,OAAvB,EAAgCC,EAAhC,EAAoC;AAClC,MAAID,OAAO,YAAYE,gBAAvB,EAEED,EAAE,CAACD,OAAD,CAAF;AACF,MAAIA,OAAO,CAACG,WAAZ,EACEH,OAAO,CAACG,WAAR,CAAoBC,OAApB,CAA4B,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AACpDX,IAAAA,aAAa,CAACW,MAAD,EAASL,EAAT,CAAb;AACD,GAFD;AAGH","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/* eslint no-console: off */\n/* eslint-env node, browser */\n\nimport {Root, Type} from 'protobufjs';\nimport {PROTO_DATA} from './data';\n\nexport const EXTENSION_PROPERTY = '(xviz_json_schema)';\n\nexport function loadProtos() {\n  return Root.fromJSON(PROTO_DATA);\n}\n\nexport function getXVIZProtoTypes(protoRoot) {\n  const protoTypes = [];\n\n  traverseTypes(protoRoot, type => {\n    if (type.options !== undefined) {\n      if (type.options[EXTENSION_PROPERTY] !== undefined) {\n        protoTypes.push(type);\n      }\n    }\n  });\n\n  return protoTypes;\n}\n\nfunction traverseTypes(current, fn) {\n  if (current instanceof Type)\n    // and/or protobuf.Enum, protobuf.Service etc.\n    fn(current);\n  if (current.nestedArray)\n    current.nestedArray.forEach(function eachType(nested) {\n      traverseTypes(nested, fn);\n    });\n}\n"],"file":"proto-validation.js"}