{"version":3,"sources":["../../../src/synchronizers/log-slice.js"],"names":["getXVIZConfig","XVIZObject","findInsertPos","INSERT_POSITION","log","getTransformsFromPose","lookAheadTimesliceAccessor","timeslice","length","timestamp","warn","updateObjects","streamName","features","feature","xvizObject","get","id","_addFeature","LogSlice","constructor","streamFilter","lookAheadMs","linksByReverseTime","streamsByReverseTime","variables","pointCloud","lookAheads","components","links","streams","initialize","getCurrentFrame","params","postProcessFrame","vehiclePose","OBJECT_STREAM","frame","resetAll","objects","getAllInCurrentFrame","filter","Object","keys","forEach","_includeStream","addStreamDatum","datum","setLabelsOnXVIZObjects","labels","variable","lookAheadTime","time","lookAheadIndex","RIGHT","undefined","label","object","labelName","_setProp","value","getStream","stream","defaultValue","streamData"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {getXVIZConfig} from '../config/xviz-config';\nimport XVIZObject from '../objects/xviz-object';\nimport {findInsertPos, INSERT_POSITION} from '../utils/search';\nimport log from '../utils/log';\n\nimport {getTransformsFromPose} from '../parsers/parse-vehicle-pose';\n\n// lookAheads is an array of arrays, so we need to fetch out the first\n// timestamp of the inner array.\nfunction lookAheadTimesliceAccessor(timeslice) {\n  if (timeslice && timeslice.length) {\n    return timeslice[0].timestamp;\n  }\n\n  log.warn('Missing entry or timestamp in lookAhead array')();\n  return 0;\n}\n\nfunction updateObjects(streamName, features) {\n  for (const feature of features) {\n    const xvizObject = XVIZObject.get(feature.id);\n    if (xvizObject) {\n      xvizObject._addFeature(streamName, feature);\n    }\n  }\n}\n\n// LOGSLICE CLASS\n\n// One time slice, one datum from each stream.\nexport default class LogSlice {\n  constructor(streamFilter, lookAheadMs, linksByReverseTime, streamsByReverseTime) {\n    this.features = {};\n    this.variables = {};\n    this.pointCloud = null;\n    this.lookAheads = {};\n    this.components = {};\n    this.links = {};\n    this.streams = {};\n\n    this.initialize(streamFilter, lookAheadMs, linksByReverseTime, streamsByReverseTime);\n  }\n\n  // Extract car data from vehicle_pose and get geoJson for related frames\n  /* eslint-disable max-statements */\n  getCurrentFrame(params, postProcessFrame) {\n    const {vehiclePose} = params;\n    if (!vehiclePose) {\n      return null;\n    }\n\n    const {OBJECT_STREAM} = getXVIZConfig();\n\n    const frame = {\n      ...params,\n      ...getTransformsFromPose(vehiclePose),\n      vehiclePose,\n      features: this.features,\n      lookAheads: this.lookAheads,\n      variables: this.variables,\n      pointCloud: this.pointCloud,\n      components: this.components,\n      streams: this.streams,\n      links: this.links\n    };\n\n    // OBJECTS\n    XVIZObject.resetAll();\n    if (postProcessFrame) {\n      postProcessFrame(frame);\n    }\n\n    // OBJECT_STREAM is deprecated, only keeping for backward compatibility\n    if (OBJECT_STREAM) {\n      updateObjects(OBJECT_STREAM, this.features[OBJECT_STREAM] || []);\n    } else {\n      for (const streamName in this.features) {\n        const features = this.features[streamName];\n        if (features.length && features[0].id) {\n          updateObjects(streamName, features);\n        }\n      }\n\n      for (const streamName in this.variables) {\n        const variables = this.variables[streamName];\n        if (variables.length && variables[0].id) {\n          updateObjects(streamName, variables);\n        }\n      }\n    }\n\n    frame.objects = XVIZObject.getAllInCurrentFrame(); // Map of XVIZ ids in current slice\n\n    return frame;\n  }\n  /* eslint-enable max-statements */\n\n  // HELPER METHODS\n\n  /**\n   * In-contrast to the per-stream post-processors,\n   * this function has the ability to look at and correlate data from multiple streams.\n   * Among other things parses XVIZ Object-related info from misc streams and merge into XVIZ\n   * feature properties.\n   */\n  initialize(streamFilter, lookAheadMs, linksByReverseTime, streamsByReverseTime) {\n    const filter = streamFilter && Object.keys(streamFilter).length > 0 ? streamFilter : null;\n\n    // get data if we don't already have that stream && it is not filtered.\n    streamsByReverseTime.forEach(streams => {\n      for (const streamName in streams) {\n        if (\n          this.streams[streamName] !== null && // Explicit no data entry\n          !this.streams[streamName] && // undefined means it has not been seen so keep looking for valid entry\n          this._includeStream(filter, streamName)\n        ) {\n          this.addStreamDatum(streams[streamName], streamName, lookAheadMs, this);\n        }\n      }\n    });\n\n    // get data if we don't already have that stream && it is not filtered.\n    linksByReverseTime.forEach(links => {\n      for (const streamName in links) {\n        if (\n          this.links[streamName] !== null && // Explicit no data entry\n          !this.links[streamName] && // undefined means it has not been seen so keep looking for valid entry\n          this._includeStream(filter, streamName)\n        ) {\n          this.links[streamName] = links[streamName];\n        }\n      }\n    });\n  }\n\n  /**\n   * Process a stream and put the appropriate data into\n   */\n  addStreamDatum(datum, streamName, lookAheadMs) {\n    this.streams[streamName] = datum;\n\n    // Handle the no data case\n    if (!datum) {\n      return;\n    }\n\n    this.setLabelsOnXVIZObjects(datum.labels);\n\n    const {features = [], lookAheads = [], variable, pointCloud = null} = datum;\n\n    // Future data is separate from features so we can control independently\n    if (lookAheads.length && lookAheadMs > 0) {\n      const lookAheadTime = datum.time + lookAheadMs;\n      const lookAheadIndex = findInsertPos(\n        lookAheads,\n        lookAheadTime,\n        INSERT_POSITION.RIGHT,\n        lookAheadTimesliceAccessor\n      );\n\n      if (lookAheadIndex) {\n        this.lookAheads[streamName] = lookAheads[lookAheadIndex - 1];\n      }\n    }\n\n    // Combine data from current datums\n    if (features.length) {\n      this.features[streamName] = features;\n    }\n\n    // Point cloud\n    if (pointCloud) {\n      this.pointCloud = pointCloud;\n    }\n\n    if (variable !== undefined) {\n      this.variables[streamName] = variable;\n    }\n  }\n\n  setLabelsOnXVIZObjects(labels = []) {\n    // Sort labels by id\n    labels.forEach(label => {\n      const object = XVIZObject.get(label.id);\n      if (object && label.labelName) {\n        // Extract label name (acceleration, velocity etc.) from stream name\n\n        // For streams that do not follow the simple pattern in STREAM_REGEXP\n        // Lookup for exact matches for labels first.\n        object._setProp(label.labelName, label.value);\n      }\n    });\n  }\n\n  // Helper function to get a stream from data\n  // @param {Object} data - log data\n  // @param {String} stream - name of stream\n  // @param {*} defaultValue={} - return value in case stream is not present\n  // @return {Object} - contents of stream or defaultValue\n  getStream(stream, defaultValue = {}) {\n    const streamData = this.streams[stream];\n    if (!streamData) {\n      return defaultValue;\n    }\n    return streamData;\n  }\n\n  _includeStream(streamFilter, streamName) {\n    return !streamFilter || streamFilter[streamName];\n  }\n}\n"],"file":"log-slice.js"}