{"version":3,"sources":["../../../src/objects/xviz-object-collection.js"],"names":["XVIZObject","XVIZObjectCollection","constructor","ObjectType","objects","Map","clear","count","size","observe","id","timestamp","undefined","toString","has","object","get","_observe","set","resetAll","forEach","_reset","getAll","result","getAllInCurrentFrame","isValid","prune","startTime","endTime","idsToRemove","push","delete"],"mappings":"AAcA,OAAOA,UAAP,MAAuB,eAAvB;AAEA,eAAe,MAAMC,oBAAN,CAA2B;AACxCC,EAAAA,WAAW,CAAC;AAACC,IAAAA,UAAU,GAAGH;AAAd,MAA4B,EAA7B,EAAiC;AAE1C,SAAKI,OAAL,GAAe,IAAIC,GAAJ,EAAf;AACA,SAAKF,UAAL,GAAkBA,UAAlB;AACD;;AAGDG,EAAAA,KAAK,GAAG;AACN,SAAKF,OAAL,CAAaE,KAAb;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACN,WAAO,KAAKH,OAAL,CAAaI,IAApB;AACD;;AAGDC,EAAAA,OAAO,CAACC,EAAD,EAAKC,SAAL,EAAgB;AACrB,QAAID,EAAE,KAAKE,SAAP,IAAoBF,EAAE,KAAK,IAA/B,EAAqC;AACnC;AACD;;AAEDA,IAAAA,EAAE,GAAGA,EAAE,CAACG,QAAH,EAAL;;AACA,QAAI,KAAKT,OAAL,CAAaU,GAAb,CAAiBJ,EAAjB,CAAJ,EAA0B;AACxB,YAAMK,MAAM,GAAG,KAAKX,OAAL,CAAaY,GAAb,CAAiBN,EAAjB,CAAf;;AACAK,MAAAA,MAAM,CAACE,QAAP,CAAgBN,SAAhB;AACD,KAHD,MAGO;AACL,YAAMI,MAAM,GAAG,IAAI,KAAKZ,UAAT,CAAoB;AAACO,QAAAA,EAAD;AAAKC,QAAAA;AAAL,OAApB,CAAf;AACA,WAAKP,OAAL,CAAac,GAAb,CAAiBR,EAAjB,EAAqBK,MAArB;AACD;AACF;;AAEDC,EAAAA,GAAG,CAACN,EAAD,EAAK;AACN,QAAIA,EAAE,KAAKE,SAAP,IAAoBF,EAAE,KAAK,IAA/B,EAAqC;AACnC,aAAO,IAAP;AACD;;AAEDA,IAAAA,EAAE,GAAGA,EAAE,CAACG,QAAH,EAAL;AACA,WAAO,KAAKT,OAAL,CAAaY,GAAb,CAAiBN,EAAjB,KAAwB,IAA/B;AACD;;AAGDS,EAAAA,QAAQ,GAAG;AACT,SAAKf,OAAL,CAAagB,OAAb,CAAqBL,MAAM,IAAIA,MAAM,CAACM,MAAP,EAA/B;AACD;;AAGDC,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,EAAf;AACA,SAAKnB,OAAL,CAAagB,OAAb,CAAqB,CAACL,MAAD,EAASL,EAAT,KAAgB;AACnCa,MAAAA,MAAM,CAACb,EAAD,CAAN,GAAaK,MAAb;AACD,KAFD;AAGA,WAAOQ,MAAP;AACD;;AAGDC,EAAAA,oBAAoB,GAAG;AACrB,UAAMD,MAAM,GAAG,EAAf;AACA,SAAKnB,OAAL,CAAagB,OAAb,CAAqB,CAACL,MAAD,EAASL,EAAT,KAAgB;AACnC,UAAIK,MAAM,CAACU,OAAX,EAAoB;AAClBF,QAAAA,MAAM,CAACb,EAAD,CAAN,GAAaK,MAAb;AACD;AACF,KAJD;AAKA,WAAOQ,MAAP;AACD;;AAGDG,EAAAA,KAAK,CAACC,SAAD,EAAYC,OAAZ,EAAqB;AACxB,UAAM;AAACxB,MAAAA;AAAD,QAAY,IAAlB;AACA,UAAMyB,WAAW,GAAG,EAApB;AAEAzB,IAAAA,OAAO,CAACgB,OAAR,CAAgB,CAACL,MAAD,EAASL,EAAT,KAAgB;AAC9B,UAAIK,MAAM,CAACa,OAAP,GAAiBD,SAAjB,IAA8BZ,MAAM,CAACY,SAAP,GAAmBC,OAArD,EAA8D;AAC5DC,QAAAA,WAAW,CAACC,IAAZ,CAAiBpB,EAAjB;AACD;AACF,KAJD;AAKAmB,IAAAA,WAAW,CAACT,OAAZ,CAAoBV,EAAE,IAAI;AACxBN,MAAAA,OAAO,CAAC2B,MAAR,CAAerB,EAAf;AACD,KAFD;AAGD;;AA/EuC","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport XVIZObject from './xviz-object';\n\nexport default class XVIZObjectCollection {\n  constructor({ObjectType = XVIZObject} = {}) {\n    // A map of all XVIZ objects, across time\n    this.objects = new Map();\n    this.ObjectType = ObjectType;\n  }\n\n  // Drop all XVIZ objects\n  clear() {\n    this.objects.clear();\n  }\n\n  count() {\n    return this.objects.size;\n  }\n\n  // Create a new XVIZ object at timestamp if it does not exist.\n  observe(id, timestamp) {\n    if (id === undefined || id === null) {\n      return;\n    }\n    // Map keys use strict equal\n    id = id.toString();\n    if (this.objects.has(id)) {\n      const object = this.objects.get(id);\n      object._observe(timestamp);\n    } else {\n      const object = new this.ObjectType({id, timestamp});\n      this.objects.set(id, object);\n    }\n  }\n\n  get(id) {\n    if (id === undefined || id === null) {\n      return null;\n    }\n    // Map keys use strict equal\n    id = id.toString();\n    return this.objects.get(id) || null;\n  }\n\n  // Clears all XVIZ object props for a fresh new frame.\n  resetAll() {\n    this.objects.forEach(object => object._reset());\n  }\n\n  // Returns all XVIZ objects\n  getAll() {\n    const result = {};\n    this.objects.forEach((object, id) => {\n      result[id] = object;\n    });\n    return result;\n  }\n\n  // Returns all XVIZ objects present in current frame\n  getAllInCurrentFrame() {\n    const result = {};\n    this.objects.forEach((object, id) => {\n      if (object.isValid) {\n        result[id] = object;\n      }\n    });\n    return result;\n  }\n\n  // Removes XVIZ objects that are outside of a time window\n  prune(startTime, endTime) {\n    const {objects} = this;\n    const idsToRemove = [];\n\n    objects.forEach((object, id) => {\n      if (object.endTime < startTime || object.startTime > endTime) {\n        idsToRemove.push(id);\n      }\n    });\n    idsToRemove.forEach(id => {\n      objects.delete(id);\n    });\n  }\n}\n"],"file":"xviz-object-collection.js"}