{"version":3,"sources":["../../../src/objects/xviz-object.js"],"names":["Vector2","BaseObject","getCentroid","defaultCollection","serialIndex","XVIZObject","setDefaultCollection","collection","constructor","id","timestamp","index","state","startTime","endTime","_props","Map","_streams","_geometry","observe","get","clear","count","resetAll","getAll","getAllInCurrentFrame","prune","position","p","Number","isFinite","isValid","Boolean","streamNames","keys","getBearingToObject","object","myPosition","otherPosition","bearing","Math","atan2","PI","getDistanceToObject","distance","round","getProp","name","getFeature","streamName","_observe","min","max","_addFeature","feature","set","entry","center","vertices","Array","isArray","_setState","value","_setProp","_reset","size"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Vector2} from 'math.gl';\n\nimport BaseObject from './base-object';\nimport {getCentroid} from '../utils/geometry';\n\nlet defaultCollection = null;\nlet serialIndex = 0;\n\n/**\n * Contains metadata and state of each XVIZ object\n */\nexport default class XVIZObject extends BaseObject {\n  static setDefaultCollection(collection) {\n    defaultCollection = collection;\n  }\n\n  constructor({id, timestamp}) {\n    super();\n\n    /* Persistent */\n    this.id = id;\n    this.index = serialIndex++;\n    this.state = {};\n    this.startTime = timestamp;\n    this.endTime = timestamp;\n\n    // Use Map here for the clear() method without creating a new object\n    this._props = new Map();\n    this._streams = new Map();\n    this._geometry = null;\n  }\n\n  static observe(id, timestamp) {\n    return defaultCollection && defaultCollection.observe(id, timestamp);\n  }\n  static get(id) {\n    return defaultCollection && defaultCollection.get(id);\n  }\n  static clear() {\n    return defaultCollection && defaultCollection.clear();\n  }\n  static count() {\n    return defaultCollection && defaultCollection.count();\n  }\n  static resetAll() {\n    return defaultCollection && defaultCollection.resetAll();\n  }\n  static getAll() {\n    return defaultCollection && defaultCollection.getAll();\n  }\n  static getAllInCurrentFrame() {\n    return defaultCollection && defaultCollection.getAllInCurrentFrame();\n  }\n  static prune(startTime, endTime) {\n    return defaultCollection && defaultCollection.prune(startTime, endTime);\n  }\n\n  // returns a single tracking point for this object\n  get position() {\n    const p = this._geometry;\n    if (!p) {\n      return null;\n    }\n    if (Number.isFinite(p[0])) {\n      return p;\n    }\n    this._geometry = getCentroid(p);\n    return this._geometry;\n  }\n\n  // this prop is cleared every time `reset` is called\n  get isValid() {\n    return Boolean(this._geometry);\n  }\n\n  get streamNames() {\n    return this._streams.keys();\n  }\n\n  getBearingToObject(object) {\n    const myPosition = this.position;\n    const otherPosition = object.position;\n\n    if (myPosition && otherPosition) {\n      // Look at the other object\n      // TODO - handle degenerate case when in same position\n      const bearing =\n        (Math.atan2(otherPosition[1] - myPosition[1], otherPosition[0] - myPosition[0]) / Math.PI) *\n        180;\n\n      return bearing;\n    }\n\n    return null;\n  }\n\n  // Helper, calculates distance from specified XVIZ object to car\n  // 2D distance only, ignores z coordinate\n  getDistanceToObject(object) {\n    const myPosition = this.position;\n    const otherPosition = object.position;\n\n    let distance = null;\n\n    if (myPosition && otherPosition) {\n      // TODO - calc distance to object trackingPoint\n      // Ultimately distance might be desired as between closest surface points\n      // We must disregard height to compensate for other choices in our ingestion stack\n      distance = new Vector2(myPosition).distance(otherPosition);\n      distance = Math.round(distance * 10) / 10;\n    }\n\n    return distance;\n  }\n\n  getProp(name) {\n    return this._props.get(name);\n  }\n\n  getFeature(streamName) {\n    return this._streams.get(streamName);\n  }\n\n  // PRIVATE METHODS\n\n  _observe(timestamp) {\n    this.startTime = Math.min(this.startTime, timestamp);\n    this.endTime = Math.max(this.endTime, timestamp);\n  }\n\n  _addFeature(streamName, feature) {\n    this._streams.set(streamName, feature);\n\n    // populate the feature with object props\n    feature.index = this.index;\n    feature.state = this.state;\n    for (const entry of this._props) {\n      feature[entry[0]] = entry[1];\n    }\n\n    // save feature geometry for tracking\n    const p = feature.center || feature.vertices;\n\n    if (!p || !Array.isArray(p)) {\n      return;\n    }\n    if (Number.isFinite(p[0])) {\n      p[2] = p[2] || 0;\n    } else if (this._geometry) {\n      // Prefer point over point array\n      return;\n    }\n    // store the point(s) as is\n    this._geometry = p;\n  }\n\n  _setState(name, value) {\n    if (name) {\n      this.state[name] = value;\n    }\n  }\n\n  _setProp(name, value) {\n    this._props.set(name, value);\n  }\n\n  // This should be called at the beginning of `getCurrentFrame`\n  _reset() {\n    if (this._props.size) {\n      this._props.clear();\n    }\n    if (this._streams.size) {\n      this._streams.clear();\n    }\n    // clear the cached position\n    this._geometry = null;\n  }\n}\n"],"file":"xviz-object.js"}