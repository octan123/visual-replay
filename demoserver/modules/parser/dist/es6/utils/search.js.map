{"version":3,"sources":["../../../src/utils/search.js"],"names":["assert","INSERT_POSITION","LEFT","RIGHT","defaultTimestampAccessor","timeslice","timestamp","findInsertPos","timeslices","insertPosition","timestampAccessor","Number","isFinite","lowerBound","upperBound","length","currentIndex","currentTimestamp"],"mappings":"AAcA,OAAOA,MAAP,MAAmB,iBAAnB;AAEA,OAAO,MAAMC,eAAe,GAAG;AAC7BC,EAAAA,IAAI,EAAE,CADuB;AAE7BC,EAAAA,KAAK,EAAE;AAFsB,CAAxB;;AAKP,MAAMC,wBAAwB,GAAGC,SAAS,IAAIA,SAAS,CAACC,SAAxD;;AAUA,OAAO,SAASC,aAAT,CACLC,UADK,EAELF,SAFK,EAGLG,cAAc,GAAGR,eAAe,CAACC,IAH5B,EAILQ,iBAAiB,GAAGN,wBAJf,EAKL;AACAJ,EAAAA,MAAM,CAACW,MAAM,CAACC,QAAP,CAAgBN,SAAhB,CAAD,EAA6B,kCAA7B,CAAN;AAEA,MAAIO,UAAU,GAAG,CAAjB;AACA,MAAIC,UAAU,GAAGN,UAAU,CAACO,MAAX,GAAoB,CAArC;AACA,MAAIC,YAAJ;AACA,MAAIC,gBAAJ;;AAEA,SAAOJ,UAAU,IAAIC,UAArB,EAAiC;AAC/BE,IAAAA,YAAY,GAAI,CAACH,UAAU,GAAGC,UAAd,IAA4B,CAA7B,GAAkC,CAAjD;AACAG,IAAAA,gBAAgB,GAAGP,iBAAiB,CAACF,UAAU,CAACQ,YAAD,CAAX,CAApC;;AAEA,QAAIC,gBAAgB,GAAGX,SAAvB,EAAkC;AAChCO,MAAAA,UAAU,GAAGG,YAAY,GAAG,CAA5B;AACD,KAFD,MAEO,IAAIC,gBAAgB,GAAGX,SAAvB,EAAkC;AACvCQ,MAAAA,UAAU,GAAGE,YAAY,GAAG,CAA5B;AACD,KAFM,MAEA;AACL,aAAOP,cAAc,KAAKR,eAAe,CAACC,IAAnC,GAA0Cc,YAA1C,GAAyDA,YAAY,GAAG,CAA/E;AACD;AACF;;AAED,SAAOH,UAAP;AACD","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport assert from '../utils/assert';\n\nexport const INSERT_POSITION = {\n  LEFT: 0,\n  RIGHT: 1\n};\n\nconst defaultTimestampAccessor = timeslice => timeslice.timestamp;\n\n/**\n * Binary search on sorted timeslices\n * @params {Array} timeslices which elements contain a 'timestamp' property\n * @params {number} timestamp\n * @params {number} insertPosition - insert to the left or right of the equal element.\n * @params {number} timestampAccessor - access the timestamp of the timeslice elements\n * @returns {number} index of insert position\n */\nexport function findInsertPos(\n  timeslices,\n  timestamp,\n  insertPosition = INSERT_POSITION.LEFT,\n  timestampAccessor = defaultTimestampAccessor\n) {\n  assert(Number.isFinite(timestamp), 'valid timeslice search timestamp');\n\n  let lowerBound = 0;\n  let upperBound = timeslices.length - 1;\n  let currentIndex;\n  let currentTimestamp;\n\n  while (lowerBound <= upperBound) {\n    currentIndex = ((lowerBound + upperBound) / 2) | 0;\n    currentTimestamp = timestampAccessor(timeslices[currentIndex]);\n\n    if (currentTimestamp < timestamp) {\n      lowerBound = currentIndex + 1;\n    } else if (currentTimestamp > timestamp) {\n      upperBound = currentIndex - 1;\n    } else {\n      return insertPosition === INSERT_POSITION.LEFT ? currentIndex : currentIndex + 1;\n    }\n  }\n\n  return lowerBound;\n}\n"],"file":"search.js"}