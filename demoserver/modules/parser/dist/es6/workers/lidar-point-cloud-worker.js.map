{"version":3,"sources":["../../../src/workers/lidar-point-cloud-worker.js"],"names":["setXVIZConfig","parseXVIZStream","TextDecoder","config","self","onmessage","e","dataView","DataView","data","decoder","decodedString","decode","JSON","parse","transfers","map","pointCloud","time","push","ids","buffer","colors","positions","postMessage","close","error","Error"],"mappings":"AAcA,SAAQA,aAAR,QAA4B,uBAA5B;AACA,SAAQC,eAAR,QAA8B,8BAA9B;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AAEA,gBAAeC,MAAM,IAAIC,IAAI,IAAI;AAC/BJ,EAAAA,aAAa,CAACG,MAAD,CAAb;;AAEAC,EAAAA,IAAI,CAACC,SAAL,GAAiBC,CAAC,IAAI;AACpB,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,CAAaF,CAAC,CAACG,IAAf,CAAjB;AACA,UAAMC,OAAO,GAAG,IAAIR,WAAJ,CAAgB,OAAhB,CAAhB;AACA,UAAMS,aAAa,GAAGD,OAAO,CAACE,MAAR,CAAeL,QAAf,CAAtB;;AAEA,QAAI;AACF,UAAIE,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWH,aAAX,CAAX;AACAF,MAAAA,IAAI,GAAGR,eAAe,CAACQ,IAAD,CAAtB;AAEA,YAAMM,SAAS,GAAG,EAAlB;AAEAN,MAAAA,IAAI,GAAGA,IAAI,CAACO,GAAL,CAAS,CAAC;AAACC,QAAAA,UAAD;AAAaC,QAAAA;AAAb,OAAD,KAAwB;AACtC,YAAID,UAAJ,EAAgB;AACdF,UAAAA,SAAS,CAACI,IAAV,CACEF,UAAU,CAACG,GAAX,CAAeC,MADjB,EAEEJ,UAAU,CAACK,MAAX,CAAkBD,MAFpB,EAGEJ,UAAU,CAACM,SAAX,CAAqBF,MAHvB;AAKD;;AACD,eAAO;AAACJ,UAAAA,UAAD;AAAaC,UAAAA;AAAb,SAAP;AACD,OATM,CAAP;AAYAd,MAAAA,IAAI,CAACoB,WAAL,CAEEf,IAFF,EAKEM,SALF;AASAX,MAAAA,IAAI,CAACqB,KAAL;AACD,KA5BD,CA4BE,OAAOC,KAAP,EAAc;AACd,YAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,GApCD;AAqCD,CAxCD","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {setXVIZConfig} from '../config/xviz-config';\nimport {parseXVIZStream} from '../parsers/parse-xviz-stream';\nimport {TextDecoder} from '../utils/text-encoding';\n\nexport default config => self => {\n  setXVIZConfig(config);\n\n  self.onmessage = e => {\n    const dataView = new DataView(e.data);\n    const decoder = new TextDecoder('utf-8');\n    const decodedString = decoder.decode(dataView);\n\n    try {\n      let data = JSON.parse(decodedString);\n      data = parseXVIZStream(data);\n\n      const transfers = [];\n\n      data = data.map(({pointCloud, time}) => {\n        if (pointCloud) {\n          transfers.push(\n            pointCloud.ids.buffer,\n            pointCloud.colors.buffer,\n            pointCloud.positions.buffer\n          );\n        }\n        return {pointCloud, time};\n      });\n\n      // https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\n      self.postMessage(\n        // aMessage\n        data,\n        // transferList, calls out which elements inside the data structure of the\n        // first argument to not copy\n        transfers\n      );\n\n      // Terminate\n      self.close();\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n};\n"],"file":"lidar-point-cloud-worker.js"}