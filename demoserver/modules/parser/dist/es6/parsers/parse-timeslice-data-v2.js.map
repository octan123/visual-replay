{"version":3,"sources":["../../../src/parsers/parse-timeslice-data-v2.js"],"names":["XVIZ_MESSAGE_TYPE","STATE_UPDATE_TYPE","getXVIZConfig","parseXVIZPose","parseXVIZLink","parseStreamFutures","parseStreamPrimitive","parseStreamVariable","parseStreamTimeSeries","parseStreamUIPrimitives","log","parseStreamSet","data","convertPrimitive","update_type","updates","updateType","toUpperCase","error","type","INCOMPLETE","message","length","warn","streamSets","timestamp","reduce","t","stateUpdate","Math","max","Number","isFinite","result","TIMESLICE","streams","links","parseStreamSets","Object","assign","STREAM_BLACKLIST","newStreams","newLinks","poses","primitives","variables","timeSeries","futures","uiPrimitives","noDataStreams","streamSet","future_instances","ui_primitives","time_series","push","no_data_streams","keys","filter","streamName","has","forEach","primitive","variable","timeSeriesStreams","future","stream"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Extracts a TIMESLICE message v2\nimport {XVIZ_MESSAGE_TYPE, STATE_UPDATE_TYPE} from '../constants';\nimport {getXVIZConfig} from '../config/xviz-config';\nimport {parseXVIZPose} from './parse-xviz-pose';\nimport {parseXVIZLink} from './parse-xviz-link';\nimport {\n  parseStreamFutures,\n  parseStreamPrimitive,\n  parseStreamVariable,\n  parseStreamTimeSeries,\n  parseStreamUIPrimitives\n} from './parse-xviz-stream';\nimport log from '../utils/log';\n\n/* eslint-disable camelcase */\n\nexport default function parseStreamSet(data, convertPrimitive) {\n  const {update_type, updates} = data;\n  const updateType = STATE_UPDATE_TYPE[update_type.toUpperCase()];\n\n  if (!updateType) {\n    log.error(`update_type of \"${update_type}\" is not supported.`)();\n    return {type: XVIZ_MESSAGE_TYPE.INCOMPLETE, message: 'Unsupported update type'};\n  }\n\n  if (!updates) {\n    return {type: XVIZ_MESSAGE_TYPE.INCOMPLETE, message: 'Missing required \"updates\" property'};\n  }\n\n  if (updates && updates.length === 0) {\n    return {\n      type: XVIZ_MESSAGE_TYPE.INCOMPLETE,\n      message: 'Property \"updates\" has length of 0, no data?'\n    };\n  }\n\n  if (updates.length > 1) {\n    log.warn(\n      `Only XVIZ first update of \"snapshot\" is currently supported. Current updates has \"${\n        updates.length\n      }\" entries.`\n    )();\n  }\n\n  const streamSets = updates;\n\n  let timestamp = null;\n  if (streamSets) {\n    timestamp = streamSets.reduce((t, stateUpdate) => {\n      if (!t) {\n        return stateUpdate && stateUpdate.timestamp;\n      }\n      return Math.max(t, stateUpdate.timestamp);\n    }, null);\n  }\n\n  if (!Number.isFinite(timestamp)) {\n    // Incomplete stream message, just tag it accordingly so client can ignore it\n    return {type: XVIZ_MESSAGE_TYPE.INCOMPLETE, message: 'Missing timestamp in \"updates\"'};\n  }\n\n  const result = {\n    type: XVIZ_MESSAGE_TYPE.TIMESLICE,\n    updateType,\n    streams: {},\n    links: {},\n    timestamp\n    // TODO/Xintong validate primary vehicle pose in each update?\n  };\n\n  if (streamSets) {\n    const {streams, links} = parseStreamSets(streamSets, timestamp, convertPrimitive);\n    Object.assign(result.streams, streams);\n    Object.assign(result.links, links);\n  }\n\n  return result;\n}\n\n/* eslint-disable max-statements */\nfunction parseStreamSets(streamSets, timestamp, convertPrimitive) {\n  const {STREAM_BLACKLIST} = getXVIZConfig();\n\n  const newStreams = {};\n  const newLinks = {};\n\n  const poses = {};\n  const primitives = {};\n  const variables = {};\n  const timeSeries = [];\n  const futures = {};\n  const uiPrimitives = {};\n  const noDataStreams = [];\n\n  for (const streamSet of streamSets) {\n    Object.assign(newLinks, streamSet.links);\n\n    Object.assign(poses, streamSet.poses);\n    Object.assign(primitives, streamSet.primitives);\n    Object.assign(variables, streamSet.variables);\n    Object.assign(futures, streamSet.future_instances);\n    Object.assign(uiPrimitives, streamSet.ui_primitives);\n\n    if (streamSet.time_series) {\n      if (timeSeries) {\n        timeSeries.push(...streamSet.time_series);\n      }\n    }\n\n    if (streamSet.no_data_streams) {\n      noDataStreams.push(...streamSet.no_data_streams);\n    }\n  }\n\n  Object.keys(newLinks)\n    .filter(streamName => !STREAM_BLACKLIST.has(streamName))\n    .forEach(streamName => {\n      newLinks[streamName] = parseXVIZLink(newLinks[streamName]);\n    });\n\n  Object.keys(poses)\n    .filter(streamName => !STREAM_BLACKLIST.has(streamName))\n    .forEach(streamName => {\n      newStreams[streamName] = parseXVIZPose(poses[streamName]);\n    });\n\n  Object.keys(primitives)\n    .filter(streamName => !STREAM_BLACKLIST.has(streamName))\n    .forEach(primitive => {\n      newStreams[primitive] = parseStreamPrimitive(\n        primitives[primitive],\n        primitive,\n        timestamp,\n        convertPrimitive\n      );\n    });\n\n  Object.keys(variables)\n    .filter(streamName => !STREAM_BLACKLIST.has(streamName))\n    .forEach(variable => {\n      newStreams[variable] = parseStreamVariable(variables[variable], variable, timestamp);\n    });\n\n  if (timeSeries.length) {\n    const timeSeriesStreams = parseStreamTimeSeries(timeSeries, STREAM_BLACKLIST);\n    Object.assign(newStreams, timeSeriesStreams);\n  }\n\n  Object.keys(futures)\n    .filter(streamName => !STREAM_BLACKLIST.has(streamName))\n    .forEach(future => {\n      newStreams[future] = parseStreamFutures(futures[future], future, timestamp, convertPrimitive);\n    });\n\n  Object.keys(uiPrimitives)\n    .filter(streamName => !STREAM_BLACKLIST.has(streamName))\n    .forEach(primitive => {\n      newStreams[primitive] = parseStreamUIPrimitives(\n        uiPrimitives[primitive],\n        primitive,\n        timestamp\n      );\n    });\n\n  if (noDataStreams.length) {\n    // Explicitly set to null and the stream buffer will do the right thing\n    noDataStreams.forEach(stream => (newStreams[stream] = null));\n  }\n\n  return {\n    streams: newStreams,\n    links: newLinks\n  };\n}\n/* eslint-enable max-statements */\n"],"file":"parse-timeslice-data-v2.js"}