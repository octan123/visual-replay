{"version":3,"sources":["../../../src/objects/xviz-object.js"],"names":["Vector2","BaseObject","getCentroid","defaultCollection","serialIndex","XVIZObject","collection","id","timestamp","index","state","startTime","endTime","_props","Map","_streams","_geometry","object","myPosition","position","otherPosition","bearing","Math","atan2","PI","distance","round","name","get","streamName","min","max","feature","set","entry","p","center","vertices","Array","isArray","Number","isFinite","value","size","clear","Boolean","keys","observe","count","resetAll","getAll","getAllInCurrentFrame","prune"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Vector2} from 'math.gl';\n\nimport BaseObject from './base-object';\nimport {getCentroid} from '../utils/geometry';\n\nlet defaultCollection = null;\nlet serialIndex = 0;\n\n/**\n * Contains metadata and state of each XVIZ object\n */\nexport default class XVIZObject extends BaseObject {\n  static setDefaultCollection(collection) {\n    defaultCollection = collection;\n  }\n\n  constructor({id, timestamp}) {\n    super();\n\n    /* Persistent */\n    this.id = id;\n    this.index = serialIndex++;\n    this.state = {};\n    this.startTime = timestamp;\n    this.endTime = timestamp;\n\n    // Use Map here for the clear() method without creating a new object\n    this._props = new Map();\n    this._streams = new Map();\n    this._geometry = null;\n  }\n\n  static observe(id, timestamp) {\n    return defaultCollection && defaultCollection.observe(id, timestamp);\n  }\n  static get(id) {\n    return defaultCollection && defaultCollection.get(id);\n  }\n  static clear() {\n    return defaultCollection && defaultCollection.clear();\n  }\n  static count() {\n    return defaultCollection && defaultCollection.count();\n  }\n  static resetAll() {\n    return defaultCollection && defaultCollection.resetAll();\n  }\n  static getAll() {\n    return defaultCollection && defaultCollection.getAll();\n  }\n  static getAllInCurrentFrame() {\n    return defaultCollection && defaultCollection.getAllInCurrentFrame();\n  }\n  static prune(startTime, endTime) {\n    return defaultCollection && defaultCollection.prune(startTime, endTime);\n  }\n\n  // returns a single tracking point for this object\n  get position() {\n    const p = this._geometry;\n    if (!p) {\n      return null;\n    }\n    if (Number.isFinite(p[0])) {\n      return p;\n    }\n    this._geometry = getCentroid(p);\n    return this._geometry;\n  }\n\n  // this prop is cleared every time `reset` is called\n  get isValid() {\n    return Boolean(this._geometry);\n  }\n\n  get streamNames() {\n    return this._streams.keys();\n  }\n\n  getBearingToObject(object) {\n    const myPosition = this.position;\n    const otherPosition = object.position;\n\n    if (myPosition && otherPosition) {\n      // Look at the other object\n      // TODO - handle degenerate case when in same position\n      const bearing =\n        (Math.atan2(otherPosition[1] - myPosition[1], otherPosition[0] - myPosition[0]) / Math.PI) *\n        180;\n\n      return bearing;\n    }\n\n    return null;\n  }\n\n  // Helper, calculates distance from specified XVIZ object to car\n  // 2D distance only, ignores z coordinate\n  getDistanceToObject(object) {\n    const myPosition = this.position;\n    const otherPosition = object.position;\n\n    let distance = null;\n\n    if (myPosition && otherPosition) {\n      // TODO - calc distance to object trackingPoint\n      // Ultimately distance might be desired as between closest surface points\n      // We must disregard height to compensate for other choices in our ingestion stack\n      distance = new Vector2(myPosition).distance(otherPosition);\n      distance = Math.round(distance * 10) / 10;\n    }\n\n    return distance;\n  }\n\n  getProp(name) {\n    return this._props.get(name);\n  }\n\n  getFeature(streamName) {\n    return this._streams.get(streamName);\n  }\n\n  // PRIVATE METHODS\n\n  _observe(timestamp) {\n    this.startTime = Math.min(this.startTime, timestamp);\n    this.endTime = Math.max(this.endTime, timestamp);\n  }\n\n  _addFeature(streamName, feature) {\n    this._streams.set(streamName, feature);\n\n    // populate the feature with object props\n    feature.index = this.index;\n    feature.state = this.state;\n    for (const entry of this._props) {\n      feature[entry[0]] = entry[1];\n    }\n\n    // save feature geometry for tracking\n    const p = feature.center || feature.vertices;\n\n    if (!p || !Array.isArray(p)) {\n      return;\n    }\n    if (Number.isFinite(p[0])) {\n      p[2] = p[2] || 0;\n    } else if (this._geometry) {\n      // Prefer point over point array\n      return;\n    }\n    // store the point(s) as is\n    this._geometry = p;\n  }\n\n  _setState(name, value) {\n    if (name) {\n      this.state[name] = value;\n    }\n  }\n\n  _setProp(name, value) {\n    this._props.set(name, value);\n  }\n\n  // This should be called at the beginning of `getCurrentFrame`\n  _reset() {\n    if (this._props.size) {\n      this._props.clear();\n    }\n    if (this._streams.size) {\n      this._streams.clear();\n    }\n    // clear the cached position\n    this._geometry = null;\n  }\n}\n"],"file":"xviz-object.js"}