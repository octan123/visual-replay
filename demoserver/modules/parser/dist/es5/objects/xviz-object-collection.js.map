{"version":3,"sources":["../../../src/objects/xviz-object-collection.js"],"names":["XVIZObjectCollection","ObjectType","XVIZObject","objects","Map","clear","size","id","timestamp","undefined","toString","has","object","get","_observe","set","forEach","_reset","result","isValid","startTime","endTime","idsToRemove","push"],"mappings":";;;;;;;;;;;;;AAcA;;IAEqBA,oB;AACnB,kCAA4C;AAAA,mFAAJ,EAAI;AAAA,+BAA/BC,UAA+B;AAAA,QAA/BA,UAA+B,gCAAlBC,sBAAkB;;AAAA;AAE1C,SAAKC,OAAL,GAAe,IAAIC,GAAJ,EAAf;AACA,SAAKH,UAAL,GAAkBA,UAAlB;AACD;;;;4BAGO;AACN,WAAKE,OAAL,CAAaE,KAAb;AACD;;;4BAEO;AACN,aAAO,KAAKF,OAAL,CAAaG,IAApB;AACD;;;4BAGOC,E,EAAIC,S,EAAW;AACrB,UAAID,EAAE,KAAKE,SAAP,IAAoBF,EAAE,KAAK,IAA/B,EAAqC;AACnC;AACD;;AAEDA,MAAAA,EAAE,GAAGA,EAAE,CAACG,QAAH,EAAL;;AACA,UAAI,KAAKP,OAAL,CAAaQ,GAAb,CAAiBJ,EAAjB,CAAJ,EAA0B;AACxB,YAAMK,MAAM,GAAG,KAAKT,OAAL,CAAaU,GAAb,CAAiBN,EAAjB,CAAf;;AACAK,QAAAA,MAAM,CAACE,QAAP,CAAgBN,SAAhB;AACD,OAHD,MAGO;AACL,YAAMI,OAAM,GAAG,IAAI,KAAKX,UAAT,CAAoB;AAACM,UAAAA,EAAE,EAAFA,EAAD;AAAKC,UAAAA,SAAS,EAATA;AAAL,SAApB,CAAf;;AACA,aAAKL,OAAL,CAAaY,GAAb,CAAiBR,EAAjB,EAAqBK,OAArB;AACD;AACF;;;wBAEGL,E,EAAI;AACN,UAAIA,EAAE,KAAKE,SAAP,IAAoBF,EAAE,KAAK,IAA/B,EAAqC;AACnC,eAAO,IAAP;AACD;;AAEDA,MAAAA,EAAE,GAAGA,EAAE,CAACG,QAAH,EAAL;AACA,aAAO,KAAKP,OAAL,CAAaU,GAAb,CAAiBN,EAAjB,KAAwB,IAA/B;AACD;;;+BAGU;AACT,WAAKJ,OAAL,CAAaa,OAAb,CAAqB,UAAAJ,MAAM;AAAA,eAAIA,MAAM,CAACK,MAAP,EAAJ;AAAA,OAA3B;AACD;;;6BAGQ;AACP,UAAMC,MAAM,GAAG,EAAf;AACA,WAAKf,OAAL,CAAaa,OAAb,CAAqB,UAACJ,MAAD,EAASL,EAAT,EAAgB;AACnCW,QAAAA,MAAM,CAACX,EAAD,CAAN,GAAaK,MAAb;AACD,OAFD;AAGA,aAAOM,MAAP;AACD;;;2CAGsB;AACrB,UAAMA,MAAM,GAAG,EAAf;AACA,WAAKf,OAAL,CAAaa,OAAb,CAAqB,UAACJ,MAAD,EAASL,EAAT,EAAgB;AACnC,YAAIK,MAAM,CAACO,OAAX,EAAoB;AAClBD,UAAAA,MAAM,CAACX,EAAD,CAAN,GAAaK,MAAb;AACD;AACF,OAJD;AAKA,aAAOM,MAAP;AACD;;;0BAGKE,S,EAAWC,O,EAAS;AAAA,UACjBlB,OADiB,GACN,IADM,CACjBA,OADiB;AAExB,UAAMmB,WAAW,GAAG,EAApB;AAEAnB,MAAAA,OAAO,CAACa,OAAR,CAAgB,UAACJ,MAAD,EAASL,EAAT,EAAgB;AAC9B,YAAIK,MAAM,CAACS,OAAP,GAAiBD,SAAjB,IAA8BR,MAAM,CAACQ,SAAP,GAAmBC,OAArD,EAA8D;AAC5DC,UAAAA,WAAW,CAACC,IAAZ,CAAiBhB,EAAjB;AACD;AACF,OAJD;AAKAe,MAAAA,WAAW,CAACN,OAAZ,CAAoB,UAAAT,EAAE,EAAI;AACxBJ,QAAAA,OAAO,UAAP,CAAeI,EAAf;AACD,OAFD;AAGD","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport XVIZObject from './xviz-object';\n\nexport default class XVIZObjectCollection {\n  constructor({ObjectType = XVIZObject} = {}) {\n    // A map of all XVIZ objects, across time\n    this.objects = new Map();\n    this.ObjectType = ObjectType;\n  }\n\n  // Drop all XVIZ objects\n  clear() {\n    this.objects.clear();\n  }\n\n  count() {\n    return this.objects.size;\n  }\n\n  // Create a new XVIZ object at timestamp if it does not exist.\n  observe(id, timestamp) {\n    if (id === undefined || id === null) {\n      return;\n    }\n    // Map keys use strict equal\n    id = id.toString();\n    if (this.objects.has(id)) {\n      const object = this.objects.get(id);\n      object._observe(timestamp);\n    } else {\n      const object = new this.ObjectType({id, timestamp});\n      this.objects.set(id, object);\n    }\n  }\n\n  get(id) {\n    if (id === undefined || id === null) {\n      return null;\n    }\n    // Map keys use strict equal\n    id = id.toString();\n    return this.objects.get(id) || null;\n  }\n\n  // Clears all XVIZ object props for a fresh new frame.\n  resetAll() {\n    this.objects.forEach(object => object._reset());\n  }\n\n  // Returns all XVIZ objects\n  getAll() {\n    const result = {};\n    this.objects.forEach((object, id) => {\n      result[id] = object;\n    });\n    return result;\n  }\n\n  // Returns all XVIZ objects present in current frame\n  getAllInCurrentFrame() {\n    const result = {};\n    this.objects.forEach((object, id) => {\n      if (object.isValid) {\n        result[id] = object;\n      }\n    });\n    return result;\n  }\n\n  // Removes XVIZ objects that are outside of a time window\n  prune(startTime, endTime) {\n    const {objects} = this;\n    const idsToRemove = [];\n\n    objects.forEach((object, id) => {\n      if (object.endTime < startTime || object.startTime > endTime) {\n        idsToRemove.push(id);\n      }\n    });\n    idsToRemove.forEach(id => {\n      objects.delete(id);\n    });\n  }\n}\n"],"file":"xviz-object-collection.js"}