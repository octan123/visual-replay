{"version":3,"sources":["../../../src/workers/lidar-point-cloud-worker.js"],"names":["config","self","onmessage","e","dataView","DataView","data","decoder","TextDecoder","decodedString","decode","JSON","parse","transfers","map","pointCloud","time","push","ids","buffer","colors","positions","postMessage","close","error","Error"],"mappings":";;;;;;;AAcA;;AACA;;AACA;;eAEe,kBAAAA,MAAM;AAAA,SAAI,UAAAC,IAAI,EAAI;AAC/B,mCAAcD,MAAd;;AAEAC,IAAAA,IAAI,CAACC,SAAL,GAAiB,UAAAC,CAAC,EAAI;AACpB,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,CAAaF,CAAC,CAACG,IAAf,CAAjB;AACA,UAAMC,OAAO,GAAG,IAAIC,yBAAJ,CAAgB,OAAhB,CAAhB;AACA,UAAMC,aAAa,GAAGF,OAAO,CAACG,MAAR,CAAeN,QAAf,CAAtB;;AAEA,UAAI;AACF,YAAIE,IAAI,GAAGK,IAAI,CAACC,KAAL,CAAWH,aAAX,CAAX;AACAH,QAAAA,IAAI,GAAG,sCAAgBA,IAAhB,CAAP;AAEA,YAAMO,SAAS,GAAG,EAAlB;AAEAP,QAAAA,IAAI,GAAGA,IAAI,CAACQ,GAAL,CAAS,gBAAwB;AAAA,cAAtBC,UAAsB,QAAtBA,UAAsB;AAAA,cAAVC,IAAU,QAAVA,IAAU;;AACtC,cAAID,UAAJ,EAAgB;AACdF,YAAAA,SAAS,CAACI,IAAV,CACEF,UAAU,CAACG,GAAX,CAAeC,MADjB,EAEEJ,UAAU,CAACK,MAAX,CAAkBD,MAFpB,EAGEJ,UAAU,CAACM,SAAX,CAAqBF,MAHvB;AAKD;;AACD,iBAAO;AAACJ,YAAAA,UAAU,EAAVA,UAAD;AAAaC,YAAAA,IAAI,EAAJA;AAAb,WAAP;AACD,SATM,CAAP;AAYAf,QAAAA,IAAI,CAACqB,WAAL,CAEEhB,IAFF,EAKEO,SALF;AASAZ,QAAAA,IAAI,CAACsB,KAAL;AACD,OA5BD,CA4BE,OAAOC,KAAP,EAAc;AACd,cAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,KApCD;AAqCD,GAxCoB;AAAA,C","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {setXVIZConfig} from '../config/xviz-config';\nimport {parseXVIZStream} from '../parsers/parse-xviz-stream';\nimport {TextDecoder} from '../utils/text-encoding';\n\nexport default config => self => {\n  setXVIZConfig(config);\n\n  self.onmessage = e => {\n    const dataView = new DataView(e.data);\n    const decoder = new TextDecoder('utf-8');\n    const decodedString = decoder.decode(dataView);\n\n    try {\n      let data = JSON.parse(decodedString);\n      data = parseXVIZStream(data);\n\n      const transfers = [];\n\n      data = data.map(({pointCloud, time}) => {\n        if (pointCloud) {\n          transfers.push(\n            pointCloud.ids.buffer,\n            pointCloud.colors.buffer,\n            pointCloud.positions.buffer\n          );\n        }\n        return {pointCloud, time};\n      });\n\n      // https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\n      self.postMessage(\n        // aMessage\n        data,\n        // transferList, calls out which elements inside the data structure of the\n        // first argument to not copy\n        transfers\n      );\n\n      // Terminate\n      self.close();\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n};\n"],"file":"lidar-point-cloud-worker.js"}