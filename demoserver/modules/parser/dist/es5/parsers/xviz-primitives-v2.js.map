{"version":3,"sources":["../../../src/parsers/xviz-primitives-v2.js"],"names":["aliasId","primitive","base","object_id","id","text","category","PRIMITIVE_CAT","FEATURE","validate","normalize","circle","center","stadium","start","end","polyline","streamName","time","vertices","length","polygon","point","POINTCLOUD","points","image","IMAGE","data","imageData","base64js","toByteArray","imgType","format","imageType","position"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {filterVertices} from './filter-vertices';\nimport {PRIMITIVE_CAT} from './parse-xviz-primitive';\nimport base64js from 'base64-js';\n\nfunction aliasId(primitive) {\n  if (primitive && primitive.base && primitive.base.object_id) {\n    primitive.id = primitive.base.object_id;\n  }\n}\n\n// TODO - tests for all primitive types\nexport default {\n  text: {\n    category: PRIMITIVE_CAT.FEATURE,\n    validate: primitive => true,\n    normalize: primitive => {\n      aliasId(primitive);\n    }\n  },\n  circle: {\n    category: PRIMITIVE_CAT.FEATURE,\n    validate: primitive => primitive.center,\n    normalize: primitive => {\n      aliasId(primitive);\n    }\n  },\n  stadium: {\n    category: PRIMITIVE_CAT.FEATURE,\n    validate: primitive => primitive.start && primitive.end,\n    normalize: primitive => {\n      aliasId(primitive);\n    }\n  },\n  polyline: {\n    category: PRIMITIVE_CAT.FEATURE,\n    validate: (primitive, streamName, time) => primitive.vertices && primitive.vertices.length >= 2,\n    normalize: primitive => {\n      // Filter out identical vertices to make sure we don't get rendering artifacts\n      // in the path layer\n      // TODO - handle this directly in deck.gl PathLayer\n      primitive.vertices = filterVertices(primitive.vertices);\n      aliasId(primitive);\n    }\n  },\n  polygon: {\n    category: PRIMITIVE_CAT.FEATURE,\n    validate: (primitive, streamName, time) => primitive.vertices && primitive.vertices.length >= 3,\n    normalize: primitive => {\n      aliasId(primitive);\n    }\n  },\n  point: {\n    category: PRIMITIVE_CAT.POINTCLOUD,\n    validate: (primitive, streamName, time) => primitive.points && primitive.points.length > 0,\n    normalize: primitive => {\n      // Alias XVIZ 2.0 to normalized vertices field.\n      primitive.vertices = primitive.points;\n      aliasId(primitive);\n    }\n  },\n  image: {\n    category: PRIMITIVE_CAT.IMAGE,\n    validate: (primitive, streamName, time) => primitive.data,\n    normalize: primitive => {\n      let imageData = primitive.data;\n      delete primitive.data;\n      if (typeof imageData === 'string') {\n        imageData = base64js.toByteArray(imageData);\n      }\n      // format is not part of v2 spec\n      const imgType = primitive.format ? `image/${primitive.format}` : null;\n      primitive.imageData = imageData;\n      primitive.imageType = imgType;\n      if (primitive.position) {\n        primitive.vertices = primitive.position;\n      }\n      aliasId(primitive);\n    }\n  }\n};\n"],"file":"xviz-primitives-v2.js"}