{"version":3,"sources":["../../../src/parsers/xviz-primitives-v1.js"],"names":["text","category","PRIMITIVE_CAT","LABEL","validate","primitive","tree_table","COMPONENT","points3d","POINTCLOUD","streamName","time","vertices","length","points2d","FEATURE","normalize","i","point2d","enableZOffSet","line2d","enableZOffset","polygon2d","Array","isArray","push","circle","circle2d","center"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {filterVertices} from './filter-vertices';\nimport {PRIMITIVE_CAT} from './parse-xviz-primitive';\n\n// TODO - tests for all primitive types\nexport default {\n  text: {\n    category: PRIMITIVE_CAT.LABEL,\n    validate: primitive => true\n  },\n  // eslint-disable-next-line camelcase\n  tree_table: {\n    category: PRIMITIVE_CAT.COMPONENT,\n    validate: primitive => true\n  },\n  points3d: {\n    category: PRIMITIVE_CAT.POINTCLOUD,\n    validate: (primitive, streamName, time) => primitive.vertices && primitive.vertices.length > 0\n  },\n  points2d: {\n    category: PRIMITIVE_CAT.FEATURE,\n    validate: (primitive, streamName, time) => primitive.vertices && primitive.vertices.length > 0,\n    normalize: primitive => {\n      for (let i = 0; i < primitive.vertices.length; i++) {\n        primitive.vertices[i][2] = 0;\n      }\n    }\n  },\n  point2d: {\n    category: PRIMITIVE_CAT.FEATURE,\n    enableZOffSet: true,\n    validate: (primitive, streamName, time) =>\n      primitive.vertices && primitive.vertices.length === 1,\n    normalize: primitive => {\n      primitive.vertices = primitive.vertices[0];\n    }\n  },\n  line2d: {\n    category: PRIMITIVE_CAT.FEATURE,\n    enableZOffset: true,\n    validate: (primitive, streamName, time) =>\n      primitive.vertices &&\n      primitive.vertices.length >= 2 &&\n      streamName !== '/route_follower/kickout/object/velocity',\n    normalize: primitive => {\n      // Filter out identical vertices to make sure we don't get rendering artifacts\n      // in the path layer\n      // TODO - handle this directly in deck.gl PathLayer\n      primitive.vertices = filterVertices(primitive.vertices);\n    }\n  },\n  polygon2d: {\n    category: PRIMITIVE_CAT.FEATURE,\n    enableZOffset: true,\n    validate: (primitive, streamName, time) => primitive.vertices && primitive.vertices.length >= 3,\n    normalize: primitive => {\n      // This is a polygon2d primitive which per XVIZ protocol implicitly says\n      // that the provided path is closed. Push a copy of first vert to end of array.\n      // Array comparison turns out to be expensive. Looks like the polygon returned\n      // from XVIS is never closed - worst case we end up with a duplicate end vertex,\n      // which will not break the polygon layer.\n      // TODO - can't handle flat arrays for now\n      if (Array.isArray(primitive.vertices)) {\n        primitive.vertices.push(primitive.vertices[0]);\n      }\n    }\n  },\n  circle: {\n    category: PRIMITIVE_CAT.FEATURE,\n    enableZOffset: true,\n    validate: (primitive, streamName, time) => primitive.vertices && primitive.vertices.length > 0\n  },\n  circle2d: {\n    category: PRIMITIVE_CAT.FEATURE,\n    enableZOffset: true,\n    validate: (primitive, streamName, time) => primitive.center,\n    normalize: primitive => {\n      primitive.vertices = primitive.center;\n    }\n  }\n};\n"],"file":"xviz-primitives-v1.js"}