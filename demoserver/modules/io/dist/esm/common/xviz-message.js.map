{"version":3,"sources":["../../../src/common/xviz-message.js"],"names":["isEnvelope","unpackEnvelope","XVIZ_MESSAGE_TYPE","XVIZ_MESSAGE_NAMESPACE","XVIZMessage","message","_message","_setupTypeData","msg","namespace","version","type","METADATA","data","update_type","updates","STATE_UPDATE"],"mappings":";;AAaA,SAAQA,UAAR,EAAoBC,cAApB,QAAyC,WAAzC;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AACA,SAAQC,sBAAR,QAAqC,aAArC;AAeA,WAAaC,WAAb;AACE,uBAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKC,QAAL,GAAgB,IAAhB;;AAEA,SAAKC,cAAL;AACD;;AANH;AAAA;AAAA,qCAsBmB;AACf,UAAIP,UAAU,CAAC,KAAKK,OAAN,CAAd,EAA8B;AAC5B,YAAMG,GAAG,GAAGP,cAAc,CAAC,KAAKI,OAAN,CAA1B;;AAGA,YAAIG,GAAG,CAACC,SAAJ,KAAkB,MAAtB,EAA8B;AAC5B,eAAKH,QAAL,GAAgBE,GAAhB;AACD;;AACD;AACD;;AAGD,UAAI,KAAKH,OAAL,CAAaK,OAAjB,EAA0B;AACxB,aAAKJ,QAAL,GAAgB;AACdG,UAAAA,SAAS,EAAEN,sBADG;AAEdQ,UAAAA,IAAI,EAAET,iBAAiB,CAACU,QAFV;AAGdC,UAAAA,IAAI,EAAE,KAAKR;AAHG,SAAhB;AAKD,OAND,MAMO,IAAI,KAAKA,OAAL,CAAaS,WAAb,IAA4B,KAAKT,OAAL,CAAaU,OAA7C,EAAsD;AAC3D,aAAKT,QAAL,GAAgB;AACdG,UAAAA,SAAS,EAAEN,sBADG;AAEdQ,UAAAA,IAAI,EAAET,iBAAiB,CAACc,YAFV;AAGdH,UAAAA,IAAI,EAAE,KAAKR;AAHG,SAAhB;AAKD,OANM,MAMA;AACL,aAAKC,QAAL,GAAgB;AACdG,UAAAA,SAAS,EAAE,IADG;AAEdE,UAAAA,IAAI,EAAE,IAFQ;AAGdE,UAAAA,IAAI,EAAE,KAAKR;AAHG,SAAhB;AAKD;AACF;AArDH;AAAA;AAAA,wBAQa;AACT,UAAI,KAAKC,QAAT,EAAmB;AACjB,eAAO,KAAKA,QAAL,CAAcK,IAArB;AACD;;AACD,aAAO,IAAP;AACD;AAbH;AAAA;AAAA,wBAea;AACT,UAAI,KAAKL,QAAT,EAAmB;AACjB,eAAO,KAAKA,QAAL,CAAcO,IAArB;AACD;;AACD,aAAO,IAAP;AACD;AApBH;;AAAA;AAAA","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport {isEnvelope, unpackEnvelope} from './loaders';\nimport {XVIZ_MESSAGE_TYPE} from './xviz-message-type';\nimport {XVIZ_MESSAGE_NAMESPACE} from './constants';\n\n// Represents an actual XVIZ Message\n//\n// Intention is to provide dual data management\n// of the XVIZ data.\n//\n// If data should is passed through untouched, then\n// it can be done.\n//\n// If data needs to be changed, it needs to be\n// instantiated by calling `message()`.\n//\n// Care must be taken when serializing\n// to use the `message()` result\nexport class XVIZMessage {\n  constructor(message) {\n    this.message = message;\n    this._message = null;\n\n    this._setupTypeData();\n  }\n\n  get type() {\n    if (this._message) {\n      return this._message.type;\n    }\n    return null;\n  }\n\n  get data() {\n    if (this._message) {\n      return this._message.data;\n    }\n    return null;\n  }\n\n  _setupTypeData() {\n    if (isEnvelope(this.message)) {\n      const msg = unpackEnvelope(this.message);\n\n      // If the message is not an XVIZ message, ignore\n      if (msg.namespace === 'xviz') {\n        this._message = msg;\n      }\n      return;\n    }\n\n    // XVIZv1 Support: Raw data, detect by inspection\n    if (this.message.version) {\n      this._message = {\n        namespace: XVIZ_MESSAGE_NAMESPACE,\n        type: XVIZ_MESSAGE_TYPE.METADATA,\n        data: this.message\n      };\n    } else if (this.message.update_type && this.message.updates) {\n      this._message = {\n        namespace: XVIZ_MESSAGE_NAMESPACE,\n        type: XVIZ_MESSAGE_TYPE.STATE_UPDATE,\n        data: this.message\n      };\n    } else {\n      this._message = {\n        namespace: null,\n        type: null,\n        data: this.message\n      };\n    }\n  }\n}\n"],"file":"xviz-message.js"}