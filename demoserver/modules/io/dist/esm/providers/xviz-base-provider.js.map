{"version":3,"sources":["../../../src/providers/xviz-base-provider.js"],"names":["XVIZData","MessageIterator","start","end","increment","current","valid","data","XVIZBaseProvider","reader","options","metadata","_valid","timeRange","startTime","endTime","_readMetadata","Number","isFinite","checkMessage","Error","iterator","next","message","_readMessage","startMessages","findMessage","endMessages","undefined","first","last","readMessage","readMetadata"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport {XVIZData} from '../common/xviz-data';\n\n// Generic iterator that stores context for context for an iterator\nclass MessageIterator {\n  constructor(start, end, increment = 1) {\n    this.start = start;\n    this.end = end;\n    this.increment = increment;\n    this.current = start;\n  }\n\n  valid() {\n    return this.current <= this.end;\n  }\n\n  value() {\n    return this.current;\n  }\n\n  next() {\n    const valid = this.valid();\n    if (!valid) {\n      return {valid};\n    }\n\n    const data = this.current;\n    this.current += this.increment;\n\n    return {\n      valid,\n      data\n    };\n  }\n}\n\nexport class XVIZBaseProvider {\n  constructor({reader, options}) {\n    this.reader = reader;\n    this.options = options;\n\n    this.metadata = null;\n    this._valid = false;\n  }\n\n  // Read index & metadata\n  async init() {\n    if (!this.reader) {\n      return;\n    }\n\n    const {startTime, endTime} = this.reader.timeRange();\n    this.metadata = this._readMetadata();\n\n    if (\n      this.metadata &&\n      Number.isFinite(startTime) &&\n      Number.isFinite(endTime) &&\n      this.reader.checkMessage(0) // verify the first message exists\n    ) {\n      this._valid = true;\n    }\n\n    if (this.metadata && (!Number.isFinite(startTime) || !Number.isFinite(endTime))) {\n      // TODO: should provide a command for the cli to regenerate the index files\n      throw new Error('The data source is missing the data index');\n    }\n  }\n\n  valid() {\n    return this._valid;\n  }\n\n  xvizMetadata() {\n    return this.metadata;\n  }\n\n  async xvizMessage(iterator) {\n    const {valid, data} = iterator.next();\n    if (!valid) {\n      return null;\n    }\n\n    const message = this._readMessage(data);\n    return message;\n  }\n\n  // The Provider provides an iterator since\n  // different sources may \"index\" their data independently\n  // however all iterators are based on a startTime/endTime\n  //\n  // If startTime and endTime cover the actual range, then\n  // they will be clamped to the actual range.\n  // Otherwise return undefined.\n  getMessageIterator({startTime, endTime} = {}, options = {}) {\n    const {startTime: start, endTime: end} = this.reader.timeRange();\n\n    if (!Number.isFinite(startTime)) {\n      startTime = start;\n    }\n\n    if (!Number.isFinite(endTime)) {\n      endTime = end;\n    }\n\n    if (startTime > endTime) {\n      return null;\n    }\n\n    const startMessages = this.reader.findMessage(startTime);\n    const endMessages = this.reader.findMessage(endTime);\n\n    if (startMessages !== undefined && endMessages !== undefined) {\n      return new MessageIterator(startMessages.first, endMessages.last);\n    }\n\n    return null;\n  }\n\n  // return XVIZData for message or undefined\n  _readMessage(message) {\n    const data = this.reader.readMessage(message);\n    if (data) {\n      return new XVIZData(data);\n    }\n\n    return undefined;\n  }\n\n  // return Metadata or undefined\n  _readMetadata() {\n    const data = this.reader.readMetadata();\n    if (data) {\n      return new XVIZData(data);\n    }\n\n    return undefined;\n  }\n}\n"],"file":"xviz-base-provider.js"}