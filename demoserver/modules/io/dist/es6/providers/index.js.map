{"version":3,"sources":["../../../src/providers/index.js"],"names":["XVIZJSONProvider","XVIZBinaryProvider","XVIZProtobufProvider","createXVIZProvider","ProviderClass","args","provider","init","valid","XVIZProviderFactoryClass","constructor","providerClasses","className","addProviderClass","push","open","providerEntry","options","loader","XVIZProviderFactory"],"mappings":";;;;;;AAaA,SAAQA,gBAAR,QAA+B,sBAA/B;AACA,SAAQC,kBAAR,QAAiC,wBAAjC;AACA,SAAQC,oBAAR,QAAmC,0BAAnC;;AAEA,eAAeC,kBAAf,CAAkCC,aAAlC,EAAiDC,IAAjD,EAAuD;AACrD,MAAIC,QAAQ,GAAG,IAAf;AACAA,EAAAA,QAAQ,GAAG,IAAIF,aAAJ,CAAkBC,IAAlB,CAAX;AACA,QAAMC,QAAQ,CAACC,IAAT,EAAN;;AAEA,MAAID,QAAQ,CAACE,KAAT,EAAJ,EAAsB;AACpB,WAAOF,QAAP;AACD;;AAED,SAAO,IAAP;AACD;;AAED,OAAO,MAAMG,wBAAN,CAA+B;AACpCC,EAAAA,WAAW,GAAG;AACZ,SAAKC,eAAL,GAAuB,CACrB;AAACC,MAAAA,SAAS,EAAEZ;AAAZ,KADqB,EAErB;AAACY,MAAAA,SAAS,EAAEX;AAAZ,KAFqB,EAGrB;AAACW,MAAAA,SAAS,EAAEV;AAAZ,KAHqB,CAAvB;AAKD;;AAEDW,EAAAA,gBAAgB,CAACD,SAAD,EAAYP,IAAZ,EAAkB;AAChC,SAAKM,eAAL,CAAqBG,IAArB,CAA0B;AAACF,MAAAA,SAAD;AAAYP,MAAAA;AAAZ,KAA1B;AACD;;AAUD,QAAMU,IAAN,CAAWV,IAAX,EAAiB;AACf,SAAK,MAAMW,aAAX,IAA4B,KAAKL,eAAjC,EAAkD;AAChD,YAAMM,OAAO,mCAAOZ,IAAI,CAACY,OAAZ,GAAwBD,aAAa,CAACX,IAAtC,CAAb;;AACA,YAAMa,MAAM,GAAG,MAAMf,kBAAkB,CAACa,aAAa,CAACJ,SAAf,kCAA8BP,IAA9B;AAAoCY,QAAAA;AAApC,SAAvC;;AAEA,UAAIC,MAAJ,EAAY;AACV,eAAOA,MAAP;AACD;AACF;;AAED,WAAO,IAAP;AACD;;AAhCmC;AAmCtC,OAAO,MAAMC,mBAAmB,GAAG,IAAIV,wBAAJ,EAA5B","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport {XVIZJSONProvider} from './xviz-json-provider';\nimport {XVIZBinaryProvider} from './xviz-binary-provider';\nimport {XVIZProtobufProvider} from './xviz-protobuf-provider';\n\nasync function createXVIZProvider(ProviderClass, args) {\n  let provider = null;\n  provider = new ProviderClass(args);\n  await provider.init();\n\n  if (provider.valid()) {\n    return provider;\n  }\n\n  return null;\n}\n\nexport class XVIZProviderFactoryClass {\n  constructor() {\n    this.providerClasses = [\n      {className: XVIZJSONProvider},\n      {className: XVIZBinaryProvider},\n      {className: XVIZProtobufProvider}\n    ];\n  }\n\n  addProviderClass(className, args) {\n    this.providerClasses.push({className, args});\n  }\n\n  /*\n   * Attempt to find a valid provider for the given source\n   * returning null if none can be found.\n   *\n   * @param args.root\n   * @param args.source\n   * @param args.options\n   */\n  async open(args) {\n    for (const providerEntry of this.providerClasses) {\n      const options = {...args.options, ...providerEntry.args};\n      const loader = await createXVIZProvider(providerEntry.className, {...args, options});\n\n      if (loader) {\n        return loader;\n      }\n    }\n\n    return null;\n  }\n}\n\nexport const XVIZProviderFactory = new XVIZProviderFactoryClass();\n"],"file":"index.js"}