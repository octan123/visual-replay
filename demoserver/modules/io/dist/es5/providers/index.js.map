{"version":3,"sources":["../../../src/providers/index.js"],"names":["createXVIZProvider","ProviderClass","args","provider","init","valid","XVIZProviderFactoryClass","providerClasses","className","XVIZJSONProvider","XVIZBinaryProvider","XVIZProtobufProvider","push","providerEntry","options","loader","XVIZProviderFactory"],"mappings":";;;;;;;;;;;;;;;;;;;AAaA;;AACA;;AACA;;;;;;;;;;;;SAEeA,kB;;;;;wFAAf,kBAAkCC,aAAlC,EAAiDC,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,YAAAA,QADN,GACiB,IADjB;AAEEA,YAAAA,QAAQ,GAAG,IAAIF,aAAJ,CAAkBC,IAAlB,CAAX;AAFF;AAAA,mBAGQC,QAAQ,CAACC,IAAT,EAHR;;AAAA;AAAA,iBAKMD,QAAQ,CAACE,KAAT,EALN;AAAA;AAAA;AAAA;;AAAA,8CAMWF,QANX;;AAAA;AAAA,8CASS,IATT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;IAYaG,wB;AACX,sCAAc;AAAA;AACZ,SAAKC,eAAL,GAAuB,CACrB;AAACC,MAAAA,SAAS,EAAEC;AAAZ,KADqB,EAErB;AAACD,MAAAA,SAAS,EAAEE;AAAZ,KAFqB,EAGrB;AAACF,MAAAA,SAAS,EAAEG;AAAZ,KAHqB,CAAvB;AAKD;;;;qCAEgBH,S,EAAWN,I,EAAM;AAChC,WAAKK,eAAL,CAAqBK,IAArB,CAA0B;AAACJ,QAAAA,SAAS,EAATA,SAAD;AAAYN,QAAAA,IAAI,EAAJA;AAAZ,OAA1B;AACD;;;;mGAUUA,I;;;;;;;uDACmB,KAAKK,e;;;;;;;;;;;AAAtBM,gBAAAA,a;AACHC,gBAAAA,O,mCAAcZ,IAAI,CAACY,O,GAAYD,aAAa,CAACX,I;;uBAC9BF,kBAAkB,CAACa,aAAa,CAACL,SAAf,kCAA8BN,IAA9B;AAAoCY,kBAAAA,OAAO,EAAPA;AAApC,mB;;;AAAjCC,gBAAAA,M;;qBAEFA,M;;;;;iDACKA,M;;;;;;;;;;;;;;;;;;;;;;;;iDAIJ,I;;;;;;;;;;;;;;;;;;;;;AAIJ,IAAMC,mBAAmB,GAAG,IAAIV,wBAAJ,EAA5B","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport {XVIZJSONProvider} from './xviz-json-provider';\nimport {XVIZBinaryProvider} from './xviz-binary-provider';\nimport {XVIZProtobufProvider} from './xviz-protobuf-provider';\n\nasync function createXVIZProvider(ProviderClass, args) {\n  let provider = null;\n  provider = new ProviderClass(args);\n  await provider.init();\n\n  if (provider.valid()) {\n    return provider;\n  }\n\n  return null;\n}\n\nexport class XVIZProviderFactoryClass {\n  constructor() {\n    this.providerClasses = [\n      {className: XVIZJSONProvider},\n      {className: XVIZBinaryProvider},\n      {className: XVIZProtobufProvider}\n    ];\n  }\n\n  addProviderClass(className, args) {\n    this.providerClasses.push({className, args});\n  }\n\n  /*\n   * Attempt to find a valid provider for the given source\n   * returning null if none can be found.\n   *\n   * @param args.root\n   * @param args.source\n   * @param args.options\n   */\n  async open(args) {\n    for (const providerEntry of this.providerClasses) {\n      const options = {...args.options, ...providerEntry.args};\n      const loader = await createXVIZProvider(providerEntry.className, {...args, options});\n\n      if (loader) {\n        return loader;\n      }\n    }\n\n    return null;\n  }\n}\n\nexport const XVIZProviderFactory = new XVIZProviderFactoryClass();\n"],"file":"index.js"}