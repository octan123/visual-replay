{"version":3,"sources":["../../../src/middlewares/xviz-provider-request-handler.js"],"names":["Stats","XVIZEnvelope","DEFAULT_OPTIONS","delay","XVIZProviderRequestHandler","context","provider","middleware","options","metrics","id","Object","assign","_setupContext","metadata","xvizMetadata","message","data","log_info","start_time","end_time","set","msg","console","log","error","onError","Error","message_format","profile","session_type","onMetadata","totalTimer","get","loadTimer","sendTimer","_clearActiveTransforms","_startTransform","logger","transformState","interval","iterator","timeStart","clearTimeout","valid","transform","xvizMessage","timeEnd","onStateUpdate","logMsgSent","value","setTimeout","_sendStateUpdate","onTransformLogDone","TransformLogDone","logDone","endTransform","reset","transforms","tKey","tformState","request","_setupTransformMetrics","startTransform","getMessageIterator","startTime","start_timestamp","endTime","end_timestamp","_sendAllStateUpdates","index","verbose","name","lastTiming","toFixed","load","send","total","info","getAverageTime","time","getHz","count"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* global setTimeout, clearTimeout */\n/* eslint-disable camelcase, no-unused-expressions */\nimport {Stats} from 'probe.gl';\nimport {XVIZEnvelope} from '@xviz/io';\n\nconst DEFAULT_OPTIONS = {\n  delay: 0 // time in milliseconds\n};\n\n// Server middleware that handles the logic of responding\n// to a request with data from a provider, processing\n// the data through the supplied middleware\nexport class XVIZProviderRequestHandler {\n  constructor(context, provider, middleware, options = {}) {\n    this.context = context;\n    this.provider = provider;\n    this.middleware = middleware;\n\n    this.metrics = new Stats({id: 'xviz-provider-request-handler'});\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n\n    this._setupContext();\n  }\n\n  _setupContext() {\n    // TODO: make a context specific 'configuration' methods\n    // this.context.set('providerSettings', this.provider.settings());\n\n    const metadata = this.provider.xvizMetadata().message();\n    if (metadata && metadata.data && metadata.data.log_info) {\n      const {start_time, end_time} = metadata.data.log_info;\n      if (start_time) {\n        // TODO: make a context specific source methods\n        this.context.set('start_time', start_time);\n      }\n\n      if (end_time) {\n        this.context.set('end_time', start_time);\n      }\n    }\n  }\n\n  onStart(msg) {\n    console.log('onStart');\n    // TODO; validation\n    const error = null;\n    if (error) {\n      this.middleware.onError(XVIZEnvelope.Error({message: error}));\n    } else {\n      // fill in profile, format, session_type\n      // make context specific configuration fields\n      const message = msg.message();\n      if (message.data.message_format) {\n        this.context.set('message_format', message.data.message_format);\n      } else {\n        this.context.set('message_format', 'BINARY');\n      }\n\n      if (message.data.profile) {\n        this.context.set('profile', message.data.profile);\n      } else {\n        this.context.set('profile', 'default');\n      }\n\n      if (message.data.session_type) {\n        this.context.set('session_type', message.data.session_type);\n      } else {\n        this.context.set('session_type', 'LOG');\n      }\n    }\n\n    // send metadata\n    const metadata = this.provider.xvizMetadata();\n    this.middleware.onMetadata(metadata);\n  }\n\n  _setupTransformMetrics() {\n    return {\n      totalTimer: this.metrics.get(`total`),\n      loadTimer: this.metrics.get(`load`),\n      sendTimer: this.metrics.get(`send`)\n    };\n  }\n\n  onTransformLog(msg) {\n    // TODO: validation\n    const error = null;\n    if (error) {\n      this.middleware.onError(XVIZEnvelope.Error({message: error}));\n    } else {\n      this._clearActiveTransforms();\n      this._startTransform(msg);\n    }\n  }\n\n  onTransformPointInTime(msg) {\n    this.middleware.onError(\n      XVIZEnvelope.Error({message: 'Error: transform_point_in_time is not supported.'})\n    );\n  }\n\n  onReconfigure(msg) {\n    this.middleware.onError(XVIZEnvelope.Error({message: 'Error: reconfigure is not supported.'}));\n  }\n\n  log(...msg) {\n    const {logger} = this.options;\n    if (logger && logger.log) {\n      logger.log(...msg);\n    }\n  }\n\n  /* eslint-disable complexity */\n  async _sendStateUpdate(id, transformState) {\n    const {delay, interval, iterator} = transformState;\n    const {loadTimer, sendTimer, totalTimer} = transformState;\n\n    if (!interval) {\n      // The interval is only falsy if it is the very first call\n      totalTimer && totalTimer.timeStart();\n    }\n\n    if (interval) {\n      clearTimeout(interval);\n      transformState.interval = null;\n    }\n\n    // End when finished iteration or transform has been removed.\n    if (iterator.valid() && this.context.transform(id)) {\n      loadTimer && loadTimer.timeStart();\n      const data = await this.provider.xvizMessage(iterator);\n      loadTimer && loadTimer.timeEnd();\n\n      if (data) {\n        sendTimer && sendTimer.timeStart();\n        this.middleware.onStateUpdate(data);\n        sendTimer && sendTimer.timeEnd();\n\n        this.logMsgSent(id, iterator.value(), loadTimer, sendTimer);\n      }\n\n      transformState.interval = setTimeout(() => this._sendStateUpdate(id, transformState), delay);\n    } else {\n      this.middleware.onTransformLogDone(XVIZEnvelope.TransformLogDone({id}));\n      totalTimer && totalTimer.timeEnd();\n      this.logDone(id, loadTimer, sendTimer, totalTimer);\n      this.context.endTransform(id);\n      this.metrics.reset();\n    }\n  }\n  /* eslint-enable complexity */\n\n  _clearActiveTransforms() {\n    const transforms = this.context.transforms();\n    // Remove all current inflight transforms from list\n    for (const tKey of transforms) {\n      this.context.endTransform(tKey);\n    }\n  }\n\n  _startTransform(msg) {\n    //  store id, start_timestamp, end_timestamp, desired_streams\n    const message = msg.message();\n    const id = message.data.id;\n\n    // setup new transform request\n    const tformState = {\n      request: message.data,\n      iterator: null,\n      interval: null,\n      delay: this.options.delay,\n      ...this._setupTransformMetrics()\n    };\n    this.context.startTransform(id, tformState);\n\n    tformState.iterator = this.provider.getMessageIterator({\n      startTime: message.data.start_timestamp,\n      endTime: message.data.end_timestamp\n    });\n\n    // send state_updates || error\n    if (tformState.delay < 1) {\n      this._sendAllStateUpdates(id, tformState);\n    } else {\n      this._sendStateUpdate(id, tformState);\n    }\n  }\n\n  async _sendAllStateUpdates(id, transformState) {\n    const {iterator} = transformState;\n    const {loadTimer, sendTimer, totalTimer} = transformState;\n\n    totalTimer && totalTimer.timeStart();\n    // End when finished iteration or transform has been removed.\n    while (iterator.valid() && this.context.transform(id)) {\n      loadTimer && loadTimer.timeStart();\n      const data = await this.provider.xvizMessage(iterator);\n      loadTimer && loadTimer.timeEnd();\n\n      if (data) {\n        sendTimer && sendTimer.timeStart();\n        this.middleware.onStateUpdate(data);\n        sendTimer && sendTimer.timeEnd();\n\n        this.logMsgSent(id, iterator.value(), loadTimer, sendTimer);\n      }\n    }\n\n    this.middleware.onTransformLogDone(XVIZEnvelope.TransformLogDone({id}));\n    totalTimer && totalTimer.timeEnd();\n    this.logDone(id, loadTimer, sendTimer, totalTimer);\n    this.context.endTransform(id);\n    this.metrics.reset();\n  }\n\n  logMsgSent(id, index, loadTimer, sendTimer) {\n    const {logger} = this.options;\n    if (logger && logger.verbose) {\n      let msg = `id: ${id} [< STATE_UPDATE] message: ${index}`;\n      if (loadTimer) {\n        msg += ` ${loadTimer.name}:${loadTimer.lastTiming.toFixed(3)}ms`;\n      }\n      if (sendTimer) {\n        msg += ` ${sendTimer.name}:${sendTimer.lastTiming.toFixed(3)}ms`;\n      }\n\n      logger.verbose(msg);\n    }\n  }\n\n  logDone(id, load, send, total) {\n    const {logger} = this.options;\n    if (logger && logger.info) {\n      const msg = `id: ${id} [< DONE]`;\n      if (load) {\n        logger.info(\n          `${msg} ${load.name} Avg:${load.getAverageTime().toFixed(3)}ms Total:${load.time.toFixed(\n            3\n          )}ms Hz:${load.getHz().toFixed(3)}/sec Count:${load.count}`\n        );\n      }\n      if (send) {\n        logger.info(\n          `${msg} ${send.name} Avg:${send.getAverageTime().toFixed(3)}ms Total:${send.time.toFixed(\n            3\n          )}ms Hz:${send.getHz().toFixed(3)}/sec Count:${send.count}`\n        );\n      }\n      if (total) {\n        logger.info(`${msg} ${total.name} ${total.lastTiming.toFixed(3)}ms`);\n      }\n    }\n  }\n}\n"],"file":"xviz-provider-request-handler.js"}