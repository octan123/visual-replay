{"version":3,"sources":["../../../src/scenarios/scenario-straight.js"],"names":["DEG_1_AS_RAD","Math","PI","straight_metadata","type","data","version","StraightScenario","options","timestamp","Date","now","lineGap","duration","live","speed","metadata","JSON","parse","stringify","log_start_time","log_info","log_end_time","timeOffset","_getMessage","x","_getPositionX","update_type","updates","poses","_drawPose","primitives","_drawLines","orientation","position","start","end","increment","range","i","push","cos","sin","lineStart","lineEnd","lineSpacing","_range","ceil","floor","lineSpacingXVIZ","map","lineX","base","style","stroke_width","stroke_color","_lineColor","vertices","polylines","module","exports","straight"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/* Generated XVIZ for a scenario that is a\n * straight path with relative horizontal lines\n * for movement indication\n * - no start end time in metadata\n * - no streams in metadata\n *   - this means primitives have the coordinate IDENTITY\n */\n/* eslint-disable camelcase */\nconst DEG_1_AS_RAD = Math.PI / 180;\n\nconst straight_metadata = {\n  type: 'xviz/metadata',\n  data: {\n    version: '2.0.0'\n  }\n};\n\nclass StraightScenario {\n  constructor(options = {}) {\n    // timestamp needs to be seconds, not milliseconds\n    this.timestamp = Date.now() / 1000;\n\n    this.lineGap = 5;\n    this.duration = options.duration || 30;\n    this.live = options.live;\n    this.speed = options.speed || 10; // meters per second\n  }\n\n  getMetadata() {\n    const metadata = JSON.parse(JSON.stringify(straight_metadata));\n\n    if (!this.live) {\n      const log_start_time = this.timestamp;\n      metadata.data.log_info = {\n        log_start_time,\n        log_end_time: log_start_time + this.duration\n      };\n    }\n\n    return metadata;\n  }\n\n  getMessage(timeOffset) {\n    return this._getMessage(timeOffset);\n  }\n\n  _getMessage(timeOffset) {\n    const timestamp = this.timestamp + timeOffset;\n\n    const x = this._getPositionX(timestamp);\n    return {\n      type: 'xviz/state_update',\n      data: {\n        update_type: 'snapshot',\n        updates: [\n          {\n            timestamp,\n            poses: this._drawPose(timestamp, x),\n            primitives: this._drawLines(x)\n          }\n        ]\n      }\n    };\n  }\n\n  _drawPose(timestamp, x) {\n    return {\n      '/vehicle_pose': {\n        timestamp,\n        orientation: [0, 0, 0],\n        position: [x, 0, 0]\n      }\n    };\n  }\n\n  _range(start, end, increment = 1) {\n    const range = [];\n    for (let i = start; i <= end; i += increment) {\n      range.push(i * this.lineGap);\n    }\n\n    return range;\n  }\n\n  _lineColor(x) {\n    return [\n      // Generate cyclical colors\n      120 + Math.cos(x * 2 * DEG_1_AS_RAD) * 90,\n      200 + Math.cos(x * DEG_1_AS_RAD) * 30,\n      170 + Math.sin(x * 3 * DEG_1_AS_RAD) * 60\n    ];\n  }\n\n  _getPositionX(timestamp) {\n    return this.speed * (timestamp - this.timestamp);\n  }\n\n  _drawLines(x) {\n    // Car position matches the messageNumber\n    // place the farthest 20\n    const lineStart = (x - 15) / this.lineGap;\n    const lineEnd = (x + 20) / this.lineGap;\n\n    const lineSpacing = this._range(Math.ceil(lineStart), Math.floor(lineEnd));\n    const lineSpacingXVIZ = lineSpacing.map(lineX => {\n      return {\n        base: {\n          style: {\n            stroke_width: 0.2,\n            stroke_color: this._lineColor(lineX)\n          }\n        },\n        vertices: [lineX, -40, 0, lineX, 40, 0]\n      };\n    });\n\n    return {\n      ['/ground_lines']: {\n        polylines: lineSpacingXVIZ\n      }\n    };\n  }\n}\n\nmodule.exports = {\n  straight: options => new StraightScenario(options)\n};\n"],"file":"scenario-straight.js"}