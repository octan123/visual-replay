{"version":3,"sources":["../../../src/scenarios/scenario-orbit.js"],"names":["DEG_1_AS_RAD","Math","PI","orbit_metadata","type","data","version","OrbitScenario","options","timestamp","radius","duration","live","speed","first","metadata","JSON","parse","stringify","log_start_time","log_info","log_end_time","timeOffset","_getFirstMessage","_getMessage","update_type","updates","poses","_drawPoses","links","_drawLinks","primitives","_drawOrbs","_drawDynamicPoses","_drawDynamicLinks","parent","child","makeLink","p","c","target_pose","cycle","orientation","position","degreesPerSecond","currentDegrees","angle","makePose","name","distance","zAngle","color","circles","center","base","style","fill_color","_drawOrb","module","exports","orbit"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/* Generated XVIZ for a scenario that is a\n * circular path on a grid\n * - no start end time in metadata\n * - stream metadata for coordinate & styling\n */\n/* eslint-disable camelcase */\nconst DEG_1_AS_RAD = Math.PI / 180;\n\nconst orbit_metadata = {\n  type: 'xviz/metadata',\n  data: {\n    version: '2.0.0'\n  }\n};\n\nclass OrbitScenario {\n  constructor(options = {}) {\n    // timestamp needs to be seconds, not milliseconds\n    this.timestamp = 0;\n\n    this.radius = options.radius || 30;\n    this.duration = options.duration || 10;\n    this.live = options.live;\n    this.speed = options.speed || 10; // meters per second\n\n    this.first = true;\n  }\n\n  getMetadata() {\n    const metadata = JSON.parse(JSON.stringify(orbit_metadata));\n\n    if (!this.live) {\n      const log_start_time = this.timestamp;\n      metadata.data.log_info = {\n        log_start_time,\n        log_end_time: log_start_time + this.duration\n      };\n    }\n\n    return metadata;\n  }\n\n  getMessage(timeOffset) {\n    if (this.first) {\n      this.first = false;\n      return this._getFirstMessage(timeOffset);\n    }\n    return this._getMessage(timeOffset);\n  }\n\n  _getFirstMessage(timeOffset) {\n    const timestamp = this.timestamp + timeOffset;\n\n    return {\n      type: 'xviz/state_update',\n      data: {\n        update_type: 'PERSISTENT',\n        updates: [\n          {\n            timestamp,\n            poses: this._drawPoses(timestamp),\n            links: this._drawLinks(timestamp),\n            primitives: this._drawOrbs(timestamp)\n          }\n        ]\n      }\n    };\n  }\n\n  _getMessage(timeOffset) {\n    const timestamp = this.timestamp + timeOffset;\n\n    return {\n      type: 'xviz/state_update',\n      data: {\n        update_type: 'INCREMENTAL',\n        updates: [\n          {\n            timestamp,\n            poses: this._drawDynamicPoses(timestamp),\n            links: this._drawDynamicLinks(timestamp)\n          }\n        ]\n      }\n    };\n  }\n\n  _drawLinks(parent, child) {\n    const makeLink = (p, c) => {\n      return {\n        [c]: {\n          target_pose: p\n        }\n      };\n    };\n\n    return {\n      ...makeLink('/system', '/sun_pose'),\n      ...makeLink('/system', '/earth_orbit'),\n      ...makeLink('/system', '/mars_orbit'),\n      ...makeLink('/sun_pose', '/sun'),\n      ...makeLink('/earth_orbit', '/earth_pose'),\n      ...makeLink('/earth_pose', '/earth'),\n      ...makeLink('/moon_orbit', '/moon_pose'),\n      ...makeLink('/moon_pose', '/moon'),\n      ...makeLink('/mars_orbit', '/mars_pose'),\n      ...makeLink('/mars_pose', '/mars')\n    };\n  }\n\n  _drawDynamicLinks(timestamp) {\n    const cycle = timestamp % 10;\n    let target_pose = '/earth_pose';\n\n    if (cycle > 5) {\n      target_pose = '/mars_pose';\n    }\n\n    return {\n      ['/moon_orbit']: {\n        target_pose\n      }\n    };\n  }\n\n  _drawPoses(timestamp) {\n    return {\n      '/vehicle_pose': {\n        orientation: [0, 0, 0],\n        position: [0, 0, 0]\n      },\n      '/system': {\n        orientation: [0, 0, 0],\n        position: [0, 0, 0]\n      }\n    };\n  }\n\n  _drawDynamicPoses(timestamp) {\n    // const circumference = Math.PI * this.radius * 2;\n    // const degreesPerSecond = 360 / (circumference / this.speed);\n    const degreesPerSecond = 45;\n    const currentDegrees = timestamp * degreesPerSecond;\n    const angle = currentDegrees * DEG_1_AS_RAD;\n\n    const makePose = (name, distance, zAngle) => {\n      return {\n        [name]: {\n          orientation: [0, 0, zAngle],\n          position: [distance, 0, 0]\n        }\n      };\n    };\n\n    return {\n      ...makePose('/earth_orbit', 0, angle),\n      ...makePose('/moon_orbit', 0, angle),\n      ...makePose('/mars_orbit', 0, -angle),\n      ...makePose('/sun_pose', 0, angle),\n      ...makePose('/earth_pose', 25, angle),\n      ...makePose('/moon_pose', 10, angle),\n      ...makePose('/mars_pose', 50, angle)\n    };\n  }\n\n  _drawOrb(name, radius, color) {\n    // Have grid extend beyond car path\n    return {\n      [name]: {\n        circles: [\n          {\n            center: [0.0, 0.0, 0.0],\n            radius,\n            base: {\n              style: {\n                fill_color: color\n              }\n            }\n          }\n        ]\n      }\n    };\n  }\n\n  _drawOrbs(name, radius, color) {\n    // Have grid extend beyond car path\n    return {\n      ...this._drawOrb('/sun', 9, [255, 180, 40]),\n      ...this._drawOrb('/earth', 5, [20, 50, 190]),\n      ...this._drawOrb('/moon', 1, [200, 200, 200]),\n      ...this._drawOrb('/mars', 4, [255, 0, 0])\n    };\n  }\n}\n\nmodule.exports = {\n  orbit: options => new OrbitScenario(options)\n};\n"],"file":"scenario-orbit.js"}