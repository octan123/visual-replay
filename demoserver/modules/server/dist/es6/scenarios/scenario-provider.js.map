{"version":3,"sources":["../../../src/scenarios/scenario-provider.js"],"names":["XVIZData","ScenarioReader","ScenarioCircle","ScenarioStraight","ScenarioOrbit","Scenarios","normalizeOptions","options","duration","parseFloat","hz","parseInt","live","Boolean","speed","radius","loadScenario","name","opts","Object","assign","scenario","data","metadata","JSON","stringify","getMetadata","messages","timing","messageLimit","messageLength","i","timeOffset","message","getMessage","push","updates","timestamp","MessageIterator","constructor","start","end","increment","current","valid","value","next","ScenarioProvider","root","reader","prefix","_valid","init","path","split","basename","length","startsWith","substring","startTime","endTime","timeRange","_readMetadata","Number","isFinite","Error","xvizMetadata","xvizMessage","iterator","_readMessage","getMessageIterator","startMessages","findMessage","endMessages","undefined","first","last","readMessage","readMetadata"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport {XVIZData} from '@xviz/io';\nimport {ScenarioReader} from './scenario-reader';\n\nimport ScenarioCircle from './scenario-circle';\nimport ScenarioStraight from './scenario-straight';\nimport ScenarioOrbit from './scenario-orbit';\n\nconst Scenarios = {\n  ...ScenarioCircle,\n  ...ScenarioStraight,\n  ...ScenarioOrbit\n};\n\n// Normalize all the possible query parameters\n// for all the scenarios\nfunction normalizeOptions(options) {\n  if (typeof options.duration === 'string') {\n    options.duration = parseFloat(options.duration, 10);\n  }\n\n  if (typeof options.hz === 'string') {\n    options.hz = parseInt(options.hz, 10);\n  }\n\n  if (typeof options.live === 'string') {\n    options.live = Boolean(options.live);\n  }\n\n  if (typeof options.speed === 'string') {\n    options.speed = parseFloat(options.speed);\n  }\n\n  if (typeof options.radius === 'string') {\n    options.radius = parseFloat(options.radius);\n  }\n\n  return options;\n}\n\nfunction loadScenario(name, options = {}) {\n  const opts = Object.assign({duration: 30, hz: 10, live: false}, normalizeOptions(options));\n\n  if (!Scenarios[name]) {\n    return null;\n  }\n\n  const scenario = Scenarios[name](options);\n\n  const data = {\n    // TODO: w/o stringify, the the object is not sent properly\n    // means metadata as an object is broken in server\n    metadata: JSON.stringify(scenario.getMetadata()),\n    messages: [],\n    timing: []\n  };\n\n  const messageLimit = opts.duration * opts.hz;\n  const messageLength = 1.0 / opts.hz;\n\n  for (let i = 0; i < messageLimit; i++) {\n    const timeOffset = messageLength * i;\n    const message = scenario.getMessage(timeOffset);\n    data.timing.push(message.data.updates[0].timestamp);\n    // TODO: this also seems strange? why stringify\n    // I think the XVIZformatWriter should take care of this\n    data.messages.push(JSON.stringify(message));\n  }\n\n  return data;\n}\n\n// Generic iterator that stores context for context for an iterator\nclass MessageIterator {\n  constructor(start, end, increment = 1) {\n    this.start = start;\n    this.end = end;\n    this.increment = increment;\n    this.current = start;\n  }\n\n  valid() {\n    return this.current <= this.end;\n  }\n\n  value() {\n    return this.current;\n  }\n\n  next() {\n    const valid = this.valid();\n    if (!valid) {\n      return {valid};\n    }\n\n    const data = this.current;\n    this.current += this.increment;\n\n    return {\n      valid,\n      data\n    };\n  }\n}\n\nexport class ScenarioProvider {\n  constructor({root, options}) {\n    this.root = root;\n    this.options = options;\n    this.scenario = null;\n    this.data = null;\n    this.reader = null;\n\n    // Assume a path format of \"/scenario-<scenario-name>\"\n    this.prefix = 'scenario-';\n\n    this.metadata = null;\n    this._valid = false;\n  }\n\n  // Read index & metadata\n  async init() {\n    if (!this.root) {\n      return;\n    }\n\n    const path = this.root.split('/');\n    const basename = path[path.length - 1];\n    if (!basename.startsWith(this.prefix)) {\n      return;\n    }\n\n    this.scenario = basename.substring(this.prefix.length);\n    this.data = loadScenario(this.scenario, this.options);\n    if (!this.data) {\n      return;\n    }\n    this.reader = new ScenarioReader(this.data);\n\n    const {startTime, endTime} = this.reader.timeRange();\n    this.metadata = this._readMetadata();\n\n    if (this.metadata && Number.isFinite(startTime) && Number.isFinite(endTime)) {\n      this._valid = true;\n    }\n\n    // TODO: this would not work if \"live\" mode\n    if (this.metadata && (!Number.isFinite(startTime) || !Number.isFinite(endTime))) {\n      // TODO: should provide a command for the cli to regenerate the index files\n      throw new Error('The data source is missing the data index');\n    }\n  }\n\n  valid() {\n    return this._valid;\n  }\n\n  xvizMetadata() {\n    return this.metadata;\n  }\n\n  async xvizMessage(iterator) {\n    const {valid, data} = iterator.next();\n    if (!valid) {\n      return null;\n    }\n\n    const message = this._readMessage(data);\n    return message;\n  }\n\n  // The Provider provides an iterator since\n  // different sources may \"index\" their data independently\n  // however all iterators are based on a startTime/endTime\n  //\n  // If startTime and endTime cover the actual range, then\n  // they will be clamped to the actual range.\n  // Otherwise return undefined.\n  getMessageIterator({startTime, endTime} = {}, options = {}) {\n    const {startTime: start, endTime: end} = this.reader.timeRange();\n\n    if (!Number.isFinite(startTime)) {\n      startTime = start;\n    }\n\n    if (!Number.isFinite(endTime)) {\n      endTime = end;\n    }\n\n    if (startTime > endTime) {\n      return null;\n    }\n\n    const startMessages = this.reader.findMessage(startTime);\n    const endMessages = this.reader.findMessage(endTime);\n\n    if (startMessages !== undefined && endMessages !== undefined) {\n      return new MessageIterator(startMessages.first, endMessages.last);\n    }\n\n    return null;\n  }\n\n  // return XVIZData for message or undefined\n  _readMessage(message) {\n    const data = this.reader.readMessage(message);\n    if (data) {\n      return new XVIZData(data);\n    }\n\n    return undefined;\n  }\n\n  // return Metadata or undefined\n  _readMetadata() {\n    const data = this.reader.readMetadata();\n    if (data) {\n      return new XVIZData(data);\n    }\n\n    return undefined;\n  }\n}\n"],"file":"scenario-provider.js"}