{"version":3,"sources":["../../../src/middlewares/xviz-session-context.js"],"names":["XVIZSessionContext","constructor","state","map","Map","Object","entries","activeTransforms","set","name","val","get","startTransform","id","transforms","keys","transform","endTransform","delete"],"mappings":"AAmBA,OAAO,MAAMA,kBAAN,CAAyB;AAC9BC,EAAAA,WAAW,CAACC,KAAK,GAAG,EAAT,EAAa;AACtB,SAAKC,GAAL,GAAW,IAAIC,GAAJ,CAAQC,MAAM,CAACC,OAAP,CAAeJ,KAAf,CAAR,CAAX;AACA,SAAKK,gBAAL,GAAwB,IAAIH,GAAJ,EAAxB;AACD;;AAEDI,EAAAA,GAAG,CAACC,IAAD,EAAOC,GAAP,EAAY;AACb,SAAKP,GAAL,CAASK,GAAT,CAAaC,IAAb,EAAmBC,GAAnB;AACD;;AAEDC,EAAAA,GAAG,CAACF,IAAD,EAAO;AACR,WAAO,KAAKN,GAAL,CAASQ,GAAT,CAAaF,IAAb,CAAP;AACD;;AAEDG,EAAAA,cAAc,CAACC,EAAD,EAAKX,KAAL,EAAY;AACxB,SAAKK,gBAAL,CAAsBC,GAAtB,CAA0BK,EAA1B,EAA8BX,KAA9B;AACD;;AAEDY,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKP,gBAAL,CAAsBQ,IAAtB,EAAP;AACD;;AAEDC,EAAAA,SAAS,CAACH,EAAD,EAAK;AACZ,WAAO,KAAKN,gBAAL,CAAsBI,GAAtB,CAA0BE,EAA1B,CAAP;AACD;;AAEDI,EAAAA,YAAY,CAACJ,EAAD,EAAK;AACf,SAAKN,gBAAL,CAAsBW,MAAtB,CAA6BL,EAA7B;AACD;;AA5B6B","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/* XVIZSessionContext provides state shared across\n * a session.  It includes both general state about\n * the session as well as a store for middleware state\n * if necessary.\n */\nexport class XVIZSessionContext {\n  constructor(state = {}) {\n    this.map = new Map(Object.entries(state));\n    this.activeTransforms = new Map();\n  }\n\n  set(name, val) {\n    this.map.set(name, val);\n  }\n\n  get(name) {\n    return this.map.get(name);\n  }\n\n  startTransform(id, state) {\n    this.activeTransforms.set(id, state);\n  }\n\n  transforms() {\n    return this.activeTransforms.keys();\n  }\n\n  transform(id) {\n    return this.activeTransforms.get(id);\n  }\n\n  endTransform(id) {\n    this.activeTransforms.delete(id);\n  }\n}\n"],"file":"xviz-session-context.js"}