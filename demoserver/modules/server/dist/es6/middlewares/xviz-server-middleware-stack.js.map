{"version":3,"sources":["../../../src/middlewares/xviz-server-middleware-stack.js"],"names":["XVIZData","XVIZServerMiddlewareStack","constructor","middlewares","set","onClose","middlewareDispatch","onConnect","onStart","msg","onTransformLog","onTransformPointInTime","onError","onMetadata","onStateUpdate","onTransformLogDone","onReconfigure","name","arrayLength","length","i","middleware","handler","args","nextMiddleware","apply"],"mappings":"AAaA,SAAQA,QAAR,QAAuB,UAAvB;AAMA,OAAO,MAAMC,yBAAN,CAAgC;AACrCC,EAAAA,WAAW,CAACC,WAAD,EAAc;AACvB,SAAKA,WAAL,GAAmBA,WAAnB;AACD;;AAEDC,EAAAA,GAAG,CAACD,WAAD,EAAc;AACf,SAAKA,WAAL,GAAmBA,WAAnB;AACD;;AAEDE,EAAAA,OAAO,GAAG;AACR,SAAKC,kBAAL,CAAwB,SAAxB;AACD;;AAGDC,EAAAA,SAAS,GAAG;AACV,SAAKD,kBAAL,CAAwB,WAAxB;AACD;;AAEDE,EAAAA,OAAO,CAACC,GAAD,EAAM;AACX,SAAKH,kBAAL,CAAwB,SAAxB,EAAmCG,GAAnC;AACD;;AAEDC,EAAAA,cAAc,CAACD,GAAD,EAAM;AAClB,SAAKH,kBAAL,CAAwB,gBAAxB,EAA0CG,GAA1C;AACD;;AAEDE,EAAAA,sBAAsB,CAACF,GAAD,EAAM;AAC1B,SAAKH,kBAAL,CAAwB,wBAAxB,EAAkDG,GAAlD;AACD;;AAEDG,EAAAA,OAAO,CAACH,GAAD,EAAM;AACX,SAAKH,kBAAL,CAAwB,SAAxB,EAAmCG,GAAnC;AACD;;AAEDI,EAAAA,UAAU,CAACJ,GAAD,EAAM;AACd,SAAKH,kBAAL,CAAwB,YAAxB,EAAsCG,GAAtC;AACD;;AAEDK,EAAAA,aAAa,CAACL,GAAD,EAAM;AACjB,SAAKH,kBAAL,CAAwB,eAAxB,EAAyCG,GAAzC;AACD;;AAEDM,EAAAA,kBAAkB,CAACN,GAAD,EAAM;AACtB,SAAKH,kBAAL,CAAwB,oBAAxB,EAA8CG,GAA9C;AACD;;AAEDO,EAAAA,aAAa,CAACP,GAAD,EAAM;AACjB,SAAKH,kBAAL,CAAwB,eAAxB,EAAyCG,GAAzC;AACD;;AAEDH,EAAAA,kBAAkB,CAACW,IAAD,EAAOR,GAAP,EAAY;AAC5B,UAAMS,WAAW,GAAG,KAAKf,WAAL,CAAiBgB,MAArC;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAApB,EAAiCE,CAAC,EAAlC,EAAsC;AACpC,YAAMC,UAAU,GAAG,KAAKlB,WAAL,CAAiBiB,CAAjB,CAAnB;AAEA,YAAME,OAAO,GAAGD,UAAU,CAACJ,IAAD,CAA1B;;AAEA,UAAIK,OAAJ,EAAa;AACX,YAAIC,IAAI,GAAG,EAAX;;AAGA,YAAId,GAAG,IAAI,EAAEA,GAAG,YAAYT,QAAjB,CAAX,EAAuC;AACrCS,UAAAA,GAAG,GAAG,IAAIT,QAAJ,CAAaS,GAAb,CAAN;AACD;;AACDc,QAAAA,IAAI,GAAG,CAACd,GAAD,CAAP;AAEA,cAAMe,cAAc,GAAGF,OAAO,CAACG,KAAR,CAAcJ,UAAd,EAA0BE,IAA1B,CAAvB;;AACA,YAAIC,cAAc,KAAK,KAAvB,EAA8B;AAC5B;AACD;AACF;AACF;AACF;;AAxEoC","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport {XVIZData} from '@xviz/io';\n\n/**\n * This takes a set of XVIZ Server middleware's and\n * calls all there handlers in order.\n */\nexport class XVIZServerMiddlewareStack {\n  constructor(middlewares) {\n    this.middlewares = middlewares;\n  }\n\n  set(middlewares) {\n    this.middlewares = middlewares;\n  }\n\n  onClose() {\n    this.middlewareDispatch('onClose');\n  }\n\n  // Server middleware\n  onConnect() {\n    this.middlewareDispatch('onConnect');\n  }\n\n  onStart(msg) {\n    this.middlewareDispatch('onStart', msg);\n  }\n\n  onTransformLog(msg) {\n    this.middlewareDispatch('onTransformLog', msg);\n  }\n\n  onTransformPointInTime(msg) {\n    this.middlewareDispatch('onTransformPointInTime', msg);\n  }\n\n  onError(msg) {\n    this.middlewareDispatch('onError', msg);\n  }\n\n  onMetadata(msg) {\n    this.middlewareDispatch('onMetadata', msg);\n  }\n\n  onStateUpdate(msg) {\n    this.middlewareDispatch('onStateUpdate', msg);\n  }\n\n  onTransformLogDone(msg) {\n    this.middlewareDispatch('onTransformLogDone', msg);\n  }\n\n  onReconfigure(msg) {\n    this.middlewareDispatch('onReconfigure', msg);\n  }\n\n  middlewareDispatch(name, msg) {\n    const arrayLength = this.middlewares.length;\n    for (let i = 0; i < arrayLength; i++) {\n      const middleware = this.middlewares[i];\n\n      const handler = middleware[name];\n\n      if (handler) {\n        let args = [];\n\n        // Support JS objects\n        if (msg && !(msg instanceof XVIZData)) {\n          msg = new XVIZData(msg);\n        }\n        args = [msg];\n\n        const nextMiddleware = handler.apply(middleware, args);\n        if (nextMiddleware === false) {\n          break;\n        }\n      }\n    }\n  }\n}\n"],"file":"xviz-server-middleware-stack.js"}