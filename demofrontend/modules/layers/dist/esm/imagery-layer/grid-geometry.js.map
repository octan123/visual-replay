{"version":3,"sources":["../../../src/imagery-layer/grid-geometry.js"],"names":["GL","Geometry","GridGeometry","id","uid","uCount","vCount","drawMode","TRIANGLES","opts","Object","assign","attributes","indices","calculateIndices","texCoords","calculateTexCoords","uidCounters","count","indicesCount","Uint32Array","i","uIndex","vIndex","i0","i1","i2","i3","Float32Array","value","size"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport GL from '@luma.gl/constants';\nimport {Geometry} from '@luma.gl/core';\n\nexport default class GridGeometry extends Geometry {\n  constructor({\n    id = uid('grid-geometry'),\n    uCount = 1,\n    vCount = 1,\n    drawMode = GL.TRIANGLES,\n    ...opts\n  } = {}) {\n    super(\n      Object.assign({}, opts, {\n        id,\n        drawMode,\n        attributes: {\n          indices: calculateIndices({uCount, vCount}),\n          texCoords: calculateTexCoords({uCount, vCount})\n        }\n      })\n    );\n  }\n}\n\nconst uidCounters = {};\n\n/**\n * Returns a UID.\n * @param {String} id= - Identifier base name\n * @return {number} uid\n **/\nfunction uid(id = 'id') {\n  uidCounters[id] = uidCounters[id] || 1;\n  const count = uidCounters[id]++;\n  return `${id}-${count}`;\n}\n\nfunction calculateIndices({uCount, vCount}) {\n  // # of squares = (nx - 1) * (ny - 1)\n  // # of triangles = squares * 2\n  // # of indices = triangles * 3\n  const indicesCount = uCount * vCount * 2 * 3;\n  const indices = new Uint32Array(indicesCount);\n\n  let i = 0;\n  for (let uIndex = 0; uIndex < uCount; uIndex++) {\n    for (let vIndex = 0; vIndex < vCount; vIndex++) {\n      /*\n       *   i0   i1\n       *    +--.+---\n       *    | / |\n       *    +'--+---\n       *    |   |\n       *   i2   i3\n       */\n      const i0 = vIndex * (uCount + 1) + uIndex;\n      const i1 = i0 + 1;\n      const i2 = i0 + uCount + 1;\n      const i3 = i2 + 1;\n\n      indices[i++] = i0;\n      indices[i++] = i2;\n      indices[i++] = i1;\n      indices[i++] = i1;\n      indices[i++] = i2;\n      indices[i++] = i3;\n    }\n  }\n\n  return indices;\n}\n\nfunction calculateTexCoords({uCount, vCount}) {\n  const texCoords = new Float32Array((uCount + 1) * (vCount + 1) * 2);\n\n  let i = 0;\n  for (let vIndex = 0; vIndex <= vCount; vIndex++) {\n    for (let uIndex = 0; uIndex <= uCount; uIndex++) {\n      texCoords[i++] = uIndex / uCount;\n      texCoords[i++] = vIndex / vCount;\n    }\n  }\n\n  return {value: texCoords, size: 2};\n}\n"],"file":"grid-geometry.js"}