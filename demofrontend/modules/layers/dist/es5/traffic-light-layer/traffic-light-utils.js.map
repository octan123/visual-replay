{"version":3,"sources":["../../../src/traffic-light-layer/traffic-light-utils.js"],"names":["CANVAS_SIZE","drawArrow","ctx","x","y","size","strokeWidth","scaleX","halfSize","headSize","getX","px","getY","py","lineWidth","lineCap","beginPath","moveTo","lineTo","stroke","makeLightShapeTexture","gl","canvas","document","createElement","getContext","width","height","fillStyle","fillRect","strokeStyle","Texture2D","data"],"mappings":";;;;;;;AAqBA;;AAEA,IAAMA,WAAW,GAAG,GAApB;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,QAA+D;AAAA,MAAtCC,CAAsC,QAAtCA,CAAsC;AAAA,MAAnCC,CAAmC,QAAnCA,CAAmC;AAAA,MAAhCC,IAAgC,QAAhCA,IAAgC;AAAA,MAA1BC,WAA0B,QAA1BA,WAA0B;AAAA,yBAAbC,MAAa;AAAA,MAAbA,MAAa,4BAAJ,CAAI;AAC7D,MAAMC,QAAQ,GAAGH,IAAI,GAAG,CAAxB;AACA,MAAMI,QAAQ,GAAGJ,IAAI,GAAG,CAAxB;;AAEA,MAAMK,IAAI,GAAG,SAAPA,IAAO,CAAAC,EAAE;AAAA,WAAI,CAACH,QAAQ,GAAGG,EAAZ,IAAkBJ,MAAlB,GAA2BJ,CAA3B,GAA+BK,QAAnC;AAAA,GAAf;;AACA,MAAMI,IAAI,GAAG,SAAPA,IAAO,CAAAC,EAAE;AAAA,WAAIA,EAAE,GAAGT,CAAT;AAAA,GAAf;;AAEAF,EAAAA,GAAG,CAACY,SAAJ,GAAgBR,WAAhB;AACAJ,EAAAA,GAAG,CAACa,OAAJ,GAAc,OAAd;AAEAb,EAAAA,GAAG,CAACc,SAAJ;AACAd,EAAAA,GAAG,CAACe,MAAJ,CAAWP,IAAI,CAAC,CAAD,CAAf,EAAoBE,IAAI,CAACJ,QAAD,CAAxB;AACAN,EAAAA,GAAG,CAACgB,MAAJ,CAAWR,IAAI,CAACL,IAAD,CAAf,EAAuBO,IAAI,CAACJ,QAAD,CAA3B;AACAN,EAAAA,GAAG,CAACe,MAAJ,CAAWP,IAAI,CAACL,IAAI,GAAGI,QAAR,CAAf,EAAkCG,IAAI,CAACJ,QAAQ,GAAGC,QAAZ,CAAtC;AACAP,EAAAA,GAAG,CAACgB,MAAJ,CAAWR,IAAI,CAACL,IAAD,CAAf,EAAuBO,IAAI,CAACJ,QAAD,CAA3B;AACAN,EAAAA,GAAG,CAACgB,MAAJ,CAAWR,IAAI,CAACL,IAAI,GAAGI,QAAR,CAAf,EAAkCG,IAAI,CAACJ,QAAQ,GAAGC,QAAZ,CAAtC;AACAP,EAAAA,GAAG,CAACiB,MAAJ;AACD;;AAMM,SAASC,qBAAT,CAA+BC,EAA/B,EAAmC;AACxC,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACA,MAAMtB,GAAG,GAAGoB,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AAEAH,EAAAA,MAAM,CAACI,KAAP,GAAe1B,WAAW,GAAG,CAA7B;AACAsB,EAAAA,MAAM,CAACK,MAAP,GAAgB3B,WAAhB;AASAE,EAAAA,GAAG,CAAC0B,SAAJ,GAAgB,MAAhB;AACA1B,EAAAA,GAAG,CAAC2B,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB7B,WAAW,GAAG,CAAjC,EAAoCA,WAApC;AAGAE,EAAAA,GAAG,CAAC0B,SAAJ,GAAgB,MAAhB;AACA1B,EAAAA,GAAG,CAAC2B,QAAJ,CAAa7B,WAAb,EAA0B,CAA1B,EAA6BA,WAA7B,EAA0CA,WAA1C;AACAE,EAAAA,GAAG,CAAC4B,WAAJ,GAAkB,MAAlB;AACA7B,EAAAA,SAAS,CAACC,GAAD,EAAM;AACbC,IAAAA,CAAC,EAAEH,WAAW,GAAG,KADJ;AAEbI,IAAAA,CAAC,EAAEJ,WAAW,GAAG,CAFJ;AAGbK,IAAAA,IAAI,EAAEL,WAAW,GAAG,CAHP;AAIbM,IAAAA,WAAW,EAAEN,WAAW,GAAG;AAJd,GAAN,CAAT;AAQAE,EAAAA,GAAG,CAAC0B,SAAJ,GAAgB,MAAhB;AACA1B,EAAAA,GAAG,CAAC2B,QAAJ,CAAa7B,WAAW,GAAG,CAA3B,EAA8B,CAA9B,EAAiCA,WAAjC,EAA8CA,WAA9C;AACAE,EAAAA,GAAG,CAAC4B,WAAJ,GAAkB,MAAlB;AACA7B,EAAAA,SAAS,CAACC,GAAD,EAAM;AACbC,IAAAA,CAAC,EAAEH,WAAW,GAAG,KADJ;AAEbI,IAAAA,CAAC,EAAEJ,WAAW,GAAG,CAFJ;AAGbK,IAAAA,IAAI,EAAEL,WAAW,GAAG,CAHP;AAIbM,IAAAA,WAAW,EAAEN,WAAW,GAAG,EAJd;AAKbO,IAAAA,MAAM,EAAE,CAAC;AALI,GAAN,CAAT;AAQA,SAAO,IAAIwB,eAAJ,CAAcV,EAAd,EAAkB;AAACW,IAAAA,IAAI,EAAEV;AAAP,GAAlB,CAAP;AACD","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* global document */\nimport {Texture2D} from '@luma.gl/core';\n\nconst CANVAS_SIZE = 256;\n\nfunction drawArrow(ctx, {x, y, size, strokeWidth, scaleX = 1}) {\n  const halfSize = size / 2;\n  const headSize = size / 4;\n\n  const getX = px => (halfSize - px) * scaleX + x + halfSize;\n  const getY = py => py + y;\n\n  ctx.lineWidth = strokeWidth;\n  ctx.lineCap = 'round';\n\n  ctx.beginPath();\n  ctx.moveTo(getX(0), getY(halfSize));\n  ctx.lineTo(getX(size), getY(halfSize));\n  ctx.moveTo(getX(size - headSize), getY(halfSize - headSize));\n  ctx.lineTo(getX(size), getY(halfSize));\n  ctx.lineTo(getX(size - headSize), getY(halfSize + headSize));\n  ctx.stroke();\n}\n\n/*\n * renders traffic light shapes to texture2D.\n * @param {WebGLRenderingContext} glContext\n */\nexport function makeLightShapeTexture(gl) {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n\n  canvas.width = CANVAS_SIZE * 4;\n  canvas.height = CANVAS_SIZE;\n\n  /*\n   *  +-----------+-----------+------------+\n   *  | circular  | turn_left | turn_right |\n   *  +-----------+-----------+------------+\n   */\n\n  // circular (no mask)\n  ctx.fillStyle = '#fff';\n  ctx.fillRect(0, 0, CANVAS_SIZE * 4, CANVAS_SIZE);\n\n  // left arrow\n  ctx.fillStyle = '#444';\n  ctx.fillRect(CANVAS_SIZE, 0, CANVAS_SIZE, CANVAS_SIZE);\n  ctx.strokeStyle = '#fff';\n  drawArrow(ctx, {\n    x: CANVAS_SIZE * 1.333,\n    y: CANVAS_SIZE / 3,\n    size: CANVAS_SIZE / 3,\n    strokeWidth: CANVAS_SIZE / 16\n  });\n\n  // right arrow\n  ctx.fillStyle = '#444';\n  ctx.fillRect(CANVAS_SIZE * 2, 0, CANVAS_SIZE, CANVAS_SIZE);\n  ctx.strokeStyle = '#fff';\n  drawArrow(ctx, {\n    x: CANVAS_SIZE * 2.333,\n    y: CANVAS_SIZE / 3,\n    size: CANVAS_SIZE / 3,\n    strokeWidth: CANVAS_SIZE / 16,\n    scaleX: -1\n  });\n\n  return new Texture2D(gl, {data: canvas});\n}\n"],"file":"traffic-light-utils.js"}