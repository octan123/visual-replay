{"version":3,"sources":["../../../src/utils/viewport.js"],"names":["getViewStateOffset","oldViewState","viewState","oldOffset","oldViewport","WebMercatorViewport","oldPos","width","x","height","y","trackedLngLat","unproject","newViewport","newPos","project","bearing","offsetViewState","offset","shiftedViewState","helperViewport","pos","lngLat","longitude","latitude","getLocationAtPoint","getViews","viewMode","options","name","orthographic","firstPerson","mapInteraction","controllerProps","keyboard","FirstPersonView","id","fovy","near","far","focalDistance","controller","MapView","getViewStates","trackedPosition","tracked","viewStates","position","altitude","transitionDuration","heading"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport WebMercatorViewport from 'viewport-mercator-project';\nimport {MapView, FirstPersonView} from '@deck.gl/core';\n\nexport function getViewStateOffset(oldViewState, viewState, oldOffset) {\n  if (!oldViewState) {\n    return oldOffset;\n  }\n\n  const oldViewport = new WebMercatorViewport(oldViewState);\n  const oldPos = [oldViewport.width / 2 + oldOffset.x, oldViewport.height / 2 + oldOffset.y];\n  const trackedLngLat = oldViewport.unproject(oldPos);\n\n  const newViewport = new WebMercatorViewport(viewState);\n  const newPos = newViewport.project(trackedLngLat);\n\n  return {\n    x: oldOffset.x + newPos[0] - oldPos[0],\n    y: oldOffset.y + newPos[1] - oldPos[1],\n    bearing: oldOffset.bearing + viewState.bearing - oldViewState.bearing\n  };\n}\n\n// Adjust lng/lat to position the car 1/4 from screen bottom\nfunction offsetViewState(viewState, offset) {\n  const shiftedViewState = {\n    ...viewState,\n    bearing: viewState.bearing + offset.bearing\n  };\n\n  const helperViewport = new WebMercatorViewport(shiftedViewState);\n\n  const pos = [viewState.width / 2 + offset.x, viewState.height / 2 + offset.y];\n  const lngLat = [viewState.longitude, viewState.latitude];\n\n  const [longitude, latitude] = helperViewport.getLocationAtPoint({\n    lngLat,\n    pos\n  });\n\n  return {\n    ...shiftedViewState,\n    longitude,\n    latitude\n  };\n}\n\nexport function getViews(viewMode, options = {}) {\n  const {name, orthographic, firstPerson, mapInteraction} = viewMode;\n\n  const controllerProps = {...mapInteraction, keyboard: false};\n\n  if (firstPerson) {\n    return new FirstPersonView({\n      ...options,\n      id: name,\n      fovy: 75,\n      near: 1,\n      far: 10000,\n      focalDistance: 6,\n      controller: controllerProps\n    });\n  }\n\n  return new MapView({\n    ...options,\n    id: name,\n    orthographic,\n    controller: controllerProps\n  });\n}\n\n// Creates viewports that contains information about car position and heading\nexport function getViewStates({viewState, trackedPosition, viewMode, offset}) {\n  const {name, firstPerson, tracked = {}} = viewMode;\n\n  const viewStates = {};\n\n  if (firstPerson) {\n    if (trackedPosition) {\n      const bearing = trackedPosition.bearing;\n      viewState = {\n        ...viewState,\n        ...firstPerson,\n        longitude: trackedPosition.longitude,\n        latitude: trackedPosition.latitude,\n        bearing: bearing + offset.bearing\n      };\n\n      // Put the tracked object on the ground + 1.3 for vehicle height\n      // TODO - support flying vehicle\n      viewState.position = [0, 0, trackedPosition.altitude + 1.3];\n    }\n\n    viewStates[name] = viewState;\n  } else {\n    viewState = {...viewState, transitionDuration: 0};\n    offset = {...offset};\n\n    // Track car position & heading\n    if (tracked.position && trackedPosition) {\n      viewState.longitude = trackedPosition.longitude;\n      viewState.latitude = trackedPosition.latitude;\n    } else {\n      offset.x = 0;\n      offset.y = 0;\n    }\n    if (tracked.heading && trackedPosition) {\n      viewState.bearing = trackedPosition.bearing;\n    } else {\n      offset.bearing = 0;\n    }\n    // Put the tracked object on the ground\n    // TODO - support flying vehicle\n    if (trackedPosition) {\n      viewState.position = [0, 0, trackedPosition.altitude];\n    }\n\n    viewStates[name] = offsetViewState(viewState, offset);\n  }\n\n  return viewStates;\n}\n/* eslint-enable max-params */\n"],"file":"viewport.js"}