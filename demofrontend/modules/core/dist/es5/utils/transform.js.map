{"version":3,"sources":["../../../src/utils/transform.js"],"names":["DEFAULT_ORIGIN","resolveLinksTransform","links","streams","streamName","transforms","parentPose","target_pose","missingPose","push","length","reduceRight","acc","val","multiplyRight","Pose","getTransformationMatrix","Matrix4","resolveCoordinateTransform","frame","streamMetadata","getTransformMatrix","origin","vehicleRelativeTransform","coordinate","transform","pose","coordinateSystem","COORDINATE_SYSTEM","METER_OFFSETS","modelMatrix","streamTransform","COORDINATE","GEOGRAPHIC","LNGLAT","DYNAMIC","VEHICLE_RELATIVE","IDENTITY","coordinateOrigin","positionToLngLat","x","y","z","transformAsPoint"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable camelcase */\nimport {COORDINATE_SYSTEM} from '@deck.gl/core';\nimport {_Pose as Pose, Matrix4} from 'math.gl';\nimport {addMetersToLngLat} from 'viewport-mercator-project';\n\nimport {COORDINATE} from '../constants';\n\n// keep in sync with core-3d-viewer.js\nconst DEFAULT_ORIGIN = [0, 0, 0];\n\n// Export only for testing\nexport function resolveLinksTransform(links, streams, streamName) {\n  const transforms = [];\n  let parentPose = links[streamName] && links[streamName].target_pose;\n\n  // TODO(twojtasz): we could cache the resulting transform based on the entry\n  // into the link structure.\n\n  let missingPose = false;\n\n  // Collect all poses from child to root\n  while (parentPose) {\n    if (!streams[parentPose]) {\n      missingPose = true;\n      break;\n    }\n    transforms.push(streams[parentPose]);\n    parentPose = links[parentPose] && links[parentPose].target_pose;\n  }\n\n  // Resolve pose transforms. If missingPose is true, which can happen if a\n  // persistent link is defined before normal state has been sent, ignore it\n  // TODO(twojtasz): Flag stream affected by missingPose so it can be reported\n  // by application\n  if (!missingPose && transforms.length) {\n    // process from root to child\n    return transforms.reduceRight((acc, val) => {\n      return acc.multiplyRight(new Pose(val).getTransformationMatrix());\n    }, new Matrix4());\n  }\n\n  return null;\n}\n\n/* Return the modelMatrix used for rendering a stream.\n *\n * frame - constains all the XVIZ state\n * streamName - The name of the stream we are rendering\n * streamMetadata - Anym metadata associated with the stream\n * getTransformMatrix - A callback function for when stream metadata specifieds a DYNAMIC coordinate system\n */\nexport function resolveCoordinateTransform(\n  frame,\n  streamName,\n  streamMetadata = {},\n  getTransformMatrix\n) {\n  const {origin, links = {}, streams, transforms = {}, vehicleRelativeTransform} = frame;\n  const {coordinate, transform, pose} = streamMetadata;\n\n  let coordinateSystem = COORDINATE_SYSTEM.METER_OFFSETS;\n  let modelMatrix = null;\n  let streamTransform = transform;\n\n  switch (coordinate) {\n    case COORDINATE.GEOGRAPHIC:\n      coordinateSystem = COORDINATE_SYSTEM.LNGLAT;\n      break;\n\n    case COORDINATE.DYNAMIC:\n      // TODO(twojtasz): this should work with links and needs streamName passed\n      // cache calculated transform matrix for each frame\n      transforms[transform] = transforms[transform] || getTransformMatrix(transform, frame);\n      modelMatrix = transforms[transform];\n      frame.transforms = transforms;\n      streamTransform = null;\n      break;\n\n    case COORDINATE.VEHICLE_RELATIVE:\n      // NOTE: In XVIZ this setting means a relationship to `/vehicle_pose` stream.\n      // However, with the addition of *links* this really becomes only a convenience\n      // as you could choose arbitrary poses.\n      modelMatrix = vehicleRelativeTransform;\n      break;\n\n    default:\n    case COORDINATE.IDENTITY:\n      modelMatrix = resolveLinksTransform(links, streams, streamName);\n      break;\n  }\n\n  if (pose) {\n    // TODO(twojtasz): remove when builder updates\n    streamTransform = new Pose(pose).getTransformationMatrix();\n  }\n  if (streamTransform && streamTransform.length > 0) {\n    // TODO(twojtasz): this needs tested with links\n    modelMatrix = modelMatrix\n      ? new Matrix4(modelMatrix).multiplyRight(streamTransform)\n      : streamTransform;\n  }\n\n  return {\n    coordinateSystem,\n    coordinateOrigin: origin || DEFAULT_ORIGIN,\n    modelMatrix\n  };\n}\n\nexport function positionToLngLat([x, y, z], {coordinateSystem, coordinateOrigin, modelMatrix}) {\n  if (modelMatrix) {\n    [x, y, z] = new Matrix4(modelMatrix).transformAsPoint([x, y, z]);\n  }\n\n  switch (coordinateSystem) {\n    case COORDINATE_SYSTEM.METER_OFFSETS:\n      return addMetersToLngLat(coordinateOrigin, [x, y, z]);\n\n    case COORDINATE_SYSTEM.LNGLAT:\n    default:\n      return [x, y, z];\n  }\n}\n"],"file":"transform.js"}