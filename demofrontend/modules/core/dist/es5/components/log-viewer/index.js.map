{"version":3,"sources":["../../../../src/components/log-viewer/index.js"],"names":["noop","preventDefault","evt","LogViewer","props","viewState","viewOffset","setState","onViewStateChange","info","showTooltip","object","hoverInfo","state","onClick","objectId","id","onSelectObject","objectStates","isObjectSelected","selected","stateName","value","onObjectStateChange","onContextMenu","width","height","longitude","latitude","DEFAULT_VIEW_STATE","viewMode","initialViewState","x","y","bearing","style","renderTooltip","tooltip","_onViewStateChange","_onClickObject","_onHoverObject","_onContextMenu","_renderTooltip","PureComponent","Core3DViewer","propTypes","PropTypes","func","defaultProps","getTransformMatrix","streamName","context","getLogState","log","frame","getCurrentFrame","metadata","getMetadata","streamsMetadata","getStreamsMetadata","Component"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {setObjectState} from '../../utils/object-state';\n\nimport Core3DViewer from './core-3d-viewer';\nimport HoverTooltip from './hover-tooltip';\n\nimport connectToLog from '../connect';\nimport {DEFAULT_VIEW_STATE} from '../../constants';\n\nconst noop = () => {};\nconst preventDefault = evt => evt.preventDefault();\n\nclass LogViewer extends PureComponent {\n  static propTypes = {\n    ...Core3DViewer.propTypes,\n\n    // Rendering options\n    renderTooltip: PropTypes.func,\n    style: PropTypes.object,\n\n    // Callbacks\n    onSelectObject: PropTypes.func,\n    onContextMenu: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n    onObjectStateChange: PropTypes.func,\n\n    // Optional: to use with external state management (e.g. Redux)\n    viewState: PropTypes.object,\n    viewOffset: PropTypes.object,\n    objectStates: PropTypes.object\n  };\n\n  static defaultProps = {\n    ...Core3DViewer.defaultProps,\n\n    style: {},\n    onViewStateChange: noop,\n    onObjectStateChange: noop,\n    onSelectObject: noop,\n    onContextMenu: noop,\n    getTransformMatrix: (streamName, context) => null\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      viewState: {\n        width: 1,\n        height: 1,\n        longitude: 0,\n        latitude: 0,\n        ...DEFAULT_VIEW_STATE,\n        ...props.viewMode.initialViewState\n      },\n      viewOffset: {\n        x: 0,\n        y: 0,\n        bearing: 0\n      },\n      objectStates: {},\n      hoverInfo: null\n    };\n  }\n\n  _onViewStateChange = ({viewState, viewOffset}) => {\n    this.setState({viewState, viewOffset});\n    this.props.onViewStateChange({viewState, viewOffset});\n  };\n\n  _onHoverObject = (info, evt) => {\n    if (this.props.showTooltip && info && info.object) {\n      this.setState({hoverInfo: info});\n    } else if (this.state.hoverInfo) {\n      this.setState({hoverInfo: null});\n    }\n  };\n\n  _onClickObject = (info, evt) => {\n    this.props.onClick(info, evt);\n    const objectId = info && info.object && info.object.id;\n\n    if (objectId && !this.props.onSelectObject(info, evt)) {\n      // User callback did not mark event as handled, proceed with default behavior\n      // Select object\n      let {objectStates} = this.state;\n      const isObjectSelected = objectStates.selected && objectStates.selected[objectId];\n\n      objectStates = setObjectState(objectStates, {\n        stateName: 'selected',\n        id: objectId,\n        value: !isObjectSelected\n      });\n\n      this.setState({objectStates});\n      this.props.onObjectStateChange(objectStates);\n    }\n  };\n\n  _onContextMenu = (info, evt) => {\n    this.props.onContextMenu(info, evt);\n  };\n\n  _renderTooltip() {\n    const {showTooltip, style, renderTooltip} = this.props;\n    const {hoverInfo} = this.state;\n\n    return (\n      showTooltip &&\n      hoverInfo && (\n        <HoverTooltip info={hoverInfo} style={style.tooltip} renderContent={renderTooltip} />\n      )\n    );\n  }\n\n  render() {\n    const viewState = this.props.viewState || this.state.viewState;\n    const viewOffset = this.props.viewOffset || this.state.viewOffset;\n    const objectStates = this.props.objectStates || this.state.objectStates;\n\n    return (\n      <div onContextMenu={preventDefault}>\n        <Core3DViewer\n          {...this.props}\n          onViewStateChange={this._onViewStateChange}\n          onClick={this._onClickObject}\n          onHover={this._onHoverObject}\n          onContextMenu={this._onContextMenu}\n          viewState={viewState}\n          viewOffset={viewOffset}\n          objectStates={objectStates}\n        >\n          {this._renderTooltip()}\n        </Core3DViewer>\n      </div>\n    );\n  }\n}\n\nconst getLogState = log => ({\n  frame: log.getCurrentFrame(),\n  metadata: log.getMetadata(),\n  streamsMetadata: log.getStreamsMetadata()\n});\n\nexport default connectToLog({getLogState, Component: LogViewer});\n"],"file":"index.js"}