{"version":3,"sources":["../../../../src/components/declarative-ui/xviz-table.js"],"names":["XVIZTableComponent","props","state","_formatData","nextProps","columns","nodes","setState","displayObjectId","map","col","name","display_text","type","rowIds","rows","forEach","node","row","data","column_values","children","id","hasOwnProperty","parent","undefined","push","parentRow","title","description","width","height","style","renderHeader","renderCell","indentSize","Component","Table","TreeTable","PureComponent","PropTypes","oneOfType","string","number","object","func","stream","bool","array","column","value","String","getLogState","log","ownProps","frame","getCurrentFrame","streams","treetable"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {PureComponent} from 'react';\nimport {Table, TreeTable, Tooltip} from '@streetscape.gl/monochrome';\nimport PropTypes from 'prop-types';\n\nimport connectToLog from '../connect';\n\nclass XVIZTableComponent extends PureComponent {\n  static propTypes = {\n    // UI configuration\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    style: PropTypes.object,\n    renderHeader: PropTypes.func,\n    renderCell: PropTypes.func,\n    indentSize: PropTypes.number,\n\n    // From declarative UI table component\n    stream: PropTypes.string,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    displayObjectId: PropTypes.bool,\n\n    // From connected log\n    columns: PropTypes.array,\n    nodes: PropTypes.array\n  };\n\n  static defaultProps = {\n    width: '100%',\n    height: 400,\n    style: {},\n    indentSize: 12,\n    renderHeader: ({column}) => column.name,\n    renderCell: ({value}) => (value === null ? null : String(value))\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...this._formatData(props)\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.columns !== this.props.columns || nextProps.nodes !== this.props.nodes) {\n      this.setState(this._formatData(nextProps));\n    }\n  }\n\n  _formatData({columns, nodes, displayObjectId}) {\n    if (!columns || !nodes) {\n      return {columns: null};\n    }\n\n    columns = columns.map(col => ({\n      name: col.display_text,\n      type: col.type\n    }));\n\n    const rowIds = {};\n    const rows = [];\n\n    nodes.forEach(node => {\n      const row = {\n        data: node.column_values || [],\n        children: []\n      };\n      rowIds[node.id] = row;\n\n      // Validate the property is on the instance, and not just in the\n      // prototype chain. This comes from how protobuf.js implements messages\n      if (!node.hasOwnProperty('parent') || node.parent === undefined) {\n        rows.push(row);\n      } else {\n        const parentRow = rowIds[node.parent];\n        if (parentRow) {\n          parentRow.children.push(row);\n        }\n      }\n    });\n\n    return {columns, rows};\n  }\n\n  render() {\n    const {columns, rows} = this.state;\n\n    if (!columns) {\n      // TODO - show loading message\n      return null;\n    }\n\n    const {\n      title,\n      description,\n      width,\n      height,\n      style,\n      renderHeader,\n      renderCell,\n      indentSize,\n      type\n    } = this.props;\n    const Component = type === 'table' ? Table : TreeTable;\n\n    return (\n      <div style={{width, height}}>\n        <Tooltip content={description}>\n          <h4>{title}</h4>\n        </Tooltip>\n        <Component\n          width=\"100%\"\n          height=\"100%\"\n          style={style}\n          renderHeader={renderHeader}\n          renderCell={renderCell}\n          indentSize={indentSize}\n          columns={columns}\n          rows={rows}\n        />\n      </div>\n    );\n  }\n}\n\nconst getLogState = (log, ownProps) => {\n  const frame = log.getCurrentFrame();\n  const data = frame && frame.streams[ownProps.stream];\n  return data && data.treetable;\n};\n\nexport default connectToLog({getLogState, Component: XVIZTableComponent});\n"],"file":"xviz-table.js"}