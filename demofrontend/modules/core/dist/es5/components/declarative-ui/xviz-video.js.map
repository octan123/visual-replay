{"version":3,"sources":["../../../../src/components/declarative-ui/xviz-video.js"],"names":["WrapperComponent","styled","span","props","theme","__reset__","position","userStyle","BaseComponent","streamName","setState","selectedStreamName","state","_getStreamNames","nextProps","streamsMetadata","cameras","streamNames","Object","keys","filter","type","primitive_type","sort","includes","style","length","data","forEach","name","selector","_onSelectVideo","currentTime","streams","width","height","images","Boolean","wrapper","_renderVideoSelector","PureComponent","PropTypes","object","oneOfType","number","string","array","func","getLogState","log","getCurrentTime","getStreamsMetadata","getStreams","XVIZVideoComponent","Component"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from '@emotion/styled';\nimport {Dropdown, withTheme, evaluateStyle} from '@streetscape.gl/monochrome';\nimport ImageSequence from './image-sequence';\nimport connectToLog from '../connect';\n\nimport {normalizeStreamFilter} from '../../utils/stream-utils';\n\nconst WrapperComponent = styled.span(props => ({\n  ...props.theme.__reset__,\n  position: 'relative',\n  ...evaluateStyle(props.userStyle, props)\n}));\n\nclass BaseComponent extends PureComponent {\n  static propTypes = {\n    // User configuration\n    style: PropTypes.object,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // From declarative UI video component\n    cameras: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n      PropTypes.object,\n      PropTypes.func\n    ]),\n\n    // From connected log\n    currentTime: PropTypes.number,\n    streamsMetadata: PropTypes.object,\n    streams: PropTypes.object\n  };\n\n  static defaultProps = {\n    style: {},\n    width: '100%',\n    height: 'auto'\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...this._getStreamNames(props)\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.props.streamsMetadata !== nextProps.streamsMetadata ||\n      this.props.cameras !== nextProps.cameras\n    ) {\n      this.setState(this._getStreamNames(nextProps));\n    }\n  }\n\n  _getStreamNames({streamsMetadata, cameras}) {\n    const streamNames = Object.keys(streamsMetadata)\n      .filter(streamName => {\n        const type = streamsMetadata[streamName] && streamsMetadata[streamName].primitive_type;\n        return type === 'IMAGE' || type === 'image'; // Support pre-1.0 lowercase value\n      })\n      .filter(normalizeStreamFilter(cameras))\n      .sort();\n    let {selectedStreamName} = this.state || {};\n    if (!streamNames.includes(selectedStreamName)) {\n      selectedStreamName = streamNames[0] || null;\n    }\n    return {selectedStreamName, streamNames};\n  }\n\n  _onSelectVideo = streamName => {\n    this.setState({selectedStreamName: streamName});\n  };\n\n  _renderVideoSelector() {\n    const {style} = this.props;\n    const {streamNames, selectedStreamName} = this.state;\n\n    if (streamNames.length <= 1) {\n      return null;\n    }\n\n    const data = {};\n    streamNames.forEach(name => {\n      // TODO - use display name from metadata\n      data[name] = name;\n    });\n\n    return (\n      <Dropdown\n        style={style.selector}\n        value={selectedStreamName}\n        data={data}\n        onChange={this._onSelectVideo}\n      />\n    );\n  }\n\n  render() {\n    const {currentTime, streams, width, height, style, theme} = this.props;\n    const {selectedStreamName} = this.state;\n\n    if (!streams || !currentTime || !selectedStreamName) {\n      return null;\n    }\n    let images = streams[selectedStreamName];\n    if (images) {\n      images = images.filter(Boolean);\n    }\n\n    return (\n      <WrapperComponent theme={theme} userStyle={style.wrapper}>\n        <ImageSequence width={width} height={height} src={images} currentTime={currentTime} />\n\n        {this._renderVideoSelector()}\n      </WrapperComponent>\n    );\n  }\n}\n\nconst getLogState = log => ({\n  currentTime: log.getCurrentTime(),\n  streamsMetadata: log.getStreamsMetadata(),\n  streams: log.getStreams()\n});\n\nconst XVIZVideoComponent = withTheme(BaseComponent);\n\nexport default connectToLog({getLogState, Component: XVIZVideoComponent});\n"],"file":"xviz-video.js"}