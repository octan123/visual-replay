{"version":3,"sources":["../../../src/utils/stream-utils.js"],"names":["normalizeStreamFilter","filter","Array","isArray","streamName","includes"],"mappings":";AA6BA,OAAO,SAASA,qBAAT,CAA+BC,MAA/B,EAAuC;AAC5C,MAAI,CAACA,MAAL,EAAa;AAEX,WAAO;AAAA,aAAM,IAAN;AAAA,KAAP;AACD;;AACD,MAAIC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAJ,EAA2B;AACzB,WAAO,UAAAG,UAAU;AAAA,aAAIH,MAAM,CAACI,QAAP,CAAgBD,UAAhB,CAAJ;AAAA,KAAjB;AACD;;AACD,kBAAeH,MAAf;AACE,SAAK,QAAL;AACE,aAAO,UAAAG,UAAU;AAAA,eAAIA,UAAU,KAAKH,MAAnB;AAAA,OAAjB;;AACF,SAAK,UAAL;AACE,aAAOA,MAAP;;AACF;AACE,aAAO,UAAAG,UAAU;AAAA,eAAIH,MAAM,CAACG,UAAD,CAAV;AAAA,OAAjB;AANJ;AAQD","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * creates a test function from a filter\n * @param filter {string|object|array<string>|function}\n *   - string: a single stream name to be allowed\n *   - array: multiple stream names to be allowed\n *   - object: stream name to true|false map\n *   - function: custom callback that returns true|false from any stream name\n * @returns a normalized test function that returns true|false from any stream name\n */\nexport function normalizeStreamFilter(filter) {\n  if (!filter) {\n    // empty - always pass\n    return () => true;\n  }\n  if (Array.isArray(filter)) {\n    return streamName => filter.includes(streamName);\n  }\n  switch (typeof filter) {\n    case 'string':\n      return streamName => streamName === filter;\n    case 'function':\n      return filter;\n    default:\n      return streamName => filter[streamName];\n  }\n}\n"],"file":"stream-utils.js"}