{"version":3,"sources":["../../../../src/components/playback-control/dual-playback-control.js"],"names":["React","PureComponent","PropTypes","PlaybackControl","Slider","withTheme","evaluateStyle","styled","LookAheadContainer","div","props","display","alignItems","width","flexGrow","userStyle","LookAheadTimestamp","span","marginLeft","theme","spacingNormal","marginRight","lookAheadMarkerStyle","position","boxSizing","borderStyle","marginTop","borderWidth","borderLeftColor","borderRightColor","borderTopColor","borderBottomStyle","transitionProperty","transitionDuration","isPlaying","DualPlaybackControl","style","lookAhead","formatLookAhead","maxLookAhead","step","lookAheadTimestamp","lookAheadSlider","onLookAheadChange","userMarkers","markers","children","currentTime","endTime","lookAheadTime","Math","min","concat","time","lookAheadMarker","_renderLookAheadSlider","propTypes","number","func","defaultProps","formatTick","formatTimestamp","x","formatTimeCode","ThemedDualPlaybackControl"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {PlaybackControl, Slider, withTheme, evaluateStyle} from '@streetscape.gl/monochrome';\n\nimport styled from '@emotion/styled';\n\nconst LookAheadContainer = styled.div(props => ({\n  display: 'flex',\n  alignItems: 'center',\n  width: 200,\n  '>div': {\n    flexGrow: 1\n  },\n  ...evaluateStyle(props.userStyle, props)\n}));\n\nconst LookAheadTimestamp = styled.span(props => ({\n  marginLeft: props.theme.spacingNormal,\n  marginRight: props.theme.spacingNormal,\n  ...evaluateStyle(props.userStyle, props)\n}));\n\nconst lookAheadMarkerStyle = props => ({\n  position: 'absolute',\n  boxSizing: 'content-box',\n  borderStyle: 'solid',\n  marginTop: 6,\n  marginLeft: -6,\n  borderWidth: 6,\n  borderLeftColor: 'transparent',\n  borderRightColor: 'transparent',\n  borderTopColor: '#888',\n  borderBottomStyle: 'none',\n\n  transitionProperty: 'left',\n  transitionDuration: props.isPlaying ? '0s' : props.theme.transitionDuration,\n\n  ...evaluateStyle(props.userStyle, props)\n});\n\nclass DualPlaybackControl extends PureComponent {\n  static propTypes = {\n    ...PlaybackControl.propTypes,\n    lookAhead: PropTypes.number,\n    maxLookAhead: PropTypes.number,\n    formatLookAhead: PropTypes.func,\n    onLookAheadChange: PropTypes.func\n  };\n\n  static defaultProps = {\n    ...PlaybackControl.defaultProps,\n    step: 0,\n    markers: [],\n    lookAhead: 0,\n    maxLookAhead: 10,\n    formatTick: null,\n    formatTimestamp: null,\n    formatLookAhead: x => PlaybackControl.formatTimeCode(x, '{ss}.{S}'),\n    onLookAheadChange: () => {}\n  };\n\n  _renderLookAheadSlider() {\n    const {theme, style, isPlaying, lookAhead, formatLookAhead, maxLookAhead, step} = this.props;\n\n    return (\n      <LookAheadContainer theme={theme} isPlaying={isPlaying} userStyle={style.lookAhead}>\n        <LookAheadTimestamp\n          theme={theme}\n          isPlaying={isPlaying}\n          userStyle={style.lookAheadTimestamp}\n        >\n          Look ahead: {formatLookAhead(lookAhead)}\n        </LookAheadTimestamp>\n        <Slider\n          style={style.lookAheadSlider}\n          value={lookAhead}\n          min={0}\n          max={maxLookAhead}\n          step={step}\n          size={16}\n          onChange={this.props.onLookAheadChange}\n        />\n      </LookAheadContainer>\n    );\n  }\n\n  render() {\n    const {\n      theme,\n      isPlaying,\n      markers: userMarkers,\n      style,\n      children,\n      currentTime,\n      lookAhead,\n      endTime\n    } = this.props;\n    const lookAheadTime = Math.min(endTime, currentTime + lookAhead);\n\n    const markers = userMarkers.concat({\n      time: lookAheadTime,\n      style: lookAheadMarkerStyle({theme, isPlaying, userStyle: style.lookAheadMarker})\n    });\n\n    return (\n      <PlaybackControl {...this.props} markers={markers}>\n        {children}\n        <div style={{flexGrow: 1}} />\n        {this._renderLookAheadSlider()}\n      </PlaybackControl>\n    );\n  }\n}\n\nconst ThemedDualPlaybackControl = withTheme(DualPlaybackControl);\nThemedDualPlaybackControl.formatTimeCode = PlaybackControl.formatTimeCode;\n\nexport default ThemedDualPlaybackControl;\n"],"file":"dual-playback-control.js"}