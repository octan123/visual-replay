{"version":3,"sources":["../../../src/components/stream-settings-panel.js"],"names":["React","PureComponent","PropTypes","Form","CheckBox","evaluateStyle","styled","connectToLog","Badge","div","props","content","type","userStyle","getParentKey","streamName","i","indexOf","slice","getParentValue","children","values","parentValue","key","value","INDETERMINATE","createFormData","metadata","opts","root","style","collapsible","parentKey","siblings","badge","primitive_type","scalar_type","title","replace","settingsToFormValues","data","settings","ON","OFF","updateFormValues","oldValues","newValues","formValuesToSettings","StreamSettingsPanel","constructor","streamsMetadata","log","onSettingsChange","state","updateStreamSettings","streamSettings","componentWillReceiveProps","nextProps","setState","render","_onValuesChange","object","func","getLogState","getStreamsMetadata","getStreamSettings","Component"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {Form, CheckBox, evaluateStyle} from '@streetscape.gl/monochrome';\nimport styled from '@emotion/styled';\n\nimport connectToLog from './connect';\n\nconst Badge = styled.div(props => ({\n  '&:before': {\n    content: `\"${props.type || ''}\"`\n  },\n  ...evaluateStyle(props.userStyle, props)\n}));\n\nfunction getParentKey(streamName) {\n  const i = streamName.indexOf('/', 1);\n  if (i > 1) {\n    return streamName.slice(0, i);\n  }\n  return '';\n}\n\nfunction getParentValue(children, values) {\n  let parentValue = null;\n  for (const key in children) {\n    const value = values[key];\n    if (parentValue === null) {\n      parentValue = value;\n    } else if (parentValue !== value) {\n      return CheckBox.INDETERMINATE;\n    }\n  }\n  return parentValue;\n}\n\n// Created 1-level nested form structure\nexport function createFormData(metadata, opts) {\n  if (!metadata) {\n    return null;\n  }\n\n  const root = {};\n  const {style = {}, collapsible = false} = opts;\n\n  for (const streamName in metadata) {\n    const parentKey = getParentKey(streamName);\n    let siblings = root;\n\n    if (parentKey) {\n      root[parentKey] = root[parentKey] || {\n        type: 'checkbox',\n        children: {},\n        collapsible,\n        badge: (\n          <Badge\n            userStyle={style.badge}\n            type={\n              (metadata[streamName] && metadata[streamName].primitive_type) ||\n              metadata[streamName].scalar_type\n            }\n          />\n        )\n      };\n      siblings = root[parentKey].children;\n    }\n\n    if (!siblings[streamName]) {\n      siblings[streamName] = {\n        type: 'checkbox',\n        title: streamName.replace(parentKey, ''),\n        badge: (\n          <Badge\n            userStyle={style.badge}\n            type={metadata[streamName].primitive_type || metadata[streamName].scalar_type}\n          />\n        )\n      };\n    }\n  }\n\n  return root;\n}\n\nexport function settingsToFormValues(data, settings) {\n  if (!data || !settings) {\n    return null;\n  }\n\n  const values = {};\n  for (const key in data) {\n    const {children} = data[key];\n    if (children) {\n      // is parent\n      for (const streamName in children) {\n        values[streamName] = settings[streamName] ? CheckBox.ON : CheckBox.OFF;\n      }\n      values[key] = getParentValue(children, values);\n    } else {\n      // is leaf\n      values[key] = settings[key] ? CheckBox.ON : CheckBox.OFF;\n    }\n  }\n  return values;\n}\n\nexport function updateFormValues(data, oldValues, newValues) {\n  const values = {...oldValues, ...newValues};\n  for (const key in newValues) {\n    if (data[key] && data[key].children) {\n      // is parent, reset child values\n      for (const streamName in data[key].children) {\n        values[streamName] = newValues[key];\n      }\n    } else {\n      // is leaf, re-evaluate parent value\n      const parentKey = getParentKey(key);\n      if (parentKey) {\n        values[parentKey] = getParentValue(data[parentKey].children, values);\n      }\n    }\n  }\n  return values;\n}\n\nexport function formValuesToSettings(metadata, values) {\n  const settings = {};\n  for (const streamName in metadata) {\n    settings[streamName] = values[streamName] === CheckBox.ON;\n  }\n  return settings;\n}\n\nclass StreamSettingsPanel extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    streamsMetadata: PropTypes.object,\n    onSettingsChange: PropTypes.func\n  };\n\n  static defaultProps = {\n    style: {},\n    onSettingsChange: () => {}\n  };\n\n  constructor(props) {\n    super(props);\n\n    const data = createFormData(props.streamsMetadata, props);\n    const values = settingsToFormValues(data, props.streamSettings);\n    this.state = {data, values};\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let {data, values} = this.state;\n\n    if (nextProps.streamsMetadata !== this.props.streamsMetadata) {\n      data = createFormData(nextProps.streamsMetadata, nextProps);\n      values = null;\n    }\n    if (nextProps.streamSettings !== this.props.streamSettings) {\n      values = settingsToFormValues(data, nextProps.streamSettings);\n    }\n    this.setState({data, values});\n  }\n\n  _onValuesChange = newValues => {\n    const {streamsMetadata, log, onSettingsChange} = this.props;\n    const {data} = this.state;\n    const values = updateFormValues(data, this.state.values, newValues);\n    const settings = formValuesToSettings(streamsMetadata, values);\n\n    if (!onSettingsChange(settings) && log) {\n      log.updateStreamSettings(settings);\n    }\n  };\n\n  render() {\n    const {style} = this.props;\n    const {data, values} = this.state;\n\n    if (!data || !values) {\n      return null;\n    }\n\n    return <Form style={style} data={data} values={values} onChange={this._onValuesChange} />;\n  }\n}\n\nconst getLogState = log => ({\n  streamsMetadata: log.getStreamsMetadata(),\n  streamSettings: log.getStreamSettings()\n});\n\nexport default connectToLog({getLogState, Component: StreamSettingsPanel});\n"],"file":"stream-settings-panel.js"}