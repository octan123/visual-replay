{"version":3,"sources":["../../../../src/components/playback-control/index.js"],"names":["React","PureComponent","PropTypes","getXVIZConfig","DualPlaybackControl","connectToLog","TIME_SCALES","seconds","milliseconds","PlaybackControl","isPlaying","timeScale","TIMESTAMP_FORMAT","props","onPlay","setState","onPause","timestamp","_onTimeChange","state","_onPause","log","onSeek","seek","lookAhead","onLookAheadChange","setLookAhead","now","Date","startTime","endTime","buffered","lastUpdate","_lastAnimationUpdate","PLAYBACK_FRAME_RATE","TIME_WINDOW","timeDeltaMs","Math","min","newTimestamp","some","r","_animationFrame","window","requestAnimationFrame","_animate","x","formatter","deltaTimeS","formatTimeCode","_formatTime","formatTick","formatTimestamp","formatLookAhead","componentWillReceiveProps","nextProps","Boolean","componentDidUpdate","prevProps","prevState","componentWillUnmount","cancelAnimationFrame","render","otherProps","Number","isFinite","bufferRange","map","max","_formatTick","_formatTimestamp","_formatLookAhead","_onSeek","_onPlay","_onLookAheadChange","number","array","bool","width","oneOfType","string","style","object","compact","className","step","padding","tickSpacing","markers","arrayOf","func","maxLookAhead","defaultProps","getLogState","getCurrentTime","getLookAhead","getLogStartTime","getLogEndTime","getBufferedTimeRanges","Component"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* global window */\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {getXVIZConfig} from '@xviz/parser';\nimport DualPlaybackControl from './dual-playback-control';\n\nimport connectToLog from '../connect';\n\nconst TIME_SCALES = {\n  seconds: 0.001,\n  milliseconds: 1\n};\n\nclass PlaybackControl extends PureComponent {\n  static propTypes = {\n    // from log\n    timestamp: PropTypes.number,\n    lookAhead: PropTypes.number,\n    startTime: PropTypes.number,\n    endTime: PropTypes.number,\n    buffered: PropTypes.array,\n\n    // state override\n    isPlaying: PropTypes.bool,\n\n    // config\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    style: PropTypes.object,\n    compact: PropTypes.bool,\n    className: PropTypes.string,\n    step: PropTypes.number,\n    padding: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n    tickSpacing: PropTypes.number,\n    markers: PropTypes.arrayOf(PropTypes.object),\n    formatTick: PropTypes.func,\n    formatTimestamp: PropTypes.func,\n    // dual playback control config\n    maxLookAhead: PropTypes.number,\n    formatLookAhead: PropTypes.func,\n\n    // callbacks\n    onPlay: PropTypes.func,\n    onPause: PropTypes.func,\n    onSeek: PropTypes.func,\n    onLookAheadChange: PropTypes.func\n  };\n\n  static defaultProps = DualPlaybackControl.defaultProps;\n\n  state = {\n    isPlaying: false,\n    timeScale: TIME_SCALES[getXVIZConfig().TIMESTAMP_FORMAT] || 1\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if ('isPlaying' in nextProps) {\n      this.setState({isPlaying: Boolean(nextProps.isPlaying)});\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {isPlaying} = this.state;\n    if (isPlaying && prevState.isPlaying !== isPlaying) {\n      this._lastAnimationUpdate = Date.now();\n      this._animationFrame = window.requestAnimationFrame(this._animate);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n    }\n  }\n\n  _animationFrame = null;\n  _lastAnimationUpdate = -1;\n\n  _onPlay = () => {\n    this.props.onPlay();\n    this.setState({isPlaying: true});\n  };\n\n  _onPause = () => {\n    this.props.onPause();\n    this.setState({isPlaying: false});\n  };\n\n  _onSeek = timestamp => {\n    this._onTimeChange(timestamp);\n\n    if (this.state.isPlaying) {\n      this._onPause();\n    }\n  };\n\n  _onTimeChange = timestamp => {\n    const {log, onSeek} = this.props;\n    if (!onSeek(timestamp) && log) {\n      log.seek(timestamp);\n    }\n  };\n\n  _onLookAheadChange = lookAhead => {\n    const {log, onLookAheadChange} = this.props;\n    if (!onLookAheadChange(lookAhead) && log) {\n      log.setLookAhead(lookAhead);\n    }\n  };\n\n  _animate = () => {\n    if (this.state.isPlaying) {\n      const now = Date.now();\n      const {startTime, endTime, buffered, timestamp} = this.props;\n      const {timeScale} = this.state;\n      const lastUpdate = this._lastAnimationUpdate;\n      const {PLAYBACK_FRAME_RATE, TIME_WINDOW} = getXVIZConfig();\n\n      // avoid skipping frames - cap delta at resolution\n      let timeDeltaMs = lastUpdate > 0 ? now - lastUpdate : 0;\n      timeDeltaMs = Math.min(timeDeltaMs, 1000 / PLAYBACK_FRAME_RATE);\n\n      let newTimestamp = timestamp + timeDeltaMs * timeScale;\n      if (newTimestamp > endTime) {\n        newTimestamp = startTime;\n      }\n\n      // check buffer availability\n      if (buffered.some(r => newTimestamp >= r[0] && newTimestamp <= r[1] + TIME_WINDOW)) {\n        // only move forward if buffer is loaded\n        // otherwise pause and wait\n        this._onTimeChange(newTimestamp);\n      }\n\n      this._lastAnimationUpdate = now;\n      this._animationFrame = window.requestAnimationFrame(this._animate);\n    }\n  };\n\n  _formatTime = (x, formatter = null) => {\n    const {startTime} = this.props;\n    const {timeScale} = this.state;\n\n    if (formatter) {\n      return formatter(x, startTime);\n    }\n\n    const deltaTimeS = (x - startTime) / timeScale / 1000;\n    return DualPlaybackControl.formatTimeCode(deltaTimeS, '{mm}:{ss}');\n  };\n\n  _formatTick = x => {\n    return this._formatTime(x, this.props.formatTick);\n  };\n\n  _formatTimestamp = x => {\n    return this._formatTime(x, this.props.formatTimestamp);\n  };\n\n  _formatLookAhead = x => {\n    const {formatLookAhead} = this.props;\n    const {timeScale} = this.state;\n\n    if (formatLookAhead) {\n      return formatLookAhead(x);\n    }\n\n    const deltaTimeS = x / timeScale / 1000;\n    return DualPlaybackControl.formatTimeCode(deltaTimeS, '{s}.{S}s');\n  };\n\n  render() {\n    const {startTime, endTime, timestamp, lookAhead, buffered, ...otherProps} = this.props;\n\n    if (!Number.isFinite(timestamp) || !Number.isFinite(startTime)) {\n      return null;\n    }\n\n    const bufferRange = buffered.map(r => ({\n      startTime: Math.max(r[0], startTime),\n      endTime: Math.min(r[1], endTime)\n    }));\n\n    return (\n      <DualPlaybackControl\n        {...otherProps}\n        bufferRange={bufferRange}\n        currentTime={timestamp}\n        lookAhead={lookAhead}\n        startTime={startTime}\n        endTime={endTime}\n        isPlaying={this.state.isPlaying}\n        formatTick={this._formatTick}\n        formatTimestamp={this._formatTimestamp}\n        formatLookAhead={this._formatLookAhead}\n        onSeek={this._onSeek}\n        onPlay={this._onPlay}\n        onPause={this._onPause}\n        onLookAheadChange={this._onLookAheadChange}\n      />\n    );\n  }\n}\n\nconst getLogState = log => ({\n  timestamp: log.getCurrentTime(),\n  lookAhead: log.getLookAhead(),\n  startTime: log.getLogStartTime(),\n  endTime: log.getLogEndTime(),\n  buffered: log.getBufferedTimeRanges()\n});\n\nexport default connectToLog({getLogState, Component: PlaybackControl});\n"],"file":"index.js"}