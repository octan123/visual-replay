{"version":3,"sources":["../../../src/cars/utils.js"],"names":["mirrorMesh","indices","positions","normals","indexSize","length","vertexSize","vertexCount","indices2","Uint16Array","positions2","Float32Array","normals2","set","i"],"mappings":"AAqBA,OAAO,SAASA,UAAT,CAAoB;AAACC,EAAAA,OAAD;AAAUC,EAAAA,SAAV;AAAqBC,EAAAA;AAArB,CAApB,EAAmD;AACxD,QAAMC,SAAS,GAAGH,OAAO,CAACI,MAA1B;AACA,QAAMC,UAAU,GAAGJ,SAAS,CAACG,MAA7B;AACA,QAAME,WAAW,GAAGD,UAAU,GAAG,CAAjC;AAEA,QAAME,QAAQ,GAAG,IAAIC,WAAJ,CAAgBL,SAAS,GAAG,CAA5B,CAAjB;AACA,QAAMM,UAAU,GAAG,IAAIC,YAAJ,CAAiBL,UAAU,GAAG,CAA9B,CAAnB;AACA,QAAMM,QAAQ,GAAG,IAAID,YAAJ,CAAiBL,UAAU,GAAG,CAA9B,CAAjB;AAEAE,EAAAA,QAAQ,CAACK,GAAT,CAAaZ,OAAb;AACAO,EAAAA,QAAQ,CAACK,GAAT,CAAaZ,OAAb,EAAsBG,SAAtB;AACAM,EAAAA,UAAU,CAACG,GAAX,CAAeX,SAAf;AACAQ,EAAAA,UAAU,CAACG,GAAX,CAAeX,SAAf,EAA0BI,UAA1B;AACAM,EAAAA,QAAQ,CAACC,GAAT,CAAaV,OAAb;AACAS,EAAAA,QAAQ,CAACC,GAAT,CAAaV,OAAb,EAAsBG,UAAtB;;AAGA,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,UAApB,EAAgCQ,CAAC,IAAI,CAArC,EAAwC;AACtCJ,IAAAA,UAAU,CAACI,CAAC,GAAG,CAAL,CAAV,IAAqB,CAAC,CAAtB;AACAF,IAAAA,QAAQ,CAACE,CAAC,GAAG,CAAL,CAAR,IAAmB,CAAC,CAApB;AACD;;AAED,OAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,SAApB,EAA+BU,CAAC,EAAhC,EAAoC;AAClCN,IAAAA,QAAQ,CAACM,CAAD,CAAR,IAAeP,WAAf;AACD;;AACD,SAAO;AAACN,IAAAA,OAAO,EAAEO,QAAV;AAAoBN,IAAAA,SAAS,EAAEQ,UAA/B;AAA2CP,IAAAA,OAAO,EAAES;AAApD,GAAP;AACD","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// The default mesh is only half a car. Flip Y and append to the vertices.\nexport function mirrorMesh({indices, positions, normals}) {\n  const indexSize = indices.length;\n  const vertexSize = positions.length;\n  const vertexCount = vertexSize / 3;\n\n  const indices2 = new Uint16Array(indexSize * 2);\n  const positions2 = new Float32Array(vertexSize * 2);\n  const normals2 = new Float32Array(vertexSize * 2);\n\n  indices2.set(indices);\n  indices2.set(indices, indexSize);\n  positions2.set(positions);\n  positions2.set(positions, vertexSize);\n  normals2.set(normals);\n  normals2.set(normals, vertexSize);\n\n  // Flip y\n  for (let i = 0; i < vertexSize; i += 3) {\n    positions2[i + 1] *= -1;\n    normals2[i + 1] *= -1;\n  }\n  // Indices for the 2nd half\n  for (let i = 0; i < indexSize; i++) {\n    indices2[i] += vertexCount;\n  }\n  return {indices: indices2, positions: positions2, normals: normals2};\n}\n"],"file":"utils.js"}