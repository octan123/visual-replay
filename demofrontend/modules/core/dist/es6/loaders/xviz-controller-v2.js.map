{"version":3,"sources":["../../../src/loaders/xviz-controller-v2.js"],"names":["assert","XVIZControllerV2","constructor","socket","transformCounter","_send","type","message","msg","data","send","JSON","stringify","transformLog","startTimestamp","endTimestamp","start_timestamp","end_timestamp","id"],"mappings":"AAoBA,OAAOA,MAAP,MAAmB,QAAnB;AAkBA,eAAe,MAAMC,gBAAN,CAAuB;AACpCC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClBH,IAAAA,MAAM,CAACG,MAAD,EAAS,aAAT,CAAN;AACA,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,gBAAL,GAAwB,CAAxB;AACD;;AAEDC,EAAAA,KAAK,CAACC,IAAD,EAAOC,OAAP,EAAgB;AAEnB,UAAMC,GAAG,GAAG;AAACF,MAAAA,IAAI,iBAAUA,IAAV,CAAL;AAAuBG,MAAAA,IAAI,EAAEF;AAA7B,KAAZ;AACA,SAAKJ,MAAL,CAAYO,IAAZ,CAAiBC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAjB;AACD;;AAEDK,EAAAA,YAAY,CAAC;AAACC,IAAAA,cAAD;AAAiBC,IAAAA;AAAjB,MAAiC,EAAlC,EAAsC;AAChD,UAAMP,GAAG,GAAG,EAAZ;;AACA,QAAIM,cAAJ,EAAoB;AAClBN,MAAAA,GAAG,CAACQ,eAAJ,GAAsBF,cAAtB;AACD;;AAED,QAAIC,YAAJ,EAAkB;AAChBP,MAAAA,GAAG,CAACS,aAAJ,GAAoBF,YAApB;AACD;;AAGDP,IAAAA,GAAG,CAACU,EAAJ,aAAY,KAAKd,gBAAjB;AACA,SAAKA,gBAAL;;AAEA,SAAKC,KAAL,CAAW,eAAX,EAA4BG,GAA5B;AACD;;AA5BmC","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport assert from 'assert';\n\n/* XVIZ Controller\n *\n * XVIZController should present a uniform base object interface (as much as possible)\n * such that application logic doesn't need to know the difference between the protocols.\n *\n * Intention is to add bi-directional protocol concepts:\n *  - stop\n *  - seek\n *  - pause\n *  ...\n */\n\n/* XVIZControllerV1\n *\n * XVIZ v1 handler that opens the log on connetion and closes when 'done' is received.\n */\nexport default class XVIZControllerV2 {\n  constructor(socket) {\n    assert(socket, 'XVIZ socket');\n    this.socket = socket;\n    this.transformCounter = 0;\n  }\n\n  _send(type, message) {\n    // TODO(twojtasz): change to @xviz/io\n    const msg = {type: `xviz/${type}`, data: message};\n    this.socket.send(JSON.stringify(msg));\n  }\n\n  transformLog({startTimestamp, endTimestamp} = {}) {\n    const msg = {};\n    if (startTimestamp) {\n      msg.start_timestamp = startTimestamp; // eslint-disable-line camelcase\n    }\n\n    if (endTimestamp) {\n      msg.end_timestamp = endTimestamp; // eslint-disable-line camelcase\n    }\n\n    // Add in a sequential id\n    msg.id = `${this.transformCounter}`;\n    this.transformCounter++;\n\n    this._send('transform_log', msg);\n  }\n}\n"],"file":"xviz-controller-v2.js"}