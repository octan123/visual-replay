{"version":3,"sources":["../../../../src/shared/radio-box/index.js"],"names":["React","PureComponent","PropTypes","styled","withTheme","evaluateStyle","RadioBoxItem","WrapperComponent","div","props","theme","__reset__","color","isEnabled","textColorPrimary","textColorDisabled","userStyle","RadioBox","value","onChange","render","className","style","data","size","controlSize","styleProps","wrapper","Object","keys","map","key","_onClick","string","isRequired","func","object","bool"],"mappings":";;;;;;;AAmBA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAAQC,SAAR,EAAmBC,aAAnB,QAAuC,UAAvC;AAEA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,MAAMC,gBAAgB,GAAGJ,MAAM,CAACK,GAAP,CAAWC,KAAK,oCACpCA,KAAK,CAACC,KAAN,CAAYC,SADwB;AAEvCC,EAAAA,KAAK,EAAEH,KAAK,CAACI,SAAN,GAAkBJ,KAAK,CAACC,KAAN,CAAYI,gBAA9B,GAAiDL,KAAK,CAACC,KAAN,CAAYK;AAF7B,GAGpCV,aAAa,CAACI,KAAK,CAACO,SAAP,EAAkBP,KAAlB,CAHuB,CAAhB,CAAzB;;AAQA,MAAMQ,QAAN,SAAuBhB,aAAvB,CAAqC;AAAA;AAAA;;AAAA,sCAiBxBiB,KAAK,IAAI;AAClB,WAAKT,KAAL,CAAWU,QAAX,CAAoBD,KAApB;AACD,KAnBkC;AAAA;;AAqBnCE,EAAAA,MAAM,GAAG;AACP,UAAM;AAACV,MAAAA,KAAD;AAAQW,MAAAA,SAAR;AAAmBC,MAAAA,KAAnB;AAA0BC,MAAAA,IAA1B;AAAgCL,MAAAA,KAAhC;AAAuCL,MAAAA;AAAvC,QAAoD,KAAKJ,KAA/D;AAEA,UAAM;AAACe,MAAAA,IAAI,GAAGd,KAAK,CAACe;AAAd,QAA6BH,KAAnC;AAEA,UAAMI,UAAU,GAAG;AACjBhB,MAAAA,KADiB;AAEjBc,MAAAA,IAFiB;AAGjBN,MAAAA,KAHiB;AAIjBL,MAAAA;AAJiB,KAAnB;AAOA,WACE,oBAAC,gBAAD;AAAkB,MAAA,SAAS,EAAEQ;AAA7B,OAA4CK,UAA5C;AAAwD,MAAA,SAAS,EAAEJ,KAAK,CAACK;AAAzE,QACGC,MAAM,CAACC,IAAP,CAAYN,IAAZ,EAAkBO,GAAlB,CAAsBC,GAAG,IACxB,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,KAAK,EAAER,IAAI,CAACQ,GAAD,CAFb;AAGE,MAAA,KAAK,EAAErB,KAHT;AAIE,MAAA,IAAI,EAAEc,IAJR;AAKE,MAAA,KAAK,EAAEF,KALT;AAME,MAAA,UAAU,EAAES,GAAG,KAAKb,KANtB;AAOE,MAAA,SAAS,EAAEL,SAPb;AAQE,MAAA,OAAO,EAAE,MAAM,KAAKmB,QAAL,CAAcD,GAAd;AARjB,MADD,CADH,CADF;AAgBD;;AAjDkC;;gBAA/Bd,Q,eACe;AACjBC,EAAAA,KAAK,EAAEhB,SAAS,CAAC+B,MAAV,CAAiBC,UADP;AAEjBf,EAAAA,QAAQ,EAAEjB,SAAS,CAACiC,IAFH;AAGjBZ,EAAAA,IAAI,EAAErB,SAAS,CAACkC,MAAV,CAAiBF,UAHN;AAIjBb,EAAAA,SAAS,EAAEnB,SAAS,CAAC+B,MAJJ;AAKjBX,EAAAA,KAAK,EAAEpB,SAAS,CAACkC,MALA;AAMjBvB,EAAAA,SAAS,EAAEX,SAAS,CAACmC;AANJ,C;;gBADfpB,Q,kBAUkB;AACpBI,EAAAA,SAAS,EAAE,EADS;AAEpBC,EAAAA,KAAK,EAAE,EAFa;AAGpBT,EAAAA,SAAS,EAAE,IAHS;AAIpBM,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAJE,C;;AA0CxB,eAAef,SAAS,CAACa,QAAD,CAAxB","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from '@emotion/styled';\nimport {withTheme, evaluateStyle} from '../theme';\n\nimport RadioBoxItem from './radio-box-item';\n\nconst WrapperComponent = styled.div(props => ({\n  ...props.theme.__reset__,\n  color: props.isEnabled ? props.theme.textColorPrimary : props.theme.textColorDisabled,\n  ...evaluateStyle(props.userStyle, props)\n}));\n\n// Select component that takes an array and accessors and populates a\n// radio inputs group\nclass RadioBox extends PureComponent {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func,\n    data: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    isEnabled: PropTypes.bool\n  };\n\n  static defaultProps = {\n    className: '',\n    style: {},\n    isEnabled: true,\n    onChange: () => {}\n  };\n\n  _onClick = value => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const {theme, className, style, data, value, isEnabled} = this.props;\n\n    const {size = theme.controlSize} = style;\n\n    const styleProps = {\n      theme,\n      size,\n      value,\n      isEnabled\n    };\n\n    return (\n      <WrapperComponent className={className} {...styleProps} userStyle={style.wrapper}>\n        {Object.keys(data).map(key => (\n          <RadioBoxItem\n            key={key}\n            label={data[key]}\n            theme={theme}\n            size={size}\n            style={style}\n            isSelected={key === value}\n            isEnabled={isEnabled}\n            onClick={() => this._onClick(key)}\n          />\n        ))}\n      </WrapperComponent>\n    );\n  }\n}\n\nexport default withTheme(RadioBox);\n"],"file":"index.js"}