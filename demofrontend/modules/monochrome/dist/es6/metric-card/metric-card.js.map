{"version":3,"sources":["../../../src/metric-card/metric-card.js"],"names":["React","PureComponent","PropTypes","Spinner","Tooltip","withTheme","CardContainer","CardTitle","ErrorMessage","MetricCard","render","theme","style","error","isLoading","className","title","description","props","styleProps","hasError","Boolean","wrapper","tooltip","children","spinner","string","oneOfType","element","object","bool"],"mappings":";;AAmBA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AAEA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,SAAQC,aAAR,EAAuBC,SAAvB,EAAkCC,YAAlC,QAAqD,qBAArD;;AAMA,MAAMC,UAAN,SAAyBR,aAAzB,CAAuC;AAuBrCS,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,KAAf;AAAsBC,MAAAA,SAAtB;AAAiCC,MAAAA,SAAjC;AAA4CC,MAAAA,KAA5C;AAAmDC,MAAAA;AAAnD,QAAkE,KAAKC,KAA7E;AACA,UAAMC,UAAU,GAAG;AACjBR,MAAAA,KADiB;AAEjBS,MAAAA,QAAQ,EAAEC,OAAO,CAACR,KAAD,CAFA;AAGjBC,MAAAA;AAHiB,KAAnB;AAMA,WACE,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAEC;AAA1B,OAAyCI,UAAzC;AAAqD,MAAA,SAAS,EAAEP,KAAK,CAACU;AAAtE,QACGN,KAAK,IACJ,oBAAC,SAAD,eAAeG,UAAf;AAA2B,MAAA,SAAS,EAAEP,KAAK,CAACI;AAA5C,QACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEJ,KAAK,CAACW,OAAtB;AAA+B,MAAA,OAAO,EAAEN;AAAxC,OACGD,KADH,CADF,CAFJ,EASG,CAACF,SAAD,IAAc,CAACD,KAAf,IAAwB,KAAKK,KAAL,CAAWM,QATtC,EAUGV,SAAS,IAAI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEF,KAAK,CAACa;AAAtB,MAVhB,EAWGZ,KAAK,IACJ,oBAAC,YAAD,eAAkBM,UAAlB;AAA8B,MAAA,SAAS,EAAEP,KAAK,CAACC;AAA/C,QACGA,KADH,CAZJ,CADF;AAmBD;;AAlDoC;;gBAAjCJ,U,eACe;AACjBM,EAAAA,SAAS,EAAEb,SAAS,CAACwB,MADJ;AAEjBV,EAAAA,KAAK,EAAEd,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAACwB,MAAX,EAAmBxB,SAAS,CAAC0B,OAA7B,CAApB,CAFU;AAGjBX,EAAAA,WAAW,EAAEf,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAACwB,MAAX,EAAmBxB,SAAS,CAAC0B,OAA7B,CAApB,CAHI;AAKjBhB,EAAAA,KAAK,EAAEV,SAAS,CAAC2B,MALA;AAMjBhB,EAAAA,KAAK,EAAEX,SAAS,CAACwB,MANA;AAOjBZ,EAAAA,SAAS,EAAEZ,SAAS,CAAC4B,IAPJ;AASjBN,EAAAA,QAAQ,EAAEtB,SAAS,CAAC0B;AATH,C;;gBADfnB,U,kBAakB;AACpBM,EAAAA,SAAS,EAAE,EADS;AAEpBC,EAAAA,KAAK,EAAE,EAFa;AAGpBC,EAAAA,WAAW,EAAE,EAHO;AAKpBL,EAAAA,KAAK,EAAE,EALa;AAMpBC,EAAAA,KAAK,EAAE,IANa;AAOpBC,EAAAA,SAAS,EAAE;AAPS,C;;AAwCxB,eAAeT,SAAS,CAACI,UAAD,CAAxB","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../shared/spinner';\nimport {Tooltip} from '../shared/popover';\n\nimport {withTheme} from '../shared/theme';\nimport {CardContainer, CardTitle, ErrorMessage} from './styled-components';\n\n/**\n * MetricCard places a chart in a container with padding, title,\n * selection marker etc\n */\nclass MetricCard extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    description: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\n    style: PropTypes.object,\n    error: PropTypes.string,\n    isLoading: PropTypes.bool,\n\n    children: PropTypes.element\n  };\n\n  static defaultProps = {\n    className: '',\n    title: '',\n    description: '',\n\n    style: {},\n    error: null,\n    isLoading: false\n  };\n\n  render() {\n    const {theme, style, error, isLoading, className, title, description} = this.props;\n    const styleProps = {\n      theme,\n      hasError: Boolean(error),\n      isLoading\n    };\n\n    return (\n      <CardContainer className={className} {...styleProps} userStyle={style.wrapper}>\n        {title && (\n          <CardTitle {...styleProps} userStyle={style.title}>\n            <Tooltip style={style.tooltip} content={description}>\n              {title}\n            </Tooltip>\n          </CardTitle>\n        )}\n\n        {!isLoading && !error && this.props.children}\n        {isLoading && <Spinner style={style.spinner} />}\n        {error && (\n          <ErrorMessage {...styleProps} userStyle={style.error}>\n            {error}\n          </ErrorMessage>\n        )}\n      </CardContainer>\n    );\n  }\n}\n\nexport default withTheme(MetricCard);\n"],"file":"metric-card.js"}