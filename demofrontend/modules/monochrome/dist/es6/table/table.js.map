{"version":3,"sources":["../../../src/table/table.js"],"names":["React","PureComponent","PropTypes","AutoSizer","List","CellMeasurer","CellMeasurerCache","withTheme","memoize","TableHeader","TableRow","WrapperComponent","TableBody","Table","constructor","props","columns","setState","_forceUpdate","sortFunc","rows","formatRows","state","sort","_list","_cache","clearAll","forceUpdateGrid","key","parent","index","style","_renderRow","_formatRows","fixedWidth","componentDidUpdate","prevProps","map","row","rowIndex","srcObject","data","children","id","String","renderCell","theme","userStyle","_renderBody","width","height","list","length","rowHeight","_renderRowMeasurer","render","renderHeader","wrapper","_onSort","_onHeaderResize","body","bind","oneOfType","string","number","object","array","func","column","name","value"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport List from 'react-virtualized/dist/commonjs/List';\nimport CellMeasurer, {CellMeasurerCache} from 'react-virtualized/dist/commonjs/CellMeasurer';\n\nimport {withTheme} from '../shared/theme';\nimport memoize from '../utils/memoize';\n\nimport TableHeader from './table-header';\nimport TableRow from './table-row';\nimport {WrapperComponent, TableBody} from './styled-components';\n\nexport class Table extends PureComponent {\n  static propTypes = {\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    style: PropTypes.object,\n    columns: PropTypes.array,\n    rows: PropTypes.array,\n    renderHeader: PropTypes.func,\n    renderCell: PropTypes.func\n  };\n\n  static defaultProps = {\n    width: '100%',\n    height: 400,\n    style: {},\n    rows: [],\n    renderHeader: ({column}) => column.name,\n    renderCell: ({value}) => (value === null ? null : String(value))\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columns: null,\n      sortFunc: null\n    };\n\n    this.formatRows = memoize(this._formatRows);\n    this._cache = new CellMeasurerCache({fixedWidth: true});\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.rows !== prevProps.rows) {\n      this._forceUpdate();\n    }\n  }\n\n  _formatRows(rows, sortFunc) {\n    rows = rows.map((row, rowIndex) => ({\n      srcObject: row,\n      data: row.data,\n      children: row.children,\n      id: String(rowIndex)\n    }));\n\n    if (sortFunc) {\n      rows.sort(sortFunc);\n    }\n\n    return rows;\n  }\n\n  _onHeaderResize = columns => {\n    this.setState({columns}, this._forceUpdate);\n  };\n\n  _onSort = sortFunc => {\n    const rows = this.formatRows(this.props.rows, this.state.sortFunc);\n\n    if (sortFunc) {\n      rows.sort(sortFunc);\n    }\n\n    this.setState({sortFunc});\n    this._forceUpdate();\n  };\n\n  _forceUpdate = () => {\n    if (this._list) {\n      this._cache.clearAll();\n      this._list.forceUpdateGrid();\n    }\n  };\n\n  _renderRow({key, index, style}) {\n    const {renderCell, theme, style: userStyle} = this.props;\n    const rows = this.formatRows(this.props.rows, this.state.sortFunc);\n    const row = rows[index];\n\n    return (\n      <TableRow\n        key={key}\n        id={row.id}\n        index={index}\n        data={row}\n        style={style}\n        theme={theme}\n        userStyle={userStyle}\n        renderCell={renderCell}\n        columns={this.state.columns}\n      />\n    );\n  }\n\n  _renderRowMeasurer = ({key, parent, index, style}) => {\n    return (\n      <CellMeasurer cache={this._cache} parent={parent} key={key} rowIndex={index} collumnIndex={0}>\n        {() => this._renderRow({key, index, style})}\n      </CellMeasurer>\n    );\n  };\n\n  // AutoSizer is a pure component. By default child function is only called if dimensions change.\n  // Rebind this function every render to respond to state change\n  _renderBody({width, height}) {\n    const {columns} = this.state;\n    const rows = this.formatRows(this.props.rows, this.state.sortFunc);\n\n    if (!columns) {\n      return null;\n    }\n\n    return (\n      <List\n        ref={list => {\n          this._list = list;\n        }}\n        tabIndex={null}\n        height={height}\n        rowCount={rows.length}\n        rowHeight={this._cache.rowHeight}\n        rowRenderer={this._renderRowMeasurer}\n        width={width}\n      />\n    );\n  }\n\n  render() {\n    const {theme, width, height, style, columns, renderHeader} = this.props;\n\n    return (\n      <WrapperComponent style={{width, height}} theme={theme} userStyle={style.wrapper}>\n        <TableHeader\n          theme={theme}\n          userStyle={style}\n          columns={columns}\n          renderHeader={renderHeader}\n          onSort={this._onSort}\n          onResize={this._onHeaderResize}\n        />\n\n        <TableBody theme={theme} userStyle={style.body}>\n          <AutoSizer>{this._renderBody.bind(this)}</AutoSizer>\n        </TableBody>\n      </WrapperComponent>\n    );\n  }\n}\n\nexport default withTheme(Table);\n"],"file":"table.js"}