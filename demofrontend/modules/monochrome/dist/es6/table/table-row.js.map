{"version":3,"sources":["../../../src/table/table-row.js"],"names":["React","PureComponent","PropTypes","TableRowComponent","TableCell","TableRow","render","id","index","data","theme","userStyle","columns","style","renderCell","props","row","map","colValue","colIndex","column","width","name","cell","value","srcObject","columnIndex","rowId","string","shape","array","object","func"],"mappings":";AAmBA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAAQC,iBAAR,EAA2BC,SAA3B,QAA2C,qBAA3C;AAKA,eAAe,MAAMC,QAAN,SAAuBJ,aAAvB,CAAqC;AAWlDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,EAAD;AAAKC,MAAAA,KAAL;AAAYC,MAAAA,IAAZ;AAAkBC,MAAAA,KAAlB;AAAyBC,MAAAA,SAAzB;AAAoCC,MAAAA,OAApC;AAA6CC,MAAAA,KAA7C;AAAoDC,MAAAA;AAApD,QAAkE,KAAKC,KAA7E;AAEA,WACE;AAAK,MAAA,KAAK,EAAEF;AAAZ,OACE,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAEH,KAA1B;AAAiC,MAAA,KAAK,EAAEF,KAAxC;AAA+C,MAAA,SAAS,EAAEG,SAAS,CAACK;AAApE,OACGP,IAAI,CAACA,IAAL,CAAUQ,GAAV,CAAc,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACrC,YAAMC,MAAM,GAAGR,OAAO,CAACO,QAAD,CAAtB;AAEA,aACE,oBAAC,SAAD;AACE,QAAA,GAAG,EAAEA,QADP;AAEE,QAAA,KAAK,EAAEA,QAFT;AAGE,QAAA,KAAK,EAAE;AAACE,UAAAA,KAAK,EAAED,MAAM,CAACC;AAAf,SAHT;AAIE,QAAA,KAAK,YAAKD,MAAM,CAACE,IAAZ,eAAqBJ,QAArB,CAJP;AAKE,QAAA,KAAK,EAAER,KALT;AAME,QAAA,SAAS,EAAEC,SAAS,CAACY;AANvB,SAQGT,UAAU,CAAC;AACVU,QAAAA,KAAK,EAAEN,QADG;AAEVE,QAAAA,MAAM,EAAEA,MAAM,CAACK,SAFL;AAGVC,QAAAA,WAAW,EAAEP,QAHH;AAIVH,QAAAA,GAAG,EAAEP,IAAI,CAACgB,SAJA;AAKVE,QAAAA,KAAK,EAAEpB;AALG,OAAD,CARb,CADF;AAkBD,KArBA,CADH,CADF,CADF;AA4BD;;AA1CiD;;gBAA/BF,Q,eACA;AACjBE,EAAAA,EAAE,EAAEL,SAAS,CAAC0B,MADG;AAEjBnB,EAAAA,IAAI,EAAEP,SAAS,CAAC2B,KAAV,CAAgB;AACpBpB,IAAAA,IAAI,EAAEP,SAAS,CAAC4B;AADI,GAAhB,CAFW;AAKjBjB,EAAAA,KAAK,EAAEX,SAAS,CAAC6B,MALA;AAMjBjB,EAAAA,UAAU,EAAEZ,SAAS,CAAC8B,IANL;AAOjBpB,EAAAA,OAAO,EAAEV,SAAS,CAAC4B;AAPF,C","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {TableRowComponent, TableCell} from './styled-components';\n\n/**\n * A stateless component that renders a data row in the Table component\n */\nexport default class TableRow extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.shape({\n      data: PropTypes.array\n    }),\n    style: PropTypes.object,\n    renderCell: PropTypes.func,\n    columns: PropTypes.array\n  };\n\n  render() {\n    const {id, index, data, theme, userStyle, columns, style, renderCell} = this.props;\n\n    return (\n      <div style={style}>\n        <TableRowComponent theme={theme} index={index} userStyle={userStyle.row}>\n          {data.data.map((colValue, colIndex) => {\n            const column = columns[colIndex];\n\n            return (\n              <TableCell\n                key={colIndex}\n                index={colIndex}\n                style={{width: column.width}}\n                title={`${column.name}: ${colValue}`}\n                theme={theme}\n                userStyle={userStyle.cell}\n              >\n                {renderCell({\n                  value: colValue,\n                  column: column.srcObject,\n                  columnIndex: colIndex,\n                  row: data.srcObject,\n                  rowId: id\n                })}\n              </TableCell>\n            );\n          })}\n        </TableRowComponent>\n      </div>\n    );\n  }\n}\n"],"file":"table-row.js"}