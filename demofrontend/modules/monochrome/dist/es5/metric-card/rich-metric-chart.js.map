{"version":3,"sources":["../../../src/metric-card/rich-metric-chart.js"],"names":["DEFAULT_COLORS","range","MetricChartWithLegends","props","data","formatTitle","getY","series","key","value","Array","isArray","displayName","yExtent","push","color","_getColor","extent","max","Math","abs","sort","s1","s2","state","showTopSeriesOnly","dataVisibility","dataSeries","extractDataSeries","topSeriesCount","findIndex","s","setState","hoveredSeriesName","_extractDataSeries","getColor","theme","style","slice","filter","length","filterToggle","iconCollapsed","iconExpanded","map","styleProps","name","isHovered","isActive","_isDataVisible","filterItem","_setHoveredDataName","_toggleDataVisibility","filterLegend","iconOn","iconOff","_renderDataFilters","PureComponent","Object","assign","MetricChart","propTypes","PropTypes","number","defaultProps"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {withTheme} from '../shared/theme';\nimport {ExpandedIcon, CollapsedIcon, CheckAltIcon} from '../shared/icons';\nimport MetricChart from './metric-chart';\nimport {FilterContainer, FilterToggle, FilterItem, FilterLegend} from './styled-components';\nimport memoize from '../utils/memoize';\n\nimport {scaleOrdinal} from 'd3-scale';\nimport {extent} from 'd3-array';\n\nconst DEFAULT_COLORS = scaleOrdinal().range([\n  '#12939A',\n  '#DDB27C',\n  '#88572C',\n  '#FF991F',\n  '#F15C17',\n  '#223F9A',\n  '#DA70BF',\n  '#125C77',\n  '#4DC19C',\n  '#776E57',\n  '#17B8BE',\n  '#F6D18A',\n  '#B7885E',\n  '#FFCB99',\n  '#F89570',\n  '#829AE3',\n  '#E79FD5',\n  '#1E96BE',\n  '#89DAC1',\n  '#B3AD9E'\n]);\n\n/**\n * A component that visualizes the multiple data series. Features:\n * Each data series is shown as a line series\n * Clicking on the legend toggles the visibility of that data series\n * Legends are sorted by prominence (maximum value in the look ahead window)\n * A show all/show less button to toggle only showing the top 5 data series by value\n */\nclass MetricChartWithLegends extends PureComponent {\n  static propTypes = Object.assign({}, MetricChart.propTypes, {\n    topSeriesCount: PropTypes.number\n  });\n\n  static defaultProps = Object.assign({}, MetricChart.defaultProps, {\n    topSeriesCount: 5,\n    getColor: DEFAULT_COLORS\n  });\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataVisibility: {},\n      showTopSeriesOnly: true,\n      hoveredSeriesName: null\n    };\n    this.extractDataSeries = memoize(this._extractDataSeries);\n  }\n\n  _getColor(key) {\n    const {getColor} = this.props;\n\n    switch (typeof getColor) {\n      case 'object':\n        return getColor[key];\n\n      case 'function':\n        return getColor(key);\n\n      default:\n        return getColor;\n    }\n  }\n\n  // Extract subset of streams from all variable streams\n  // Format stream data for render\n  _extractDataSeries = data => {\n    const {formatTitle, getY} = this.props;\n    const series = [];\n\n    for (const key in data) {\n      const value = data[key];\n      if (Array.isArray(value)) {\n        const displayName = formatTitle(key);\n        const yExtent = extent(value, getY);\n        series.push({\n          key,\n          displayName,\n          color: this._getColor(key),\n          data: value,\n          extent: yExtent,\n          max: Math.max(Math.abs(yExtent[0]), Math.abs(yExtent[1]))\n        });\n      }\n    }\n\n    // Sort data series by max value\n    series.sort((s1, s2) => s2.max - s1.max);\n\n    return series;\n  };\n\n  // Check if a certain data series is turned on by user settings\n  _isDataVisible = key => {\n    const {showTopSeriesOnly, dataVisibility} = this.state;\n    const dataSeries = this.extractDataSeries(this.props.data);\n\n    if (dataVisibility[key] === false) {\n      // turned of by the user\n      return false;\n    }\n    if (showTopSeriesOnly) {\n      const {topSeriesCount} = this.props;\n      return dataSeries.findIndex(s => s.key === key) < topSeriesCount;\n    }\n    return true;\n  };\n\n  _setHoveredDataName = key => {\n    this.setState({hoveredSeriesName: key});\n  };\n\n  _toggleDataVisibility = key => {\n    const {dataVisibility} = this.state;\n\n    this.setState({\n      dataVisibility: {\n        ...dataVisibility,\n        // at start, all streams have undefined which is treated as visible\n        [key]: dataVisibility[key] === false\n      }\n    });\n  };\n\n  // Legends (also as visibility toggle) of the data streams\n  _renderDataFilters() {\n    const {showTopSeriesOnly, hoveredSeriesName} = this.state;\n    const {theme, style, topSeriesCount} = this.props;\n    const dataSeries = this.extractDataSeries(this.props.data);\n\n    const series = showTopSeriesOnly ? dataSeries.slice(0, topSeriesCount) : dataSeries;\n\n    return (\n      <FilterContainer theme={theme} userStyle={style.filter} isExpanded={!showTopSeriesOnly}>\n        {dataSeries.length > topSeriesCount && (\n          <FilterToggle\n            theme={theme}\n            userStyle={style.filterToggle}\n            isExpanded={!showTopSeriesOnly}\n            onClick={() => this.setState({showTopSeriesOnly: !showTopSeriesOnly})}\n          >\n            {showTopSeriesOnly\n              ? style.iconCollapsed || <CollapsedIcon />\n              : style.iconExpanded || <ExpandedIcon />}\n          </FilterToggle>\n        )}\n\n        {series.map(s => {\n          const styleProps = {\n            theme,\n            name: s.key,\n            displayName: s.displayName,\n            color: s.color,\n            isHovered: hoveredSeriesName === s.key,\n            isActive: this._isDataVisible(s.key)\n          };\n\n          return (\n            <FilterItem\n              userStyle={style.filterItem}\n              {...styleProps}\n              key={`multiplot-${s.key}`}\n              onMouseOver={() => this._setHoveredDataName(s.key)}\n              onMouseOut={() => this._setHoveredDataName(null)}\n              onClick={() => this._toggleDataVisibility(s.key)}\n            >\n              <FilterLegend {...styleProps} userStyle={style.filterLegend}>\n                {styleProps.isActive ? style.iconOn || <CheckAltIcon /> : style.iconOff}\n              </FilterLegend>\n              <span>{s.displayName}</span>\n            </FilterItem>\n          );\n        })}\n      </FilterContainer>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <MetricChart\n          {...this.props}\n          highlightSeries={this.state.hoveredSeriesName}\n          onSeriesMouseOver={key => this._setHoveredDataName(key)}\n          onMouseLeave={() => this._setHoveredDataName(null)}\n          dataFilter={this._isDataVisible}\n        />\n        {this._renderDataFilters()}\n      </div>\n    );\n  }\n}\n\nexport default withTheme(MetricChartWithLegends);\n"],"file":"rich-metric-chart.js"}