{"version":3,"sources":["../../../src/utils/memoize.js"],"names":["isEqual","arr1","arr2","len","length","i","memoize","compute","cachedArgs","cachedResult","memoizedFunc","arguments","apply","Array","from"],"mappings":"AAmBA,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6B;AAC3B,MAAMC,GAAG,GAAGF,IAAI,CAACG,MAAjB;;AACA,MAAID,GAAG,KAAKD,IAAI,CAACE,MAAjB,EAAyB;AACvB,WAAO,KAAP;AACD;;AACD,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAC5B,QAAIJ,IAAI,CAACI,CAAD,CAAJ,KAAYH,IAAI,CAACG,CAAD,CAApB,EAAyB;AACvB,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD;;AAOD,eAAe,SAASC,OAAT,CAAiBC,OAAjB,EAA0B;AACvC,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,YAAJ;AAEA,SAAO,SAASC,YAAT,GAAwB;AAC7B,QAAI,CAACV,OAAO,CAACW,SAAD,EAAYH,UAAZ,CAAZ,EAAqC;AACnCC,MAAAA,YAAY,GAAGF,OAAO,CAACK,KAAR,CAAc,IAAd,EAAoBD,SAApB,CAAf;AACAH,MAAAA,UAAU,GAAGK,KAAK,CAACC,IAAN,CAAWH,SAAX,CAAb;AACD;;AACD,WAAOF,YAAP;AACD,GAND;AAOD","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nfunction isEqual(arr1, arr2) {\n  const len = arr1.length;\n  if (len !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Speed up consecutive function calls by caching the result of calls with identical input\n * https://en.wikipedia.org/wiki/Memoization\n * @param {function} compute - the function to be memoized\n */\nexport default function memoize(compute) {\n  let cachedArgs = [];\n  let cachedResult;\n\n  return function memoizedFunc() {\n    if (!isEqual(arguments, cachedArgs)) {\n      cachedResult = compute.apply(this, arguments);\n      cachedArgs = Array.from(arguments);\n    }\n    return cachedResult;\n  };\n}\n"],"file":"memoize.js"}