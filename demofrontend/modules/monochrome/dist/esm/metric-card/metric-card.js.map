{"version":3,"sources":["../../../src/metric-card/metric-card.js"],"names":["React","PureComponent","PropTypes","Spinner","Tooltip","withTheme","CardContainer","CardTitle","ErrorMessage","MetricCard","props","theme","style","error","isLoading","className","title","description","styleProps","hasError","Boolean","wrapper","tooltip","children","spinner","string","oneOfType","element","object","bool"],"mappings":";;;;;;;;;;;;AAmBA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AAEA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,SAAQC,aAAR,EAAuBC,SAAvB,EAAkCC,YAAlC,QAAqD,qBAArD;;IAMMC,U;;;;;;;;;;;;;6BAuBK;AAAA,wBACiE,KAAKC,KADtE;AAAA,UACAC,KADA,eACAA,KADA;AAAA,UACOC,KADP,eACOA,KADP;AAAA,UACcC,KADd,eACcA,KADd;AAAA,UACqBC,SADrB,eACqBA,SADrB;AAAA,UACgCC,SADhC,eACgCA,SADhC;AAAA,UAC2CC,KAD3C,eAC2CA,KAD3C;AAAA,UACkDC,WADlD,eACkDA,WADlD;AAEP,UAAMC,UAAU,GAAG;AACjBP,QAAAA,KAAK,EAALA,KADiB;AAEjBQ,QAAAA,QAAQ,EAAEC,OAAO,CAACP,KAAD,CAFA;AAGjBC,QAAAA,SAAS,EAATA;AAHiB,OAAnB;AAMA,aACE,oBAAC,aAAD;AAAe,QAAA,SAAS,EAAEC;AAA1B,SAAyCG,UAAzC;AAAqD,QAAA,SAAS,EAAEN,KAAK,CAACS;AAAtE,UACGL,KAAK,IACJ,oBAAC,SAAD,eAAeE,UAAf;AAA2B,QAAA,SAAS,EAAEN,KAAK,CAACI;AAA5C,UACE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEJ,KAAK,CAACU,OAAtB;AAA+B,QAAA,OAAO,EAAEL;AAAxC,SACGD,KADH,CADF,CAFJ,EASG,CAACF,SAAD,IAAc,CAACD,KAAf,IAAwB,KAAKH,KAAL,CAAWa,QATtC,EAUGT,SAAS,IAAI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEF,KAAK,CAACY;AAAtB,QAVhB,EAWGX,KAAK,IACJ,oBAAC,YAAD,eAAkBK,UAAlB;AAA8B,QAAA,SAAS,EAAEN,KAAK,CAACC;AAA/C,UACGA,KADH,CAZJ,CADF;AAmBD;;;;EAlDsBZ,a;;gBAAnBQ,U,eACe;AACjBM,EAAAA,SAAS,EAAEb,SAAS,CAACuB,MADJ;AAEjBT,EAAAA,KAAK,EAAEd,SAAS,CAACwB,SAAV,CAAoB,CAACxB,SAAS,CAACuB,MAAX,EAAmBvB,SAAS,CAACyB,OAA7B,CAApB,CAFU;AAGjBV,EAAAA,WAAW,EAAEf,SAAS,CAACwB,SAAV,CAAoB,CAACxB,SAAS,CAACuB,MAAX,EAAmBvB,SAAS,CAACyB,OAA7B,CAApB,CAHI;AAKjBf,EAAAA,KAAK,EAAEV,SAAS,CAAC0B,MALA;AAMjBf,EAAAA,KAAK,EAAEX,SAAS,CAACuB,MANA;AAOjBX,EAAAA,SAAS,EAAEZ,SAAS,CAAC2B,IAPJ;AASjBN,EAAAA,QAAQ,EAAErB,SAAS,CAACyB;AATH,C;;gBADflB,U,kBAakB;AACpBM,EAAAA,SAAS,EAAE,EADS;AAEpBC,EAAAA,KAAK,EAAE,EAFa;AAGpBC,EAAAA,WAAW,EAAE,EAHO;AAKpBL,EAAAA,KAAK,EAAE,EALa;AAMpBC,EAAAA,KAAK,EAAE,IANa;AAOpBC,EAAAA,SAAS,EAAE;AAPS,C;;AAwCxB,eAAeT,SAAS,CAACI,UAAD,CAAxB","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../shared/spinner';\nimport {Tooltip} from '../shared/popover';\n\nimport {withTheme} from '../shared/theme';\nimport {CardContainer, CardTitle, ErrorMessage} from './styled-components';\n\n/**\n * MetricCard places a chart in a container with padding, title,\n * selection marker etc\n */\nclass MetricCard extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    description: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\n    style: PropTypes.object,\n    error: PropTypes.string,\n    isLoading: PropTypes.bool,\n\n    children: PropTypes.element\n  };\n\n  static defaultProps = {\n    className: '',\n    title: '',\n    description: '',\n\n    style: {},\n    error: null,\n    isLoading: false\n  };\n\n  render() {\n    const {theme, style, error, isLoading, className, title, description} = this.props;\n    const styleProps = {\n      theme,\n      hasError: Boolean(error),\n      isLoading\n    };\n\n    return (\n      <CardContainer className={className} {...styleProps} userStyle={style.wrapper}>\n        {title && (\n          <CardTitle {...styleProps} userStyle={style.title}>\n            <Tooltip style={style.tooltip} content={description}>\n              {title}\n            </Tooltip>\n          </CardTitle>\n        )}\n\n        {!isLoading && !error && this.props.children}\n        {isLoading && <Spinner style={style.spinner} />}\n        {error && (\n          <ErrorMessage {...styleProps} userStyle={style.error}>\n            {error}\n          </ErrorMessage>\n        )}\n      </CardContainer>\n    );\n  }\n}\n\nexport default withTheme(MetricCard);\n"],"file":"metric-card.js"}