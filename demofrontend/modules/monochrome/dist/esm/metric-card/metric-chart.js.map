{"version":3,"sources":["../../../src/metric-card/metric-chart.js"],"names":["React","PureComponent","PropTypes","findNearestValue","Chart","memoize","MetricChart","props","highlightX","data","Number","isFinite","getX","result","key","hasOwnProperty","evt","onClick","state","hoveredX","value","hoveredValues","setState","isHovered","onNearestX","onMouseLeave","getCurrentValues","_getCurrentValues","currentValues","_onClick","_onNearestX","_onMouseLeave","Object","assign","number","propTypes","defaultProps"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {findNearestValue} from './utils';\nimport Chart from './chart';\nimport memoize from '../utils/memoize';\n\n/**\n * A metric chart draws a chart with optional percentiles and lags\n */\nexport default class MetricChart extends PureComponent {\n  static propTypes = Object.assign(\n    {\n      highlightX: PropTypes.number\n    },\n    Chart.propTypes\n  );\n\n  static defaultProps = Chart.defaultProps;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isHovered: false,\n      hoveredX: null,\n      // The nearest data point to the cursor in each series\n      hoveredValues: {}\n    };\n\n    this.getCurrentValues = memoize(this._getCurrentValues);\n  }\n\n  // Find the closest data point in each series to the current time\n  _getCurrentValues = (highlightX, data) => {\n    if (!Number.isFinite(highlightX) || !data) {\n      return null;\n    }\n\n    const {getX} = this.props;\n\n    const result = {};\n    for (const key in data) {\n      if (data.hasOwnProperty(key)) {\n        result[key] = findNearestValue(data[key], highlightX, getX);\n      }\n    }\n    return result;\n  };\n\n  _onClick = evt => {\n    this.props.onClick(this.state.hoveredX, evt);\n  };\n\n  _onNearestX = (key, value, evt) => {\n    const {hoveredValues} = this.state;\n    hoveredValues[key] = value;\n\n    this.setState({\n      isHovered: true,\n      hoveredX: this.props.getX(value),\n      hoveredValues: {...hoveredValues}\n    });\n\n    this.props.onNearestX(key, value, evt);\n  };\n\n  _onMouseLeave = evt => {\n    this.setState({isHovered: false, hoveredX: null});\n    this.props.onMouseLeave(evt);\n  };\n\n  render() {\n    const {highlightX, data} = this.props;\n    const {isHovered, hoveredValues} = this.state;\n    const currentValues = this.getCurrentValues(highlightX, data);\n\n    return (\n      <Chart\n        {...this.props}\n        onClick={this._onClick}\n        onNearestX={this._onNearestX}\n        onMouseLeave={this._onMouseLeave}\n        highlightValues={isHovered ? hoveredValues : currentValues}\n      />\n    );\n  }\n}\n"],"file":"metric-chart.js"}